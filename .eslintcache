[{"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Navigation.tsx":"1","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/MultiSelect.tsx":"2","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/SingleSelect.tsx":"3","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/CreateBrand.page.tsx":"4","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx":"5","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/SubCategory/SubCategory.tsx":"6","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/user.slice.ts":"7","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/ProgressBar.tsx":"8","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/CreateCategory.page.tsx":"9","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/Coupon.page.tsx":"10","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/notificationBox/ErrorBox.tsx":"11","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/repository.ts":"12","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/category.request.ts":"13","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/repository.ts":"14","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Checkbox.tsx":"15","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/SignUp.tsx":"16","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/LoadingCard.tsx":"17","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/Table.tsx":"18","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Flexbox.tsx":"19","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brand.page.tsx":"20","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/Slider.page.tsx":"21","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/Settings.page.tsx":"22","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/styled-components.ts":"23","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/styled-components.ts":"24","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brands.tsx":"25","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithoutToken.tsx":"26","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/ThemeSelecting.tsx":"27","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/datePicker/DatePick.tsx":"28","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/richTextEditor/TinyEditor.tsx":"29"},{"size":2898,"mtime":1620570299516,"results":"30","hashOfConfig":"31"},{"size":2003,"mtime":1620572283077,"results":"32","hashOfConfig":"31"},{"size":1700,"mtime":1620570560701,"results":"33","hashOfConfig":"31"},{"size":6185,"mtime":1620571350196,"results":"34","hashOfConfig":"31"},{"size":13993,"mtime":1620571993241,"results":"35","hashOfConfig":"31"},{"size":3339,"mtime":1620571491459,"results":"36","hashOfConfig":"31"},{"size":823,"mtime":1616437925158,"results":"37","hashOfConfig":"31"},{"size":328,"mtime":1619278931572,"results":"38","hashOfConfig":"31"},{"size":5052,"mtime":1620571917634,"results":"39","hashOfConfig":"31"},{"size":5544,"mtime":1619278739276,"results":"40","hashOfConfig":"31"},{"size":2167,"mtime":1620071763520,"results":"41","hashOfConfig":"31"},{"size":316,"mtime":1620571993246,"results":"42","hashOfConfig":"31"},{"size":1872,"mtime":1619279960116,"results":"43","hashOfConfig":"31"},{"size":461,"mtime":1620571491353,"results":"44","hashOfConfig":"31"},{"size":1101,"mtime":1618587801800,"results":"45","hashOfConfig":"31"},{"size":2061,"mtime":1620571350193,"results":"46","hashOfConfig":"31"},{"size":734,"mtime":1618954549518,"results":"47","hashOfConfig":"31"},{"size":8292,"mtime":1620572130682,"results":"48","hashOfConfig":"31"},{"size":1893,"mtime":1620570299520,"results":"49","hashOfConfig":"31"},{"size":4348,"mtime":1619278739273,"results":"50","hashOfConfig":"31"},{"size":1172,"mtime":1619278739280,"results":"51","hashOfConfig":"31"},{"size":713,"mtime":1619278739260,"results":"52","hashOfConfig":"31"},{"size":903,"mtime":1619039958020,"results":"53","hashOfConfig":"31"},{"size":1351,"mtime":1620570299545,"results":"54","hashOfConfig":"31"},{"size":3642,"mtime":1620570299543,"results":"55","hashOfConfig":"31"},{"size":664,"mtime":1616846829191,"results":"56","hashOfConfig":"31"},{"size":3107,"mtime":1618830487285,"results":"57","hashOfConfig":"31"},{"size":805,"mtime":1620570299518,"results":"58","hashOfConfig":"31"},{"size":2795,"mtime":1619039967550,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y767x1",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Navigation.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/MultiSelect.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/SingleSelect.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/CreateBrand.page.tsx",["123","124","125","126"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx",["127","128","129"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/SubCategory/SubCategory.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/user.slice.ts",[],["130","131"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/ProgressBar.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/CreateCategory.page.tsx",["132","133","134"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { v4 as uuid } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n//components\nimport Input from '../../components/common/input/Input';\nimport Button from '../../components/common/Button';\nimport Divider from '../../components/common/Divider';\nimport SubCategory from './SubCategory/SubCategory';\nimport Brands from '../Brand/Brands';\nimport Products from '../Product/Products';\nimport Flexbox from '../../components/hoc/Flexbox';\nimport HeaderLine from '../../components/common/HeaderLine';\nimport BorderedBox from '../../components/hoc/BorderedBox';\n//types\nimport { CategoryType, SubCategoryType } from '../../redux/types/category.type';\n//request\nimport {\n  CREATE_CATEGORY,\n  UPDATE_CATEGORY,\n  GET_CATEGORY_BY_ID,\n} from '../../redux/requests/category.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n//repository\nimport { QueryState, initialState } from './repository';\n\ntype Props = {};\n\nconst CreateCategory: React.FC<Props> = (props) => {\n  const history = useHistory<QueryState>();\n  const dispatch = useDispatch();\n  //requests\n  const [CreateCategory, createResponse] = useMutation(CREATE_CATEGORY);\n  const [UpdateCategory, updateResponse] = useMutation(UPDATE_CATEGORY);\n  const [GetCategoryById, getResponse] = useLazyQuery(GET_CATEGORY_BY_ID);\n  //state\n  const [state, setState] = useState<Partial<CategoryType>>({\n    id: uuid(),\n    ...initialState,\n  });\n  const { mode, selected: id } = history.location.state;\n\n  useEffect(() => {\n    (async function () {\n      if (mode === 'update') {\n        await getCategoryById(id[0]);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const payload = getResponse.data.getCategoryById;\n      setState(payload);\n    }\n  }, [getResponse.data]);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push('/categories');\n    }\n  }, [createResponse.data]);\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push('/categories');\n    }\n  }, [updateResponse.data]);\n\n  function _onSubCategoryChange(val: SubCategoryType[]): void {\n    setState({ ...state, subCategories: val });\n  }\n\n  async function getCategoryById(id: string): Promise<void> {\n    try {\n      await GetCategoryById({\n        variables: { id },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateCategory({\n        variables: {\n          newCategory: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateCategory({\n        variables: {\n          updatedCategory: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  return (\n    <>\n      <HeaderLine label=\"Create category\" goBack={true} />\n      <BorderedBox>\n        <Body>\n          <Input\n            type=\"text\"\n            label=\"Name\"\n            name=\"name\"\n            value={state.name}\n            getValue={(val: string) => setState({ ...state, name: val })}\n            required={true}\n          />\n          <Input\n            type=\"text\"\n            label=\"Tab Name\"\n            name=\"tabName\"\n            value={state.tabName}\n            getValue={(val: string) => setState({ ...state, tabName: val })}\n            required={true}\n          />\n        </Body>\n        <SubCategory\n          parentId={state.id!}\n          subCategories={state.subCategories!}\n          getValue={_onSubCategoryChange}\n        />\n        <FooterPanel>\n          {mode === 'create' ? (\n            <Button\n              appearance=\"primary\"\n              label=\"Create\"\n              onAction={_onSave}\n              cls=\"m-0 mr-3\"\n            />\n          ) : (\n            <Button\n              appearance=\"primary\"\n              label=\"Update\"\n              onAction={_onUpdate}\n              cls=\"m-0 mr-3\"\n            />\n          )}\n          <Button\n            appearance=\"primary\"\n            label=\"Reset fields\"\n            onAction={() => setState(initialState)}\n            cls=\"m-0 mr-3\"\n          />\n        </FooterPanel>\n        {mode === 'update' ? (\n          <InfoCardsWrap>\n            <Divider label=\"Connections\" />\n            <Flexbox cls=\"np\" align=\"start\">\n              <Brands id={id[0]} />\n              <Products id={id[0]} />\n            </Flexbox>\n          </InfoCardsWrap>\n        ) : null}\n      </BorderedBox>\n    </>\n  );\n};\n\nCreateCategory.defaultProps = {};\n\nexport default CreateCategory;\n\nconst Body = styled(Flexbox)`\n  padding: 0;\n  margin: 10px 0 20px 0;\n  gap: 10px;\n`;\n\nconst FooterPanel = styled(Flexbox)`\n  margin-top: 10px;\n  padding: 0;\n  gap: 10px;\n`;\n\nconst InfoCardsWrap = styled.div`\n  div {\n    gap: 10px;\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/Coupon.page.tsx",["135"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/notificationBox/ErrorBox.tsx",["136"],"import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FaRegWindowClose } from 'react-icons/fa';\n//components\nimport Flexbox from '../../hoc/Flexbox';\n\ntype Props = {\n  message?: string;\n  details?: any;\n  getEvent: () => void;\n};\n\nconst ErrorBox: React.FC<Props> = ({ message, details, getEvent }) => {\n  const statusCode = details?.extensions?.exception?.response?.statusCode;\n\n  return (\n    <Container>\n      <Flexbox flex=\"column\" align=\"start\">\n        <ul>\n          <li>\n            <span>Code: </span>\n            <span>{statusCode}</span>\n          </li>\n          <li>\n            <span>Exception: </span>\n            <span>{message}</span>\n          </li>\n          <li>\n            <span>Details: </span>\n            <span>\n              {typeof details?.extensions?.exception?.response?.message ===\n              'object'\n                ? details?.extensions.exception.response.message.map(\n                    (dm: string, idx: number) => (\n                      <strong key={idx}>[ {dm} ]</strong>\n                    ),\n                  )\n                : null}\n            </span>\n          </li>\n        </ul>\n      </Flexbox>\n\n      <FaRegWindowClose size={20} onClick={getEvent} />\n    </Container>\n  );\n};\n\nErrorBox.defaultProps = {\n  message: 'Something went wrong',\n  details: [],\n  getEvent: () => false,\n};\n\nexport default ErrorBox;\n\nconst Container = styled(Flexbox)`\n  padding: 20px;\n  border-radius: 5px;\n  border-top: ${({ theme }) => `4px solid ${theme.colors.lightBorder}`};\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  z-index: 8;\n  width: 100%;\n  min-width: calc(100% - 40px);\n  height: 200px;\n  background-color: ${({ theme }) => theme.colors.background};\n\n  & > div {\n    flex: 1;\n\n    li span:first-child {\n      display: inline-block;\n      color: ${({ theme }) => theme.colors.color};\n      min-width: 77px;\n    }\n\n    span,\n    strong {\n      margin-right: 5px;\n      color: ${({ theme }) => theme.colors.error};\n      font-size: ${({ theme }) => theme.fontSize.md + 'px'};\n    }\n  }\n\n  svg {\n    cursor: pointer;\n    path {\n      fill: ${({ theme }) => theme.colors.color};\n    }\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/repository.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/category.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/repository.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Checkbox.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/SignUp.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/LoadingCard.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/Table.tsx",[],["137","138"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Flexbox.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brand.page.tsx",["139"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/Slider.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/Settings.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/styled-components.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/styled-components.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brands.tsx",["140"],"import React, { memo, useEffect, useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport styled from 'styled-components';\n//components\nimport Flexbox from '../../components/hoc/Flexbox';\n//request\nimport { GET_BRANDS_BY_CATEGORY_ID } from '../../redux/requests/brand.request';\n//types\nimport { BrandType } from '../../redux/types/brand.type';\n\ntype Props = {\n  id: string;\n};\n\nconst Brands: React.FC<Props> = memo(({ id }) => {\n  //graphql\n  const [GetBrandsByCategoryId, brandsResponse] = useLazyQuery(\n    GET_BRANDS_BY_CATEGORY_ID,\n  );\n  //state\n  const [brands, setBrands] = useState<BrandType[]>([]);\n\n  useEffect(() => {\n    (async function () {\n      await getBrandsByCategoryId();\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (brandsResponse.data) {\n      const payload = brandsResponse.data.getBrandsByCategoryId;\n      setBrands(payload);\n    }\n  }, [brandsResponse]);\n\n  async function getBrandsByCategoryId(): Promise<void> {\n    try {\n      await GetBrandsByCategoryId({\n        variables: {\n          id,\n        },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Container flex=\"column\" align=\"start\">\n      <Flexbox cls=\"header np\" justify=\"between\">\n        <h3>Brands</h3>\n        <Flexbox cls=\"np count-wrap\" justify=\"end\">\n          <small>{brands.length}</small>\n        </Flexbox>\n      </Flexbox>\n      {brands.length ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Brand name</th>\n              <th>Also connected</th>\n            </tr>\n          </thead>\n          <tbody>\n            {brands.map((brand, i) => (\n              <tr key={i}>\n                <td>{brand.name}</td>\n                <td>\n                  {brand.category.map((cat: any, idx) => {\n                    if (cat.id !== id) {\n                      return <span key={idx}>{cat.name}</span>;\n                    }\n                    return '';\n                  })}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <span className=\"no-data\">No brands</span>\n      )}\n    </Container>\n  );\n});\n\nBrands.defaultProps = {};\n\nexport default Brands;\n\nconst Container = styled(Flexbox)`\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 4px;\n  border-width: 2px 4px 2px 2px;\n  border-style: solid;\n  border-color: ${({ theme }) => theme.colors.border};\n  padding: 10px;\n  min-width: 300px;\n  max-width: 500px;\n\n  .header {\n    min-height: 40px !important;\n    border-width: 0 0 2px 0;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.colors.border};\n\n    h3 {\n      font-weight: bold;\n      margin: 0;\n    }\n\n    .count-wrap {\n      small {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: ${({ theme }) => theme.colors.errorLight};\n        border-right: ${({ theme }) => `4px solid ${theme.colors.error}`};\n        color: ${({ theme }) => theme.colors.white};\n        border-radius: 5px;\n        width: 40px;\n        height: 20px;\n        text-align: center;\n        font-weight: bold;\n        font-size: ${({ theme }) => theme.fontSize.xs + 'px'};\n      }\n    }\n  }\n\n  table {\n    width: 100%;\n    border-collapse: separate;\n    overflow: auto;\n    white-space: nowrap;\n    border-radius: 3px;\n\n    th,\n    td {\n      text-align: left;\n      border-width: 1px;\n      border-style: solid;\n      border-color: ${({ theme }) => theme.colors.border};\n      padding: 3px;\n    }\n  }\n\n  .no-data {\n    display: block;\n    margin-top: 10px;\n  }\n\n  @media (max-width: 789px) {\n    max-width: 100%;\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithoutToken.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/ThemeSelecting.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/datePicker/DatePick.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/richTextEditor/TinyEditor.tsx",[],{"ruleId":"141","severity":1,"message":"142","line":56,"column":6,"nodeType":"143","endLine":56,"endColumn":8,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":80,"column":6,"nodeType":"143","endLine":80,"endColumn":8,"suggestions":"146"},{"ruleId":"141","severity":1,"message":"147","line":105,"column":6,"nodeType":"143","endLine":105,"endColumn":27,"suggestions":"148"},{"ruleId":"141","severity":1,"message":"147","line":111,"column":6,"nodeType":"143","endLine":111,"endColumn":27,"suggestions":"149"},{"ruleId":"141","severity":1,"message":"150","line":67,"column":6,"nodeType":"143","endLine":67,"endColumn":8,"suggestions":"151"},{"ruleId":"141","severity":1,"message":"147","line":123,"column":6,"nodeType":"143","endLine":123,"endColumn":27,"suggestions":"152"},{"ruleId":"141","severity":1,"message":"147","line":129,"column":6,"nodeType":"143","endLine":129,"endColumn":27,"suggestions":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"141","severity":1,"message":"158","line":52,"column":6,"nodeType":"143","endLine":52,"endColumn":8,"suggestions":"159"},{"ruleId":"141","severity":1,"message":"147","line":65,"column":6,"nodeType":"143","endLine":65,"endColumn":27,"suggestions":"160"},{"ruleId":"141","severity":1,"message":"147","line":71,"column":6,"nodeType":"143","endLine":71,"endColumn":27,"suggestions":"161"},{"ruleId":"141","severity":1,"message":"162","line":55,"column":6,"nodeType":"143","endLine":55,"endColumn":8,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"154","replacedBy":"168"},{"ruleId":"156","replacedBy":"169"},{"ruleId":"141","severity":1,"message":"170","line":48,"column":6,"nodeType":"143","endLine":48,"endColumn":8,"suggestions":"171"},{"ruleId":"141","severity":1,"message":"172","line":27,"column":6,"nodeType":"143","endLine":27,"endColumn":8,"suggestions":"173"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has missing dependencies: 'getBrandById', 'id', and 'mode'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["176"],["177"],"React Hook useEffect has missing dependencies: 'getBrands', 'getCategories', 'getCoupons', 'getProductById', and 'history.location.state'. Either include them or remove the dependency array.",["178"],["179"],["180"],"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"React Hook useEffect has missing dependencies: 'getCategoryById', 'id', and 'mode'. Either include them or remove the dependency array.",["183"],["184"],["185"],"React Hook useEffect has missing dependencies: 'currentPage', 'dateRange.from', 'dateRange.to', 'deepSearch', 'getCoupons', and 'rowCount'. Either include them or remove the dependency array.",["186"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["181"],["182"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getBrands', and 'rowCount'. Either include them or remove the dependency array.",["187"],"React Hook useEffect has a missing dependency: 'getBrandsByCategoryId'. Either include it or remove the dependency array.",["188"],{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"193","fix":"199"},{"desc":"195","fix":"200"},"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"193","fix":"203"},{"desc":"195","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [getCategories]",{"range":"211","text":"212"},"Update the dependencies array to be: [getBrandById, id, mode]",{"range":"213","text":"214"},"Update the dependencies array to be: [createResponse.data, history]",{"range":"215","text":"216"},"Update the dependencies array to be: [history, updateResponse.data]",{"range":"217","text":"218"},"Update the dependencies array to be: [getBrands, getCategories, getCoupons, getProductById, history.location.state]",{"range":"219","text":"220"},{"range":"221","text":"216"},{"range":"222","text":"218"},"Update the dependencies array to be: [getCategoryById, id, mode]",{"range":"223","text":"224"},{"range":"225","text":"216"},{"range":"226","text":"218"},"Update the dependencies array to be: [currentPage, dateRange.from, dateRange.to, deepSearch, getCoupons, rowCount]",{"range":"227","text":"228"},"Update the dependencies array to be: [currentPage, deepSearch, getBrands, rowCount]",{"range":"229","text":"230"},"Update the dependencies array to be: [getBrandsByCategoryId]",{"range":"231","text":"232"},[1933,1935],"[getCategories]",[2549,2551],"[getBrandById, id, mode]",[3225,3246],"[createResponse.data, history]",[3343,3364],"[history, updateResponse.data]",[2782,2784],"[getBrands, getCategories, getCoupons, getProductById, history.location.state]",[4177,4198],[4297,4318],[1822,1824],"[getCategoryById, id, mode]",[2087,2108],[2209,2230],[1750,1752],"[currentPage, dateRange.from, dateRange.to, deepSearch, getCoupons, rowCount]",[1574,1576],"[currentPage, deepSearch, getBrands, rowCount]",[728,730],"[getBrandsByCategoryId]"]