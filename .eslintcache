[{"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/index.tsx":"1","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/roles.slice.ts":"2","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/storage.utils.ts":"3","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/user.request.ts":"4","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithToken.tsx":"5","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/config/routes.tsx":"6","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/notificationBox/index.tsx":"7","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/CreateUser.page.tsx":"8","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/User.page.tsx":"9","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/Slider.page.tsx":"10","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/HeaderLine.tsx":"11","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/MultiSelect.tsx":"12","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/UploadZone.tsx":"13","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/SubCategories.tsx":"14","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Header.tsx":"15","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/LoadingCard.tsx":"16","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-best/SliderBest.tsx":"17","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/reportWebVitals.ts":"18","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/net-status.slice.ts":"19","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithoutToken.tsx":"20","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Auth.page.tsx":"21","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/CreateCoupon.page.tsx":"22","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/notificationBox/ErrorBox.tsx":"23","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Layout.tsx":"24","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Checkbox.tsx":"25","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/main.request.ts":"26","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/SystemUsage.tsx":"27","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/table/body.handler..ts":"28","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/store.ts":"29","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Main.page.tsx":"30","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx":"31","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/richTextEditor/TinyEditor.tsx":"32","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Login.tsx":"33","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Button.tsx":"34"},{"size":1387,"mtime":1618244490144,"results":"35","hashOfConfig":"36"},{"size":231,"mtime":1616437925158,"results":"37","hashOfConfig":"36"},{"size":1012,"mtime":1616846829206,"results":"38","hashOfConfig":"36"},{"size":1804,"mtime":1617731574624,"results":"39","hashOfConfig":"36"},{"size":928,"mtime":1617656419181,"results":"40","hashOfConfig":"36"},{"size":3979,"mtime":1618244490144,"results":"41","hashOfConfig":"36"},{"size":933,"mtime":1618425383823,"results":"42","hashOfConfig":"36"},{"size":4189,"mtime":1617731652842,"results":"43","hashOfConfig":"36"},{"size":4387,"mtime":1617127346336,"results":"44","hashOfConfig":"36"},{"size":4654,"mtime":1618253488169,"results":"45","hashOfConfig":"36"},{"size":1044,"mtime":1617655875993,"results":"46","hashOfConfig":"36"},{"size":1595,"mtime":1618244490143,"results":"47","hashOfConfig":"36"},{"size":7798,"mtime":1618244490143,"results":"48","hashOfConfig":"36"},{"size":3495,"mtime":1617454894299,"results":"49","hashOfConfig":"36"},{"size":3146,"mtime":1617638782300,"results":"50","hashOfConfig":"36"},{"size":734,"mtime":1616846829199,"results":"51","hashOfConfig":"36"},{"size":2609,"mtime":1618255250937,"results":"52","hashOfConfig":"36"},{"size":425,"mtime":1616437925159,"results":"53","hashOfConfig":"36"},{"size":521,"mtime":1617733665229,"results":"54","hashOfConfig":"36"},{"size":664,"mtime":1616846829191,"results":"55","hashOfConfig":"36"},{"size":741,"mtime":1616437925154,"results":"56","hashOfConfig":"36"},{"size":8912,"mtime":1617736591447,"results":"57","hashOfConfig":"36"},{"size":1810,"mtime":1618425387250,"results":"58","hashOfConfig":"36"},{"size":1331,"mtime":1616846829190,"results":"59","hashOfConfig":"36"},{"size":1073,"mtime":1616846829187,"results":"60","hashOfConfig":"36"},{"size":306,"mtime":1616437925157,"results":"61","hashOfConfig":"36"},{"size":4276,"mtime":1616846829200,"results":"62","hashOfConfig":"36"},{"size":1289,"mtime":1617655488402,"results":"63","hashOfConfig":"36"},{"size":839,"mtime":1618418974238,"results":"64","hashOfConfig":"36"},{"size":2026,"mtime":1617466758001,"results":"65","hashOfConfig":"36"},{"size":14162,"mtime":1618244490145,"results":"66","hashOfConfig":"36"},{"size":2786,"mtime":1618244490144,"results":"67","hashOfConfig":"36"},{"size":2165,"mtime":1617655081475,"results":"68","hashOfConfig":"36"},{"size":716,"mtime":1618426564960,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y767x1",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/index.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/roles.slice.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/storage.utils.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/user.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithToken.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/config/routes.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/notificationBox/index.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/CreateUser.page.tsx",["143","144"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/User.page.tsx",["145"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\n//components\nimport Layout from '../../components/hoc/Layout';\nimport Table from '../../components/table/Table';\n//types\nimport { ProductType } from '../../redux/types/product.type';\n//request\nimport {\n  GET_USERS,\n  DISABLE_USERS,\n  ACTIVATE_USERS,\n  DELETE_USERS,\n} from '../../redux/requests/user.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\nimport HeaderLine from '../../components/common/HeaderLine';\n\ntype Props = {};\n\nconst UserPage: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  //graphql\n  const [GetUsers, getResponse] = useLazyQuery(GET_USERS);\n  const [DisableUsers] = useMutation(DISABLE_USERS);\n  const [ActivateUsers] = useMutation(ACTIVATE_USERS);\n  const [DeleteUsers] = useMutation(DELETE_USERS);\n  //state\n  const [users, setUsers] = useState<ProductType[]>([]);\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [deepSearch, setDeepSearch] = useState<string>('');\n  const [unSelect, setUnSelect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getUsers;\n      setUsers(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data]);\n\n  useEffect(() => {\n    (async function () {\n      await getUsers(currentPage, rowCount, deepSearch);\n    })();\n  }, []);\n\n  async function getUsers(pg: number, rc: number, kw: string): Promise<void> {\n    try {\n      await GetUsers({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw,\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber);\n    await getUsers(pageNumber, rowCount, deepSearch);\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getUsers(currentPage, rc, deepSearch);\n  }\n\n  async function getDeepSearchFromTable(keyword: string): Promise<void> {\n    setDeepSearch(keyword);\n    await getUsers(currentPage, rowCount, keyword);\n  }\n\n  async function getIdsAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableUsers({\n        variables: {\n          disabledUsers: { ids },\n        },\n      });\n      handleUsersState(ids, true);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getIdsAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateUsers({\n        variables: {\n          activateUsers: { ids },\n        },\n      });\n      handleUsersState(ids, false);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getIdsAndDelete(ids: string[]): Promise<void> {\n    try {\n      await DeleteUsers({\n        variables: {\n          deleteUsers: { ids },\n        },\n      });\n      handleUsersList(ids);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function handleUsersState(ids: string[], isDisabled: boolean) {\n    const updatedUsers = users.map((product) => {\n      if (ids.includes(product.id)) {\n        return {\n          ...product,\n          isDisabled,\n        };\n      }\n      return product;\n    });\n    setUsers(updatedUsers);\n  }\n\n  function handleUsersList(ids: string[]) {\n    const deletedUsers = users.filter((user) => !ids.includes(user.id));\n    setUsers(deletedUsers);\n    setUnSelect(true);\n  }\n\n  return (\n    <Layout>\n      <HeaderLine label=\"Users and roles\" />\n      {/*  table */}\n      <Table\n        data={users}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdsAndDisable={getIdsAndDisable}\n        getIdsAndActivate={getIdsAndActivate}\n        getIdsAndDelete={getIdsAndDelete}\n        getDateRange={(val) => false}\n        exclude={['id']}\n        error={!!getResponse.error}\n        path=\"users\"\n        unSelect={unSelect}\n      />\n    </Layout>\n  );\n};\n\nexport default UserPage;\n",["146","147"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/Slider.page.tsx",["148","149","150"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/HeaderLine.tsx",["151"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n//components\nimport BorderedBox from '../hoc/BorderedBox';\nimport Flexbox from '../hoc/Flexbox';\n\ntype Props = {\n  label: string;\n  goBack?: boolean;\n};\n\nconst HeaderLine: React.FC<Props> = ({ label, goBack }) => {\n  const history = useHistory();\n\n  return (\n    <BorderedBox>\n      <HeaderPanel justify=\"between\">\n        <h2>{label}</h2>\n        {goBack ? (\n          <h2 onClick={() => history.goBack()} className=\"hoverable\">\n            Go Back\n          </h2>\n        ) : (\n          <h2 />\n        )}\n      </HeaderPanel>\n    </BorderedBox>\n  );\n};\n\nexport default HeaderLine;\n\nHeaderLine.defaultProps = {\n  label: 'Section',\n  goBack: false,\n};\n\nconst HeaderPanel = styled(Flexbox)`\n  padding: 0;\n\n  h2 {\n    line-height: normal;\n    font-size: ${({ theme }) => theme.fontSize.md + 'px'};\n    color: ${({ theme }) => theme.colors.warning};\n    text-transform: uppercase;\n  }\n\n  h2:last-child {\n    cursor: pointer;\n  }\n`;\n",["152","153"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/MultiSelect.tsx",["154"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/UploadZone.tsx",["155"],"import React, { useEffect, useState, memo } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport styled from 'styled-components';\nimport { Input } from 'rsuite';\n//components\nimport Flexbox from '../hoc/Flexbox';\n//utils\nimport { imageUploadAndGetUrl } from '../../utils/cloudinary.utils';\n\ntype Props = {\n  label?: string;\n  value: string[] | string;\n  multiple: boolean;\n  cls?: string;\n  getValue: (val: string[]) => void;\n  folderInCloud: string;\n  [key: string]: any;\n};\n\nconst UploadZone: React.FC<Props> = memo(\n  ({ label, value, multiple, cls, getValue, folderInCloud, ...props }) => {\n    const [preview, setPreview] = useState<string[]>([]);\n    const [upLoading, setUpLoading] = useState<boolean>(false);\n    const [warning, setWarning] = useState<string>('');\n    const [uploadPercent, setUploadPercent] = useState<number>(0);\n    const [photoIndex, setPhotoIndex] = useState<number>(0);\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n\n    useEffect(() => {\n      if (multiple && typeof value === 'object') {\n        setPreview(value);\n      }\n\n      if (!multiple && typeof value === 'string' && value !== '') {\n        setPreview([value]);\n      }\n    }, [value]);\n\n    async function handleImage(value: any, e: any) {\n      const files = e.currentTarget.files!;\n      const newPreviewList: string[] = [];\n\n      if (files.length >= 5 || preview.length >= 5) {\n        setWarning('Please follow the above instruction');\n        return;\n      }\n\n      setUpLoading(true);\n\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n\n        if (file.size > 524000) {\n          if (multiple) {\n            setWarning('Some of the images size greater than 500KB');\n          } else {\n            setWarning('Image size greater than 500KB');\n          }\n          setUpLoading(false);\n          continue;\n        }\n\n        await imageUploadAndGetUrl(\n          file,\n          folderInCloud,\n          (percent, error, file) => {\n            if (percent) {\n              setUploadPercent(percent);\n            }\n            if (error) {\n              setWarning(error);\n            }\n            if (file) {\n              setUploadPercent(0);\n              setWarning('');\n              if (multiple) {\n                setPreview((prevState) => [file.data.secure_url, ...prevState]);\n                newPreviewList.push(file.data.secure_url);\n              } else {\n                setPreview([file.data.secure_url]);\n                newPreviewList.push(file.data.secure_url);\n              }\n            }\n          },\n        );\n      }\n\n      getValue([...newPreviewList, ...preview]);\n      setUpLoading(false);\n    }\n\n    function _onDeletePreviewImage(e: any, url: string): void {\n      e.stopPropagation();\n      const newPreviewState: string[] = preview.filter((pre) => pre !== url);\n      setPreview(newPreviewState);\n      getValue(newPreviewState);\n    }\n\n    const placeholder = multiple\n      ? 'Click to select an images 🏞️'\n      : 'Click to select an image 🏞️';\n\n    return (\n      <Container cls={cls} flex=\"column\" justify=\"start\" align=\"start\">\n        <Flexbox cls=\"np\" flex=\"column\" align=\"start\">\n          {/*<Flexbox cls=\"np\" justify=\"between\">*/}\n          {/*  <span className={warning ? 'text-red' : 'text-black'}>{label}</span>*/}\n          {/*  {uploadPercent ? <span>{uploadPercent}%</span> : null}*/}\n          {/*</Flexbox>*/}\n          <label htmlFor=\"file-upload\">\n            <Flexbox cls=\"input-wrap gap np\">\n              <Input\n                type=\"file\"\n                id=\"file-upload\"\n                name=\"file-upload\"\n                autoComplete=\"off\"\n                onChange={handleImage}\n                multiple={multiple}\n                accept=\"image/*\"\n                disabled={upLoading}\n              />\n              <Input\n                type=\"text\"\n                value=\"\"\n                readOnly={true}\n                placeholder={warning ? warning : placeholder}\n                {...props}\n              />\n              {uploadPercent ? <span>{uploadPercent}%</span> : null}\n            </Flexbox>\n          </label>\n        </Flexbox>\n\n        {preview.length ? (\n          <Flexbox cls=\"preview-wrap\" wrap=\"no-wrap\">\n            {preview.map((pre, i) => (\n              <Flexbox key={i} flex=\"column\">\n                <div\n                  style={{ backgroundImage: `url(${pre})` }}\n                  onClick={() => {\n                    setPhotoIndex(i);\n                    setIsOpen(true);\n                  }}\n                />\n                <div\n                  className=\"hoverable\"\n                  onClick={(e) => _onDeletePreviewImage(e, pre)}\n                >\n                  Remove\n                </div>\n              </Flexbox>\n            ))}\n          </Flexbox>\n        ) : null}\n\n        {isOpen && (\n          <Lightbox\n            mainSrc={preview[photoIndex]}\n            nextSrc={preview[(photoIndex + 1) % preview.length]}\n            prevSrc={\n              preview[(photoIndex + preview.length - 1) % preview.length]\n            }\n            onCloseRequest={() => setIsOpen(false)}\n            onMovePrevRequest={() =>\n              setPhotoIndex((photoIndex + preview.length - 1) % preview.length)\n            }\n            onMoveNextRequest={() =>\n              setPhotoIndex((photoIndex + 1) % preview.length)\n            }\n          />\n        )}\n      </Container>\n    );\n  },\n  (prevState, nextState) => {\n    if (typeof prevState.value === 'string') {\n      return prevState.value === nextState.value;\n    }\n    return compareDeeper(prevState.value, nextState.value as string[]);\n  },\n);\n\nUploadZone.defaultProps = {\n  label: 'Upload an image',\n  cls: '',\n  value: [],\n  multiple: false,\n};\n\nexport default UploadZone;\n\nfunction compareDeeper(prev: string[], next: string[]): boolean {\n  if (prev.length !== next.length) {\n    return next.every((n, i) => n === prev[i]);\n  }\n  return true;\n}\n\nconst Container = styled(Flexbox)`\n  position: relative;\n  padding: 0;\n  min-width: 340px;\n\n  & > div {\n    .text-black {\n      color: ${({ theme }) => theme.colors.color};\n    }\n    .text-red {\n      color: ${({ theme }) => theme.colors.error};\n    }\n\n    span {\n      font-size: ${({ theme }) => theme.fontSize.sm + 'px'};\n      font-weight: bold;\n      margin-bottom: 5px;\n      color: ${({ theme }) => theme.colors.color};\n    }\n  }\n\n  label {\n    width: 100%;\n  }\n\n  .input-wrap {\n    position: relative;\n\n    input:first-child {\n      flex: 1;\n      position: absolute;\n      width: 100%;\n      padding: 5px;\n      opacity: 0;\n    }\n\n    span {\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      color: ${({ theme }) => theme.colors.color};\n    }\n  }\n\n  .preview-wrap {\n    grid-gap: 10px;\n    padding: 10px;\n    margin-top: 10px;\n    border-radius: 5px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: #e5e5ea;\n    color: ${({ theme }) => theme.colors.color};\n    background-color: ${({ theme }) => theme.colors.background};\n    overflow: auto;\n\n    & > div {\n      padding: 10px 0;\n      min-width: 80px;\n      min-height: 80px;\n      background-color: ${({ theme }) => theme.colors.background};\n      border-radius: 5px;\n\n      & > div:first-child {\n        width: 75px;\n        height: 75px;\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: contain;\n      }\n\n      & > div:last-child {\n        cursor: pointer;\n        color: ${({ theme }) => theme.colors.color};\n        font-size: ${({ theme }) => theme.fontSize.xs + 'px'};\n        text-align: center;\n      }\n    }\n  }\n\n  @media screen and (max-width: 1100px) {\n    min-width: 300px !important;\n  }\n\n  @media screen and (max-width: 500px) {\n    min-width: 200px !important;\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/SubCategories.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Header.tsx",["156"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/LoadingCard.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-best/SliderBest.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/reportWebVitals.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/net-status.slice.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithoutToken.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Auth.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/CreateCoupon.page.tsx",["157","158","159"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/notificationBox/ErrorBox.tsx",["160"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Layout.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Checkbox.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/main.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/SystemUsage.tsx",["161"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/table/body.handler..ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/store.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Main.page.tsx",["162","163","164"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx",["165","166","167"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/richTextEditor/TinyEditor.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Login.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Button.tsx",[],{"ruleId":"168","severity":1,"message":"169","line":58,"column":6,"nodeType":"170","endLine":58,"endColumn":8,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":71,"column":6,"nodeType":"170","endLine":71,"endColumn":27,"suggestions":"173"},{"ruleId":"168","severity":1,"message":"174","line":49,"column":6,"nodeType":"170","endLine":49,"endColumn":8,"suggestions":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":3,"column":18,"nodeType":"182","messageId":"183","endLine":3,"endColumn":22},{"ruleId":"180","severity":1,"message":"184","line":17,"column":21,"nodeType":"182","messageId":"183","endLine":17,"endColumn":31},{"ruleId":"180","severity":1,"message":"185","line":19,"column":7,"nodeType":"182","messageId":"183","endLine":19,"endColumn":12},{"ruleId":"186","severity":1,"message":"187","line":25,"column":11,"nodeType":"188","endLine":25,"endColumn":17},{"ruleId":"176","replacedBy":"189"},{"ruleId":"178","replacedBy":"190"},{"ruleId":"180","severity":1,"message":"191","line":2,"column":23,"nodeType":"182","messageId":"183","endLine":2,"endColumn":35},{"ruleId":"168","severity":1,"message":"192","line":37,"column":8,"nodeType":"170","endLine":37,"endColumn":15,"suggestions":"193"},{"ruleId":"180","severity":1,"message":"194","line":44,"column":11,"nodeType":"182","messageId":"183","endLine":44,"endColumn":15},{"ruleId":"168","severity":1,"message":"195","line":71,"column":6,"nodeType":"170","endLine":71,"endColumn":8,"suggestions":"196"},{"ruleId":"168","severity":1,"message":"172","line":89,"column":6,"nodeType":"170","endLine":89,"endColumn":27,"suggestions":"197"},{"ruleId":"168","severity":1,"message":"172","line":95,"column":6,"nodeType":"170","endLine":95,"endColumn":27,"suggestions":"198"},{"ruleId":"180","severity":1,"message":"199","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"200","line":27,"column":6,"nodeType":"170","endLine":27,"endColumn":14,"suggestions":"201"},{"ruleId":"180","severity":1,"message":"202","line":7,"column":8,"nodeType":"182","messageId":"183","endLine":7,"endColumn":21},{"ruleId":"180","severity":1,"message":"203","line":22,"column":10,"nodeType":"182","messageId":"183","endLine":22,"endColumn":15},{"ruleId":"168","severity":1,"message":"204","line":32,"column":6,"nodeType":"170","endLine":32,"endColumn":8,"suggestions":"205"},{"ruleId":"168","severity":1,"message":"206","line":86,"column":6,"nodeType":"170","endLine":86,"endColumn":8,"suggestions":"207"},{"ruleId":"168","severity":1,"message":"172","line":142,"column":6,"nodeType":"170","endLine":142,"endColumn":27,"suggestions":"208"},{"ruleId":"168","severity":1,"message":"172","line":148,"column":6,"nodeType":"170","endLine":148,"endColumn":27,"suggestions":"209"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUser' and 'location.state?.selected'. Either include them or remove the dependency array.","ArrayExpression",["210"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getUsers', and 'rowCount'. Either include them or remove the dependency array.",["212"],"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"@typescript-eslint/no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'NumberType' is assigned a value but never used.","'model' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["213"],["214"],"'SelectPicker' is defined but never used.","React Hook useEffect has a missing dependency: 'multiple'. Either include it or remove the dependency array.",["215"],"'path' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCouponById' and 'history.location.state'. Either include them or remove the dependency array.",["216"],["217"],["218"],"'useEffect' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["219"],"'StatisticCard' is defined but never used.","'stats' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStatistics'. Either include it or remove the dependency array.",["220"],"React Hook useEffect has missing dependencies: 'getBrands', 'getCategories', 'getCoupons', 'getProductById', and 'history.location.state'. Either include them or remove the dependency array.",["221"],["222"],["223"],{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},"no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"226","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"234","fix":"243"},{"desc":"226","fix":"244"},"Update the dependencies array to be: [getUser, location.state?.selected]",{"range":"245","text":"246"},"Update the dependencies array to be: [history, updateResponse.data]",{"range":"247","text":"248"},"Update the dependencies array to be: [currentPage, deepSearch, getUsers, rowCount]",{"range":"249","text":"250"},"Update the dependencies array to be: [multiple, value]",{"range":"251","text":"252"},"Update the dependencies array to be: [getCouponById, history.location.state]",{"range":"253","text":"254"},"Update the dependencies array to be: [createResponse.data, history]",{"range":"255","text":"256"},{"range":"257","text":"248"},"Update the dependencies array to be: []",{"range":"258","text":"259"},"Update the dependencies array to be: [getStatistics]",{"range":"260","text":"261"},"Update the dependencies array to be: [getBrands, getCategories, getCoupons, getProductById, history.location.state]",{"range":"262","text":"263"},{"range":"264","text":"256"},{"range":"265","text":"248"},[1883,1885],"[getUser, location.state?.selected]",[2139,2160],"[history, updateResponse.data]",[1604,1606],"[currentPage, deepSearch, getUsers, rowCount]",[1194,1201],"[multiple, value]",[2138,2140],"[getCouponById, history.location.state]",[2552,2573],"[createResponse.data, history]",[2671,2692],[762,770],"[]",[981,983],"[getStatistics]",[3059,3061],"[getBrands, getCategories, getCoupons, getProductById, history.location.state]",[4454,4475],[4574,4595]]