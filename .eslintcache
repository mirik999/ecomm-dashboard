[{"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Table.tsx":"1","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\UploadZone.tsx":"2","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\index.tsx":"3","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\token.slice.ts":"4","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\user.slice.ts":"5","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\App.tsx":"6","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\utils\\storage.utils.ts":"7","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithToken.tsx":"8","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithoutToken.tsx":"9","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Auth.page.tsx":"10","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\Main.page.tsx":"11","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\Category.page.tsx":"12","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\CreateCategory.page.tsx":"13","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\Product.page.tsx":"14","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\CreateProduct.page.tsx":"15","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\category.request.ts":"16","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Login.tsx":"17","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Register.tsx":"18","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Layout.tsx":"19","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ProcessBox.tsx":"20","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ErrorBox.tsx":"21","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Input.tsx":"22","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Button.tsx":"23","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\product.request.ts":"24","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Divider.tsx":"25","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Header.tsx":"26","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\LoadingBox.tsx":"27","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\FakeTable.tsx":"28","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\utils\\cloudinary.utils.ts":"29","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\store.ts":"30","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Select.tsx":"31","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\TextEditor.tsx":"32","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\reportWebVitals.ts":"33","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\SideMenu.tsx":"34","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\user.request.ts":"35","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ColorPicker.tsx":"36","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Checkbox.tsx":"37"},{"size":7679,"mtime":1610654910271,"results":"38","hashOfConfig":"39"},{"size":5661,"mtime":1610651686729,"results":"40","hashOfConfig":"39"},{"size":1067,"mtime":1610206103430,"results":"41","hashOfConfig":"39"},{"size":719,"mtime":1610192229425,"results":"42","hashOfConfig":"39"},{"size":764,"mtime":1610192229443,"results":"43","hashOfConfig":"39"},{"size":1613,"mtime":1609684787074,"results":"44","hashOfConfig":"39"},{"size":966,"mtime":1609076891545,"results":"45","hashOfConfig":"39"},{"size":591,"mtime":1610192229422,"results":"46","hashOfConfig":"39"},{"size":594,"mtime":1610192229422,"results":"47","hashOfConfig":"39"},{"size":989,"mtime":1609273707928,"results":"48","hashOfConfig":"39"},{"size":297,"mtime":1609273707950,"results":"49","hashOfConfig":"39"},{"size":4295,"mtime":1610122644154,"results":"50","hashOfConfig":"39"},{"size":3557,"mtime":1609500439671,"results":"51","hashOfConfig":"39"},{"size":4179,"mtime":1610654821499,"results":"52","hashOfConfig":"39"},{"size":7543,"mtime":1610654351107,"results":"53","hashOfConfig":"39"},{"size":1214,"mtime":1610192229424,"results":"54","hashOfConfig":"39"},{"size":2178,"mtime":1609668555771,"results":"55","hashOfConfig":"39"},{"size":2173,"mtime":1609273707931,"results":"56","hashOfConfig":"39"},{"size":606,"mtime":1610266473130,"results":"57","hashOfConfig":"39"},{"size":547,"mtime":1610192229418,"results":"58","hashOfConfig":"39"},{"size":371,"mtime":1610650906382,"results":"59","hashOfConfig":"39"},{"size":1060,"mtime":1610192229417,"results":"60","hashOfConfig":"39"},{"size":809,"mtime":1610192229410,"results":"61","hashOfConfig":"39"},{"size":1774,"mtime":1610654992971,"results":"62","hashOfConfig":"39"},{"size":463,"mtime":1610192229414,"results":"63","hashOfConfig":"39"},{"size":1321,"mtime":1610192229416,"results":"64","hashOfConfig":"39"},{"size":544,"mtime":1610192229418,"results":"65","hashOfConfig":"39"},{"size":672,"mtime":1610192229415,"results":"66","hashOfConfig":"39"},{"size":785,"mtime":1610205706191,"results":"67","hashOfConfig":"39"},{"size":590,"mtime":1610192229443,"results":"68","hashOfConfig":"39"},{"size":1779,"mtime":1610649622013,"results":"69","hashOfConfig":"39"},{"size":1217,"mtime":1610654149882,"results":"70","hashOfConfig":"39"},{"size":440,"mtime":1609063555517,"results":"71","hashOfConfig":"39"},{"size":1719,"mtime":1610266398280,"results":"72","hashOfConfig":"39"},{"size":335,"mtime":1610192229425,"results":"73","hashOfConfig":"39"},{"size":1291,"mtime":1610566269844,"results":"74","hashOfConfig":"39"},{"size":892,"mtime":1610565849268,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ivx92o",{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Table.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\UploadZone.tsx",["158"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\index.tsx",[],["159","160"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\token.slice.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\user.slice.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\App.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\utils\\storage.utils.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithToken.tsx",[],["161","162"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithoutToken.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Auth.page.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\Main.page.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\Category.page.tsx",["163"],"import React, {useEffect, useState} from 'react';\r\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\r\n//components\r\nimport Layout from \"../../components/common/Layout\";\r\nimport Table from \"../../components/common/Table\";\r\nimport ProcessBox from \"../../components/common/ProcessBox\";\r\nimport ErrorBox from \"../../components/common/ErrorBox\";\r\n//types\r\nimport { CategoryType } from \"../../redux/types/category.type\";\r\n//request\r\nimport {\r\n  GET_CATEGORIES,\r\n  DISABLE_CATEGORIES,\r\n  ACTIVATE_CATEGORIES\r\n} from \"../../redux/requests/category.request\";\r\n\r\ntype Props = {};\r\n\r\nconst CategoryPage: React.FC<Props> = (props) => {\r\n  const [GetCategories, getResponse] = useLazyQuery(GET_CATEGORIES);\r\n  const [DisableCategories, disableResponse] = useMutation(DISABLE_CATEGORIES);\r\n  const [ActivateCategories, activateResponse] = useMutation(ACTIVATE_CATEGORIES);\r\n  const [categories, setCategories] = useState<CategoryType[]>([]);\r\n  //pagination\r\n  const [allCount, setAllCount] = useState<number>(0);\r\n  const [rowCount, setRowCount] = useState<number>(10);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  //deep search\r\n  const [deepSearch, setDeepSearch] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (getResponse.data) {\r\n      const { count, payload } = getResponse.data.getCategories;\r\n      setCategories(payload);\r\n      setAllCount(count);\r\n    }\r\n  }, [getResponse.data])\r\n\r\n  useEffect(() => {\r\n    (async function() {\r\n      await getCategories(currentPage, rowCount, deepSearch)\r\n    })()\r\n  }, [])\r\n\r\n  async function getCategories(pg: number, rc: number, kw: string): Promise<void> {\r\n    try {\r\n      await GetCategories({\r\n        variables: {\r\n          controls: {\r\n            offset: (pg - 1) * rc,\r\n            limit: rc,\r\n            keyword: kw\r\n          }\r\n        }\r\n      })\r\n    } catch(err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  async function getPageFromTable(pageNumber: number): Promise<void> {\r\n    setCurrentPage(pageNumber)\r\n    await getCategories(pageNumber, rowCount, deepSearch);\r\n  }\r\n\r\n  async function getRowCountFromTable(rc: number): Promise<void> {\r\n    setRowCount(rc);\r\n    await getCategories(currentPage, rc, deepSearch);\r\n  }\r\n\r\n  async function getDeepSearchFromTable(kw: string): Promise<void> {\r\n    setDeepSearch(kw);\r\n    await getCategories(currentPage, rowCount, kw);\r\n  }\r\n\r\n  async function getIdAndDisable(ids: string[]): Promise<void> {\r\n    try {\r\n      await DisableCategories({\r\n        variables: {\r\n          disabledCategories: { ids }\r\n        }\r\n      })\r\n      handleCategoriesState(ids, true)\r\n    } catch(err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  async function getIdAndActivate(ids: string[]): Promise<void> {\r\n    try {\r\n      await ActivateCategories({\r\n        variables: {\r\n          activateCategories: { ids }\r\n        }\r\n      })\r\n      handleCategoriesState(ids, false)\r\n    } catch(err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  function handleCategoriesState(ids: string[], isDisabled: boolean) {\r\n    const updatedCategories = categories.map(cat => {\r\n      if (ids.includes(cat.id)) {\r\n        return {\r\n          ...cat,\r\n          isDisabled\r\n        }\r\n      }\r\n      return cat;\r\n    })\r\n    setCategories(updatedCategories)\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <h2 className=\"font-medium uppercase mx-4\">\r\n        Categories\r\n      </h2>\r\n      {/*  table */}\r\n      <Table\r\n        data={categories}\r\n        allCount={allCount}\r\n        getPage={getPageFromTable}\r\n        getRowCount={getRowCountFromTable}\r\n        getDeepSearch={getDeepSearchFromTable}\r\n        getIdAndDisable={getIdAndDisable}\r\n        getIdAndActivate={getIdAndActivate}\r\n        path=\"category\"\r\n        error={!!getResponse.error}\r\n      />\r\n      { getResponse.loading ? <ProcessBox /> : null }\r\n      { getResponse.error ? <ErrorBox message={getResponse.error.message} /> : null }\r\n\r\n      { activateResponse.loading ? <ProcessBox /> : null }\r\n      { activateResponse.error ? <ErrorBox message={activateResponse.error.message} /> : null }\r\n\r\n      { disableResponse.loading ? <ProcessBox /> : null }\r\n      { disableResponse.error ? <ErrorBox message={disableResponse.error.message} /> : null }\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CategoryPage;\r\n","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\CreateCategory.page.tsx",["164","165","166"],"import React, {useEffect, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from \"@apollo/client\";\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Input from \"../../components/common/Input\";\nimport Button from \"../../components/common/Button\";\nimport ProcessBox from \"../../components/common/ProcessBox\";\nimport ErrorBox from \"../../components/common/ErrorBox\";\n//types\nimport { CategoryType } from \"../../redux/types/category.type\";\n//request\nimport { CREATE_CATEGORY, UPDATE_CATEGORY } from \"../../redux/requests/category.request\";\n\nconst initialState = {\n  name: '',\n  tabName: '',\n}\n\ntype Props = {}\n\nconst CreateCategory: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const [CreateCategory, createResponse] = useMutation(CREATE_CATEGORY);\n  const [UpdateCategory, updateResponse] = useMutation(UPDATE_CATEGORY);\n  const [state, setState] = useState<Partial<CategoryType>>(initialState);\n  const [mode, setMode] = useState<string>('create');\n\n  useEffect(() => {\n    const { mode, selected }: any = history.location.state;\n    if (mode === \"update\") {\n      setState(selected[0]);\n      setMode(mode);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push(\"/category\")\n    }\n  }, [createResponse])\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push(\"/category\")\n    }\n  }, [updateResponse])\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateCategory({\n        variables: {\n          newCategory: state\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateCategory({\n        variables: {\n          updatedCategory: state\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  return (\n    <Layout>\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"font-medium uppercase mx-4\">\n          Create category\n        </h2>\n        <h2\n          onClick={() => history.goBack()}\n          className=\"font-medium uppercase mx-4 cursor-pointer hover:opacity-75\"\n        >\n          Go Back\n        </h2>\n      </div>\n      <div className=\"flex items-center\">\n        <Input\n          type=\"text\"\n          label=\"Name\"\n          value={state.name}\n          getValue={(val: string) => setState({...state, name: val})}\n        />\n        <Input\n          type=\"text\"\n          label=\"Tab Name\"\n          value={state.tabName}\n          getValue={(val: string) => setState({...state, tabName: val})}\n        />\n      </div>\n      <div className=\"flex items-center mx-4 py-3\">\n        {\n          mode === \"create\" ? (\n            <Button\n              label=\"Create\"\n              onAction={_onSave}\n              cls=\"m-0 mr-3\"\n            />\n          ) : (\n            <Button\n              label=\"Update\"\n              onAction={_onUpdate}\n              cls=\"m-0 mr-3\"\n            />\n          )\n        }\n        <Button\n          label=\"Reset fields\"\n          onAction={() => setState(initialState)}\n          cls=\"m-0 mr-3\"\n        />\n      </div>\n      { createResponse.loading ? <ProcessBox /> : null }\n      { createResponse.error ? <ErrorBox message={createResponse.error.message} /> : null }\n\n      { updateResponse.loading ? <ProcessBox /> : null }\n      { updateResponse.error ? <ErrorBox message={updateResponse.error.message} /> : null }\n    </Layout>\n  );\n}\n\nCreateCategory.defaultProps = {}\n\nexport default CreateCategory;\n","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\Product.page.tsx",["167"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\CreateProduct.page.tsx",["168","169","170","171","172"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\category.request.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Login.tsx",["173"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\n//components\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport Divider from '../../components/common/Divider';\nimport ErrorBox from '../../components/common/ErrorBox';\nimport ProcessBox from \"../../components/common/ProcessBox\";\n//requests\nimport {LOGIN_USER} from \"../../redux/requests/user.request\";\n//actions\nimport { saveToken } from '../../redux/slices/token.slice';\nimport { saveUser } from '../../redux/slices/user.slice';\n\ntype userData = {\n  email: string\n  password: string\n};\n\ntype Props = {};\n\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nconst Login: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const [CreateUser, { data, loading, error }] = useMutation(LOGIN_USER);\n  const [state, setState] = useState<userData>(initialState);\n\n  async function _onClick(): Promise<void> {\n    try {\n      const payload = await CreateUser({\n        variables: {\n          user: state\n        }\n      });\n      const { accessToken } = payload.data.loginUser;\n      dispatch(saveToken(accessToken));\n      dispatch(saveUser());\n    } catch(err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <div\n      className=\"w-full h-full border border-blue-400 border-r-4 rounded-md w-1/4 bg-gray-100\n        relative z-10\"\n    >\n      <header className=\"p-4 bg-blue-400\">\n        <h3 className=\"uppercase text-white font-bold\">\n          Authorization\n        </h3>\n      </header>\n      <Input\n        type=\"email\"\n        label=\"E-mail\"\n        value={state.email}\n        getValue={(val: string) => setState({ ...state, email: val })}\n      />\n      <Input\n        type=\"password\"\n        label=\"Password\"\n        value={state.password}\n        getValue={(val: string) => setState({ ...state, password: val })}\n      />\n      <Divider label=\"Action\" />\n      <Button label=\"ENTER\" onAction={_onClick} />\n      { loading ? <ProcessBox /> : null }\n      { error ? <ErrorBox message={error.message} /> : null }\n    </div>\n  );\n};\n\nexport default Login;\n","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Register.tsx",["174"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\n//components\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport Divider from '../../components/common/Divider';\nimport ErrorBox from '../../components/common/ErrorBox';\nimport ProcessBox from \"../../components/common/ProcessBox\";\n//requests\nimport {CREATE_USER} from \"../../redux/requests/user.request\";\n//actions\nimport { saveToken } from '../../redux/slices/token.slice';\nimport { saveUser } from '../../redux/slices/user.slice';\n\ntype userData = {\n  email: string\n  password: string\n};\n\ntype Props = {};\n\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nconst Register: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const [CreateUser, { data, loading, error }] = useMutation(CREATE_USER);\n  const [state, setState] = useState<userData>(initialState);\n\n  async function _onClick(): Promise<void> {\n    try {\n      const payload = await CreateUser({\n        variables: {\n          newUser: state\n        }\n      });\n      const { accessToken } = payload.data.createUser;\n      dispatch(saveToken(accessToken))\n      dispatch(saveUser())\n    } catch(err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <div\n      className=\"w-full h-full border border-blue-400 border-r-4 rounded-md w-1/4 bg-gray-100\n        relative z-10\"\n    >\n      <header className=\"p-4 bg-blue-400\">\n        <h3 className=\"uppercase text-white font-bold\">Create an account</h3>\n      </header>\n      <Input\n        type=\"email\"\n        label=\"E-mail\"\n        value={state.email}\n        getValue={(val: string) => setState({ ...state, email: val })}\n      />\n      <Input\n        type=\"password\"\n        label=\"Password\"\n        value={state.password}\n        getValue={(val: string) => setState({ ...state, password: val })}\n      />\n      <Divider label=\"Action\" />\n      <Button label=\"SUBMIT\" onAction={_onClick} />\n      { loading ? <ProcessBox /> : null }\n      { error ? <ErrorBox message={error.message} /> : null }\n    </div>\n  );\n};\n\nexport default Register;\n","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Layout.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ProcessBox.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ErrorBox.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Input.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Button.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\product.request.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Divider.tsx",[],["175","176"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Header.tsx",[],["177","178"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\LoadingBox.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\FakeTable.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\utils\\cloudinary.utils.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\store.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Select.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\TextEditor.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\reportWebVitals.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\SideMenu.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\user.request.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ColorPicker.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Checkbox.tsx",[],{"ruleId":"179","severity":1,"message":"180","line":39,"column":6,"nodeType":"181","endLine":39,"endColumn":13,"suggestions":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"183","replacedBy":"187"},{"ruleId":"185","replacedBy":"188"},{"ruleId":"179","severity":1,"message":"189","line":43,"column":6,"nodeType":"181","endLine":43,"endColumn":8,"suggestions":"190"},{"ruleId":"179","severity":1,"message":"191","line":35,"column":6,"nodeType":"181","endLine":35,"endColumn":8,"suggestions":"192"},{"ruleId":"179","severity":1,"message":"193","line":41,"column":6,"nodeType":"181","endLine":41,"endColumn":22,"suggestions":"194"},{"ruleId":"179","severity":1,"message":"193","line":47,"column":6,"nodeType":"181","endLine":47,"endColumn":22,"suggestions":"195"},{"ruleId":"179","severity":1,"message":"196","line":44,"column":6,"nodeType":"181","endLine":44,"endColumn":8,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":18,"column":10,"nodeType":"200","messageId":"201","endLine":18,"endColumn":27},{"ruleId":"179","severity":1,"message":"202","line":52,"column":6,"nodeType":"181","endLine":52,"endColumn":8,"suggestions":"203"},{"ruleId":"179","severity":1,"message":"191","line":60,"column":6,"nodeType":"181","endLine":60,"endColumn":8,"suggestions":"204"},{"ruleId":"179","severity":1,"message":"193","line":73,"column":6,"nodeType":"181","endLine":73,"endColumn":22,"suggestions":"205"},{"ruleId":"179","severity":1,"message":"193","line":79,"column":6,"nodeType":"181","endLine":79,"endColumn":22,"suggestions":"206"},{"ruleId":"198","severity":1,"message":"207","line":30,"column":24,"nodeType":"200","messageId":"201","endLine":30,"endColumn":28},{"ruleId":"198","severity":1,"message":"207","line":30,"column":24,"nodeType":"200","messageId":"201","endLine":30,"endColumn":28},{"ruleId":"183","replacedBy":"208"},{"ruleId":"185","replacedBy":"209"},{"ruleId":"183","replacedBy":"210"},{"ruleId":"185","replacedBy":"211"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'multiple'. Either include it or remove the dependency array.","ArrayExpression",["212"],"no-native-reassign",["213"],"no-negated-in-lhs",["214"],["213"],["214"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getCategories', and 'rowCount'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["217"],["218"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getProducts', and 'rowCount'. Either include them or remove the dependency array.",["219"],"@typescript-eslint/no-unused-vars","'CreateProductType' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["220"],["221"],["222"],["223"],"'data' is assigned a value but never used.",["213"],["214"],["213"],["214"],{"desc":"224","fix":"225"},"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"228","fix":"238"},{"desc":"230","fix":"239"},{"desc":"232","fix":"240"},"Update the dependencies array to be: [multiple, value]",{"range":"241","text":"242"},"Update the dependencies array to be: [currentPage, deepSearch, getCategories, rowCount]",{"range":"243","text":"244"},"Update the dependencies array to be: [history.location.state]",{"range":"245","text":"246"},"Update the dependencies array to be: [createResponse, history]",{"range":"247","text":"248"},"Update the dependencies array to be: [history, updateResponse]",{"range":"249","text":"250"},"Update the dependencies array to be: [currentPage, deepSearch, getProducts, rowCount]",{"range":"251","text":"252"},"Update the dependencies array to be: [getCategories]",{"range":"253","text":"254"},{"range":"255","text":"246"},{"range":"256","text":"248"},{"range":"257","text":"250"},[1034,1041],"[multiple, value]",[1540,1542],"[currentPage, deepSearch, getCategories, rowCount]",[1205,1207],"[history.location.state]",[1305,1321],"[createResponse, history]",[1418,1434],"[history, updateResponse]",[1438,1440],"[currentPage, deepSearch, getProducts, rowCount]",[1731,1733],"[getCategories]",[1906,1908],[2192,2208],[2304,2320]]