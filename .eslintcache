[{"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/reportWebVitals.ts":"1","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/roles.slice.ts":"2","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithoutToken.tsx":"3","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Auth.page.tsx":"4","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx":"5","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Flexbox.tsx":"6","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Button.tsx":"7","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/product.request.ts":"8","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/UploadZone.tsx":"9","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/SignUp.tsx":"10","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Carousel.tsx":"11","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/LoadingCard.tsx":"12","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/index.tsx":"13","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Header.tsx":"14","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/App.tsx":"15","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/ColorPick.tsx":"16","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Checkbox.tsx":"17","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-adv/SliderAdv.tsx":"18","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/Slider.page.tsx":"19","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/store.ts":"20","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/MultiSelect.tsx":"21","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/main.request.ts":"22","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Navigation.tsx":"23","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-best/SliderBest.tsx":"24","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/Products.tsx":"25","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Modal.tsx":"26","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/theme.slice.ts":"27","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithToken.tsx":"28","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/config/routes.tsx":"29","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/PermissionDenied.page.tsx":"30","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/NotFound.page.tsx":"31","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/CreateUser.page.tsx":"32","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/Settings.page.tsx":"33","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/ThemeSelecting.tsx":"34","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Chart.tsx":"35","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Main.page.tsx":"36","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/user.request.ts":"37","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/Category.page.tsx":"38","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/CreateBrand.page.tsx":"39","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/Coupon.page.tsx":"40","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/SingleSelect.tsx":"41","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/SignIn.tsx":"42","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/storage.utils.ts":"43","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/CreateCategory.page.tsx":"44","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/Product.page.tsx":"45","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/CreateCoupon.page.tsx":"46","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/BorderedBox.tsx":"47","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Input.tsx":"48","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brands.tsx":"49","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/cloudinary.utils.ts":"50","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/net-status.slice.ts":"51","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brand.page.tsx":"52","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/User.page.tsx":"53","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Divider.tsx":"54","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/coupon.request.ts":"55","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/SubCategories.tsx":"56","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/ModalBody.tsx":"57","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/functions.utils.ts":"58","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/auth-credentials.slice.ts":"59","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/category.request.ts":"60","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/datePicker/DateRangePick.tsx":"61","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/datePicker/DatePick.tsx":"62","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/user.slice.ts":"63","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/HeaderLine.tsx":"64","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/Table.tsx":"65","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/richTextEditor/TinyEditor.tsx":"66","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/styled-components.ts":"67","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useTheme.ts":"68","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useApollo.ts":"69","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useMedia.ts":"70","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/notificationBox/index.tsx":"71","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/notificationBox/ErrorBox.tsx":"72","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/SystemUsage.tsx":"73","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/socket.utils.ts":"74","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useInterval.ts":"75","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/ProgressBar.tsx":"76","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/richTextEditor/templates.ts":"77","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/Notifications.tsx":"78","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/styled-components.ts":"79","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/Buttons.tsx":"80","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/validator.utils.ts":"81"},{"size":425,"mtime":1616437925159,"results":"82","hashOfConfig":"83"},{"size":231,"mtime":1616437925158,"results":"84","hashOfConfig":"83"},{"size":664,"mtime":1616846829191,"results":"85","hashOfConfig":"83"},{"size":764,"mtime":1619623491923,"results":"86","hashOfConfig":"83"},{"size":14253,"mtime":1619464545615,"results":"87","hashOfConfig":"83"},{"size":1899,"mtime":1619465303725,"results":"88","hashOfConfig":"83"},{"size":815,"mtime":1619623834042,"results":"89","hashOfConfig":"83"},{"size":2487,"mtime":1619279960114,"results":"90","hashOfConfig":"83"},{"size":8579,"mtime":1619464064094,"results":"91","hashOfConfig":"83"},{"size":2918,"mtime":1619633195708,"results":"92","hashOfConfig":"83"},{"size":1933,"mtime":1618672329478,"results":"93","hashOfConfig":"83"},{"size":734,"mtime":1618954549518,"results":"94","hashOfConfig":"83"},{"size":1330,"mtime":1618667427144,"results":"95","hashOfConfig":"83"},{"size":3123,"mtime":1619468496498,"results":"96","hashOfConfig":"83"},{"size":3782,"mtime":1619624933664,"results":"97","hashOfConfig":"83"},{"size":1555,"mtime":1619461196632,"results":"98","hashOfConfig":"83"},{"size":1101,"mtime":1618587801800,"results":"99","hashOfConfig":"83"},{"size":3280,"mtime":1618674432150,"results":"100","hashOfConfig":"83"},{"size":1234,"mtime":1618672067583,"results":"101","hashOfConfig":"83"},{"size":839,"mtime":1618418974238,"results":"102","hashOfConfig":"83"},{"size":2609,"mtime":1620072868940,"results":"103","hashOfConfig":"83"},{"size":261,"mtime":1618953069882,"results":"104","hashOfConfig":"83"},{"size":3175,"mtime":1619460779204,"results":"105","hashOfConfig":"83"},{"size":3293,"mtime":1618674242509,"results":"106","hashOfConfig":"83"},{"size":3257,"mtime":1619459929686,"results":"107","hashOfConfig":"83"},{"size":1202,"mtime":1618672938804,"results":"108","hashOfConfig":"83"},{"size":1843,"mtime":1618958050019,"results":"109","hashOfConfig":"83"},{"size":1194,"mtime":1619039105005,"results":"110","hashOfConfig":"83"},{"size":4835,"mtime":1619272476197,"results":"111","hashOfConfig":"83"},{"size":825,"mtime":1618823141068,"results":"112","hashOfConfig":"83"},{"size":798,"mtime":1618823151496,"results":"113","hashOfConfig":"83"},{"size":4007,"mtime":1619464545774,"results":"114","hashOfConfig":"83"},{"size":763,"mtime":1619274575733,"results":"115","hashOfConfig":"83"},{"size":3107,"mtime":1618830487285,"results":"116","hashOfConfig":"83"},{"size":5487,"mtime":1618958942808,"results":"117","hashOfConfig":"83"},{"size":2920,"mtime":1619278739279,"results":"118","hashOfConfig":"83"},{"size":1788,"mtime":1619279754355,"results":"119","hashOfConfig":"83"},{"size":4628,"mtime":1619040388522,"results":"120","hashOfConfig":"83"},{"size":6920,"mtime":1620073225168,"results":"121","hashOfConfig":"83"},{"size":5544,"mtime":1619278739276,"results":"122","hashOfConfig":"83"},{"size":2004,"mtime":1619462758155,"results":"123","hashOfConfig":"83"},{"size":2919,"mtime":1619633195710,"results":"124","hashOfConfig":"83"},{"size":1012,"mtime":1616846829206,"results":"125","hashOfConfig":"83"},{"size":5793,"mtime":1620072539261,"results":"126","hashOfConfig":"83"},{"size":5766,"mtime":1619278739268,"results":"127","hashOfConfig":"83"},{"size":9067,"mtime":1619464482809,"results":"128","hashOfConfig":"83"},{"size":605,"mtime":1619464663763,"results":"129","hashOfConfig":"83"},{"size":1099,"mtime":1619876221708,"results":"130","hashOfConfig":"83"},{"size":3501,"mtime":1620063695539,"results":"131","hashOfConfig":"83"},{"size":793,"mtime":1616437925159,"results":"132","hashOfConfig":"83"},{"size":521,"mtime":1617733665229,"results":"133","hashOfConfig":"83"},{"size":4410,"mtime":1619040388532,"results":"134","hashOfConfig":"83"},{"size":4495,"mtime":1619344103088,"results":"135","hashOfConfig":"83"},{"size":876,"mtime":1619627553500,"results":"136","hashOfConfig":"83"},{"size":1863,"mtime":1617736372028,"results":"137","hashOfConfig":"83"},{"size":3244,"mtime":1620071906854,"results":"138","hashOfConfig":"83"},{"size":883,"mtime":1618657241264,"results":"139","hashOfConfig":"83"},{"size":277,"mtime":1617466525467,"results":"140","hashOfConfig":"83"},{"size":946,"mtime":1616437925157,"results":"141","hashOfConfig":"83"},{"size":1872,"mtime":1619279960116,"results":"142","hashOfConfig":"83"},{"size":1301,"mtime":1618950622047,"results":"143","hashOfConfig":"83"},{"size":1141,"mtime":1619464328469,"results":"144","hashOfConfig":"83"},{"size":823,"mtime":1616437925158,"results":"145","hashOfConfig":"83"},{"size":1044,"mtime":1617655875993,"results":"146","hashOfConfig":"83"},{"size":8361,"mtime":1619630075013,"results":"147","hashOfConfig":"83"},{"size":2795,"mtime":1619039967550,"results":"148","hashOfConfig":"83"},{"size":1362,"mtime":1619627754463,"results":"149","hashOfConfig":"83"},{"size":1285,"mtime":1619087424412,"results":"150","hashOfConfig":"83"},{"size":3221,"mtime":1619091585192,"results":"151","hashOfConfig":"83"},{"size":524,"mtime":1619468165081,"results":"152","hashOfConfig":"83"},{"size":1020,"mtime":1620066053568,"results":"153","hashOfConfig":"83"},{"size":2167,"mtime":1620071763520,"results":"154","hashOfConfig":"83"},{"size":4197,"mtime":1619196220643,"results":"155","hashOfConfig":"83"},{"size":191,"mtime":1619346182884,"results":"156","hashOfConfig":"83"},{"size":489,"mtime":1616437925154,"results":"157","hashOfConfig":"83"},{"size":319,"mtime":1619278902528,"results":"158","hashOfConfig":"83"},{"size":661,"mtime":1616846829192,"results":"159","hashOfConfig":"83"},{"size":1328,"mtime":1619468639976,"results":"160","hashOfConfig":"83"},{"size":903,"mtime":1619039958020,"results":"161","hashOfConfig":"83"},{"size":2524,"mtime":1619459268957,"results":"162","hashOfConfig":"83"},{"size":644,"mtime":1620072340302,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"y767x1",{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"166"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"166"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"178"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"178"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"235"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/reportWebVitals.ts",[],["350","351"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/roles.slice.ts",[],["352","353"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithoutToken.tsx",[],["354","355"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Auth.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx",["356","357","358"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n//components\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport UploadZone from '../../components/common/UploadZone';\nimport SingleSelect from '../../components/common/selectable/SingleSelect';\nimport MultiSelect from '../../components/common/selectable/MultiSelect';\nimport ColorPick from '../../components/common/ColorPick';\nimport Checkbox from '../../components/common/Checkbox';\nimport TinyEditor from '../../components/common/richTextEditor/TinyEditor';\nimport Flexbox from '../../components/hoc/Flexbox';\nimport HeaderLine from '../../components/common/HeaderLine';\nimport BorderedBox from '../../components/hoc/BorderedBox';\n//types\nimport { OptionType } from '../../redux/types/common.type';\nimport { CategoryType } from '../../redux/types/category.type';\n//request\nimport {\n  CREATE_PRODUCT,\n  UPDATE_PRODUCT,\n  GET_PRODUCT_BY_ID,\n} from '../../redux/requests/product.request';\nimport { GET_CATEGORIES_FOR_SELECT } from '../../redux/requests/category.request';\nimport { GET_BRANDS_FOR_SELECT } from '../../redux/requests/brand.request';\nimport { GET_COUPONS_FOR_SELECT } from '../../redux/requests/coupon.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n\nconst initialState: any = {\n  name: '',\n  code: '',\n  images: [],\n  cover: '',\n  description: '',\n  color: '',\n  price: 0,\n  saleCount: 0,\n  sale: false,\n  new: true,\n  freeDelivery: true,\n  guarantee: true,\n  hasCoupon: false,\n  used: false,\n  defective: false,\n  category: [],\n  brand: '',\n  coupon: '',\n};\n\ntype Props = {};\n\nconst CreateProduct: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  //queries\n  const [CreateProduct, createResponse] = useMutation(CREATE_PRODUCT);\n  const [UpdateProduct, updateResponse] = useMutation(UPDATE_PRODUCT);\n  const [GetCategories, ctgResponse] = useLazyQuery(GET_CATEGORIES_FOR_SELECT);\n  const [GetProduct, productResponse] = useLazyQuery(GET_PRODUCT_BY_ID);\n  const [GetCoupons, couponsResponse] = useLazyQuery(GET_COUPONS_FOR_SELECT);\n  const [GetBrands, brandsResponse] = useLazyQuery(GET_BRANDS_FOR_SELECT);\n  //state\n  const [state, setState] = useState<any>(initialState);\n  const [mode, setMode] = useState<string>('create');\n  const [categories, setCategories] = useState<OptionType[]>([]);\n  const [brands, setBrands] = useState<OptionType[]>([]);\n  const [coupons, setCoupons] = useState<OptionType[]>([]);\n\n  useEffect(() => {\n    (async function () {\n      const { mode, selected }: any = history.location.state;\n\n      await getCategories();\n      await getBrands();\n      await getCoupons();\n\n      if (mode === 'update') {\n        await getProductById(selected[0]);\n        setMode(mode);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (productResponse.data) {\n      const payload = productResponse.data.getProduct;\n      setState(payload);\n    }\n  }, [productResponse.data]);\n\n  useEffect(() => {\n    if (ctgResponse.data) {\n      const payload = ctgResponse.data.getCategories.payload;\n      let options = [];\n      for (let i = 0; i < payload.length; i++) {\n        options.push(payload[i]);\n        if (payload[i]?.subCategories) {\n          for (let j = 0; j < payload[i].subCategories.length; j++) {\n            options.push(payload[i].subCategories[j]);\n          }\n        }\n      }\n\n      setCategories(options);\n    }\n  }, [ctgResponse.data]);\n\n  useEffect(() => {\n    if (brandsResponse.data) {\n      const payload = brandsResponse.data.getBrands.payload;\n      let options = [];\n      for (let i = 0; i < payload.length; i++) {\n        options.push(payload[i]);\n      }\n\n      setBrands(options);\n    }\n  }, [brandsResponse.data]);\n\n  useEffect(() => {\n    if (couponsResponse.data) {\n      const payload = couponsResponse.data.getCoupons.payload;\n      let options = [];\n      for (let i = 0; i < payload.length; i++) {\n        if (payload[i].type.includes('product')) {\n          options.push(payload[i]);\n        }\n      }\n\n      setCoupons(options);\n    }\n  }, [couponsResponse.data]);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push('/products');\n    }\n  }, [createResponse.data]);\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push('/products');\n    }\n  }, [updateResponse.data]);\n\n  async function getProductById(id: string): Promise<void> {\n    try {\n      await GetProduct({\n        variables: { id },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getCategories(): Promise<void> {\n    try {\n      await GetCategories({\n        variables: {\n          controls: {\n            offset: 0,\n            limit: 1000,\n            keyword: '',\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getBrands(): Promise<void> {\n    try {\n      await GetBrands({\n        variables: {\n          controls: {\n            offset: 0,\n            limit: 1000,\n            keyword: '',\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getCoupons(): Promise<void> {\n    try {\n      await GetCoupons({\n        variables: {\n          controls: {\n            offset: 0,\n            limit: 1000,\n            keyword: '',\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function _onChange(val: any, name: string): void {\n    if (name === 'new' && val) {\n      setState((prevState: any) => ({ ...prevState, new: true, used: false }));\n    } else if (name === 'used' && val) {\n      setState((prevState: any) => ({ ...prevState, new: false, used: true }));\n    } else {\n      setState((prevState: any) => ({ ...prevState, [name]: val }));\n    }\n  }\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateProduct({\n        variables: {\n          newProduct: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateProduct({\n        variables: {\n          updatedProduct: handleState(state),\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function _onComboSelect(key: string, val: string | string[]): void {\n    setState((prevState: any) => ({ ...prevState, [key]: val }));\n  }\n\n  function getCoverImage(val: string[]): void {\n    const cover = val[0] ? val[0] : '';\n    setState((prevState: any) => ({ ...prevState, cover }));\n  }\n\n  function getImages(images: string[]): void {\n    setState((prevState: any) => ({ ...prevState, images }));\n  }\n\n  function getDescriptionHtml(val: string): void {\n    setState((prevState: any) => ({ ...prevState, description: val }));\n  }\n\n  function handleState(st: any): any {\n    const category = st.category.map((cat: CategoryType) => cat?.id || cat);\n    const coupon = st.coupon?.id || st.coupon;\n    const brand = st.brand?.id || st.brand;\n    return {\n      ...st,\n      category,\n      coupon,\n      brand,\n    };\n  }\n\n  return (\n    <>\n      <Container>\n        <HeaderLine label=\"Create Product\" goBack={true} />\n        <BorderedBox>\n          <Flexbox cls=\"gap np\">\n            <Input\n              type=\"text\"\n              label=\"Product name\"\n              name=\"productName\"\n              value={state.name}\n              getValue={(val: string) => _onChange(val, 'name')}\n              required={true}\n            />\n            <Input\n              type=\"text\"\n              label=\"Code\"\n              name=\"code\"\n              value={state.code}\n              getValue={(val: string) => _onChange(val, 'code')}\n            />\n            <Input\n              type=\"number\"\n              label=\"Price\"\n              name=\"price\"\n              value={state.price}\n              getValue={(val: string) => _onChange(+val, 'price')}\n              required={true}\n            />\n            <Input\n              type=\"number\"\n              label=\"Sale percent\"\n              name=\"salePercent\"\n              value={state.saleCount}\n              getValue={(val: string) => _onChange(+val, 'saleCount')}\n            />\n            <MultiSelect\n              label=\"Category\"\n              value={state.category}\n              options={categories}\n              getValue={(val: string[]) => _onComboSelect('category', val)}\n              required={true}\n            />\n            <SingleSelect\n              label=\"Brand\"\n              value={state.brand}\n              options={brands}\n              getValue={(val: string) => _onComboSelect('brand', val)}\n            />\n            <ColorPick\n              value={state.color}\n              getValue={(val: string) => _onChange(val, 'color')}\n            />\n            <SingleSelect\n              label=\"Coupon\"\n              value={state.coupon}\n              options={coupons}\n              getValue={(val: string) => _onComboSelect('coupon', val)}\n              disabled={!state.hasCoupon}\n            />\n          </Flexbox>\n          <Flexbox cls=\"mt gap np\" align=\"start\">\n            <UploadZone\n              multiple={false}\n              value={state.cover}\n              label=\"Maximum 1 image and Size less than 500KB\"\n              getValue={getCoverImage}\n              folderInCloud=\"product_images\"\n              required={true}\n            />\n            <UploadZone\n              multiple={true}\n              value={state.images}\n              label=\"Maximum 5 images and Each size less than 500KB\"\n              getValue={getImages}\n              folderInCloud=\"product_images\"\n            />\n          </Flexbox>\n          <Flexbox cls=\"sides-wrap mt gap np\" justify=\"start\" align=\"start\">\n            <Flexbox cls=\"right-side gap np\" flex=\"column\" align=\"start\">\n              <Flexbox\n                cls=\"checkbox-wrap gap np\"\n                flex=\"column\"\n                justify=\"start\"\n                align=\"start\"\n              >\n                <Flexbox\n                  cls=\"checkbox-child-wrap gap np\"\n                  flex=\"column\"\n                  justify=\"start\"\n                  align=\"start\"\n                >\n                  <Checkbox\n                    label=\"Sale\"\n                    name=\"sale\"\n                    value={state.sale}\n                    getValue={(val: boolean) => _onChange(val, 'sale')}\n                  />\n                  <Checkbox\n                    label=\"New\"\n                    name=\"new\"\n                    value={state.new}\n                    getValue={(val: boolean) => _onChange(val, 'new')}\n                  />\n                  <Checkbox\n                    label=\"Free Delivery\"\n                    name=\"freeDelivery\"\n                    value={state.freeDelivery}\n                    getValue={(val: boolean) => _onChange(val, 'freeDelivery')}\n                  />\n                  <Checkbox\n                    label=\"Guarantee\"\n                    name=\"guarantee\"\n                    value={state.guarantee}\n                    getValue={(val: boolean) => _onChange(val, 'guarantee')}\n                  />\n                  <Checkbox\n                    label=\"Coupon\"\n                    name=\"hasCoupon\"\n                    value={state.hasCoupon}\n                    getValue={(val: boolean) => _onChange(val, 'hasCoupon')}\n                  />\n                  <Checkbox\n                    label=\"Used\"\n                    name=\"used\"\n                    value={state.used}\n                    getValue={(val: boolean) => _onChange(val, 'used')}\n                  />\n                  <Checkbox\n                    label=\"Defective\"\n                    name=\"defective\"\n                    value={state.defective}\n                    getValue={(val: boolean) => _onChange(val, 'defective')}\n                  />\n                </Flexbox>\n              </Flexbox>\n              <Flexbox cls=\"np\" flex=\"column\" align=\"start\">\n                <TinyEditor\n                  label=\"Description\"\n                  value={state.description}\n                  getValue={getDescriptionHtml}\n                  cls=\"md:flex-2\"\n                />\n              </Flexbox>\n              <Flexbox cls=\"gap np\">\n                {mode === 'create' ? (\n                  <Button\n                    appearance=\"primary\"\n                    label=\"Create\"\n                    onAction={_onSave}\n                    cls=\"m-0 mr-3\"\n                  />\n                ) : (\n                  <Button\n                    appearance=\"primary\"\n                    label=\"Update\"\n                    onAction={_onUpdate}\n                    cls=\"m-0 mr-3\"\n                  />\n                )}\n                <Button\n                  appearance=\"primary\"\n                  label=\"Reset fields\"\n                  onAction={() => setState(initialState)}\n                  disabled={mode === 'update'}\n                />\n              </Flexbox>\n            </Flexbox>\n          </Flexbox>\n        </BorderedBox>\n      </Container>\n    </>\n  );\n};\n\nCreateProduct.defaultProps = {};\n\nexport default CreateProduct;\n\nconst Container = styled.div`\n  .heading {\n    font-size: ${({ theme }) => theme.fontSize.sm + 'px'};\n    font-weight: bold;\n    margin-bottom: 5px;\n    color: ${({ theme }) => theme.colors.color};\n  }\n\n  .checkbox-wrap {\n    .checkbox-child-wrap {\n      overflow: hidden;\n      max-height: 70px;\n    }\n  }\n\n  @media screen and (max-width: 1700px) {\n    .sides-wrap {\n      flex-direction: column;\n    }\n  }\n\n  @media screen and (max-width: 1000px) {\n    .color-and-checkbox-wrap {\n      flex-direction: row;\n    }\n    .sides-wrap {\n      flex-direction: column;\n    }\n  }\n\n  @media screen and (max-width: 700px) {\n    .color-and-checkbox-wrap {\n      flex-direction: column;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    .color-and-checkbox-wrap {\n      flex-direction: column;\n    }\n  }\n`;\n",["359","360"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Flexbox.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Button.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/product.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/UploadZone.tsx",["361"],"import React, { useEffect, useState, memo } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport styled from 'styled-components';\nimport { Input, Tooltip, Whisper } from 'rsuite';\n//components\nimport Flexbox from '../hoc/Flexbox';\n//utils\nimport { imageUploadAndGetUrl } from '../../utils/cloudinary.utils';\n\ntype Props = {\n  label?: string;\n  value: string[] | string;\n  multiple: boolean;\n  cls?: string;\n  required?: boolean;\n  getValue: (val: string[]) => void;\n  folderInCloud: string;\n  [key: string]: any;\n};\n\nconst UploadZone: React.FC<Props> = memo(\n  ({\n    label,\n    value,\n    multiple,\n    cls,\n    required,\n    getValue,\n    folderInCloud,\n    ...props\n  }) => {\n    const [preview, setPreview] = useState<string[]>([]);\n    const [upLoading, setUpLoading] = useState<boolean>(false);\n    const [warning, setWarning] = useState<string>('');\n    const [uploadPercent, setUploadPercent] = useState<number>(0);\n    const [photoIndex, setPhotoIndex] = useState<number>(0);\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n\n    useEffect(() => {\n      if (multiple && typeof value === 'object') {\n        setPreview(value);\n      }\n\n      if (!multiple && typeof value === 'string' && value !== '') {\n        setPreview([value]);\n      }\n    }, [value]);\n\n    async function handleImage(value: any, e: any) {\n      const files = e.currentTarget.files!;\n      const newPreviewList: string[] = [];\n\n      if (files.length >= 5 || preview.length >= 5) {\n        setWarning('Please follow the above instruction');\n        return;\n      }\n\n      setUpLoading(true);\n\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n\n        if (file.size > 524000) {\n          if (multiple) {\n            setWarning('Some of the images size greater than 500KB');\n          } else {\n            setWarning('Image size greater than 500KB');\n          }\n          setUpLoading(false);\n          continue;\n        }\n\n        await imageUploadAndGetUrl(\n          file,\n          folderInCloud,\n          (percent, error, file) => {\n            if (percent) {\n              setUploadPercent(percent);\n            }\n            if (error) {\n              setWarning(error);\n            }\n            if (file) {\n              setUploadPercent(0);\n              setWarning('');\n              if (multiple) {\n                setPreview((prevState) => [file.data.secure_url, ...prevState]);\n                newPreviewList.push(file.data.secure_url);\n              } else {\n                setPreview([file.data.secure_url]);\n                newPreviewList.push(file.data.secure_url);\n              }\n            }\n          },\n        );\n      }\n\n      getValue([...newPreviewList, ...preview]);\n      setUpLoading(false);\n    }\n\n    function _onDeletePreviewImage(e: any, url: string): void {\n      e.stopPropagation();\n      const newPreviewState: string[] = preview.filter((pre) => pre !== url);\n      setPreview(newPreviewState);\n      getValue(newPreviewState);\n    }\n\n    function handlePlaceholder() {\n      const isMultiple = multiple\n        ? 'Click to select an images'\n        : 'Click to select an image';\n      const isUploaded = preview.length ? '✓' : '*';\n      return required ? `${isMultiple} ${isUploaded}` : isMultiple;\n    }\n\n    return (\n      <Container cls={cls} flex=\"column\" justify=\"start\" align=\"start\">\n        <Flexbox cls=\"np\" flex=\"column\" align=\"start\">\n          {/*<Flexbox cls=\"np\" justify=\"between\">*/}\n          {/*  <span className={warning ? 'text-red' : 'text-black'}>{label}</span>*/}\n          {/*  {uploadPercent ? <span>{uploadPercent}%</span> : null}*/}\n          {/*</Flexbox>*/}\n          <label htmlFor={'file-upload' + handlePlaceholder()}>\n            <Whisper\n              trigger={required ? 'hover' : 'none'}\n              speaker={<Tooltip>Required</Tooltip>}\n              placement=\"topStart\"\n            >\n              <Flexbox cls=\"input-wrap gap np\">\n                <Input\n                  type=\"file\"\n                  id={'file-upload' + handlePlaceholder()}\n                  name=\"file-upload\"\n                  autoComplete=\"off\"\n                  onChange={handleImage}\n                  multiple={multiple}\n                  accept=\"image/*\"\n                  disabled={upLoading}\n                />\n\n                <Input\n                  type=\"text\"\n                  value=\"\"\n                  readOnly={true}\n                  placeholder={warning ? warning : handlePlaceholder()}\n                  {...props}\n                />\n                {uploadPercent ? <span>{uploadPercent}%</span> : null}\n              </Flexbox>\n            </Whisper>\n          </label>\n        </Flexbox>\n\n        {preview.length ? (\n          <Flexbox cls=\"preview-wrap\" wrap=\"no-wrap\">\n            {preview.map((pre, i) => (\n              <Flexbox key={i} flex=\"column\">\n                <div\n                  style={{ backgroundImage: `url(${pre})` }}\n                  onClick={() => {\n                    setPhotoIndex(i);\n                    setIsOpen(true);\n                  }}\n                />\n                <div\n                  className=\"hoverable\"\n                  onClick={(e) => _onDeletePreviewImage(e, pre)}\n                >\n                  Remove\n                </div>\n              </Flexbox>\n            ))}\n          </Flexbox>\n        ) : null}\n\n        {isOpen && (\n          <Lightbox\n            mainSrc={preview[photoIndex]}\n            nextSrc={preview[(photoIndex + 1) % preview.length]}\n            prevSrc={\n              preview[(photoIndex + preview.length - 1) % preview.length]\n            }\n            onCloseRequest={() => setIsOpen(false)}\n            onMovePrevRequest={() =>\n              setPhotoIndex((photoIndex + preview.length - 1) % preview.length)\n            }\n            onMoveNextRequest={() =>\n              setPhotoIndex((photoIndex + 1) % preview.length)\n            }\n          />\n        )}\n      </Container>\n    );\n  },\n  (prevState, nextState) => {\n    if (typeof prevState.value === 'string') {\n      return prevState.value === nextState.value;\n    }\n    return compareDeeper(prevState.value, nextState.value as string[]);\n  },\n);\n\nUploadZone.defaultProps = {\n  label: 'Upload an image',\n  cls: '',\n  required: false,\n  value: [],\n  multiple: false,\n};\n\nexport default UploadZone;\n\nfunction compareDeeper(prev: string[], next: string[]): boolean {\n  if (prev.length !== next.length) {\n    return next.every((n, i) => n === prev[i]);\n  }\n  return true;\n}\n\nconst Container = styled(Flexbox)`\n  position: relative;\n  padding: 0;\n  min-width: 340px;\n\n  & > div {\n    .text-black {\n      color: ${({ theme }) => theme.colors.color};\n    }\n    .text-red {\n      color: ${({ theme }) => theme.colors.error};\n    }\n\n    span {\n      font-size: ${({ theme }) => theme.fontSize.sm + 'px'};\n      font-weight: bold;\n      margin-bottom: 5px;\n      color: ${({ theme }) => theme.colors.color};\n    }\n  }\n\n  label {\n    width: 100%;\n  }\n\n  .input-wrap {\n    position: relative;\n\n    input {\n      cursor: pointer;\n    }\n\n    input:first-child {\n      flex: 1;\n      position: absolute;\n      width: 100%;\n      padding: 5px;\n      opacity: 0;\n    }\n\n    input[type='file']:hover + input[type='text'] {\n      border-color: #169de0;\n    }\n\n    span {\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      color: ${({ theme }) => theme.colors.color};\n    }\n  }\n\n  .preview-wrap {\n    gap: 10px;\n    padding: 10px;\n    margin-top: 10px;\n    border-radius: 5px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: #e5e5ea;\n    color: ${({ theme }) => theme.colors.color};\n    background-color: ${({ theme }) => theme.colors.background};\n    overflow: auto;\n\n    & > div {\n      padding: 10px 0;\n      min-width: 80px;\n      min-height: 80px;\n      background-color: ${({ theme }) => theme.colors.background};\n      border-radius: 5px;\n\n      & > div:first-child {\n        width: 75px;\n        height: 75px;\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: contain;\n      }\n\n      & > div:last-child {\n        cursor: pointer;\n        color: ${({ theme }) => theme.colors.color};\n        font-size: ${({ theme }) => theme.fontSize.xs + 'px'};\n        text-align: center;\n      }\n    }\n  }\n\n  @media screen and (max-width: 1100px) {\n    min-width: 300px !important;\n  }\n\n  @media screen and (max-width: 620px) {\n    .preview-wrap {\n      flex-wrap: wrap !important;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    min-width: 200px !important;\n  }\n`;\n",["362","363"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/SignUp.tsx",["364"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n//components\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport Divider from '../../components/common/Divider';\n//styled\nimport { RegisterWrap } from './styled-components';\n//requests\nimport { CREATE_USER } from '../../redux/requests/user.request';\n//actions\nimport { saveToken } from '../../redux/slices/auth-credentials.slice';\nimport { saveUser } from '../../redux/slices/user.slice';\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(6).required(),\n});\n\ntype Inputs = {\n  email: string;\n  password: string;\n};\n\ntype Props = {};\n\nconst Login: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const [CreateUser] = useMutation(CREATE_USER);\n  //form events\n  const {\n    handleSubmit,\n    control,\n    setError,\n    formState: { errors },\n  } = useForm<Inputs>({\n    resolver: yupResolver(schema),\n  });\n\n  async function _onSubmit(inputData: Inputs): Promise<void> {\n    try {\n      const payload = await CreateUser({\n        variables: {\n          newUser: {\n            ...inputData,\n            clientId: uuid(),\n          },\n        },\n      });\n      const data = payload.data.createUser;\n      dispatch(saveToken(data));\n      dispatch(saveUser());\n    } catch (err) {\n      const response = err.graphQLErrors[0]?.extensions?.exception?.response;\n      if (\n        response instanceof Object &&\n        response.hasOwnProperty('key') &&\n        response.hasOwnProperty('message')\n      ) {\n        setError(response.key, {\n          type: 'server',\n          message: response.message,\n        });\n      }\n    }\n  }\n\n  return (\n    <RegisterWrap flex=\"column\" justify=\"start\" align=\"start\">\n      <header>\n        <h3>Sign up</h3>\n      </header>\n      <form onSubmit={handleSubmit(_onSubmit)} className=\"gap\">\n        <Controller\n          name=\"email\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field }) => (\n            <Input\n              {...field}\n              placeholder=\"E-mail\"\n              errorMessage={errors?.email}\n            />\n          )}\n        />\n        <Controller\n          name=\"password\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field }) => (\n            <Input\n              {...field}\n              placeholder=\"Password\"\n              errorMessage={errors?.password}\n            />\n          )}\n        />\n        <Divider label=\"Action\" />\n        <Button type=\"submit\" appearance=\"primary\" label=\"Sign up\" />\n      </form>\n    </RegisterWrap>\n  );\n};\n\nexport default Login;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Carousel.tsx",["365"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Slider from 'react-slick';\n\nconst settings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  arrows: false,\n};\n\ntype Props = {\n  bgColor?: string;\n  vertical: boolean;\n  fade: boolean;\n  cls?: string;\n  images: string[];\n};\n\n// const prc = [\n//   'https://res.cloudinary.com/electroshop-cmrs-project/image/upload/v1618667801/sliders/landscape-1499968892-back-to-school-tech_c8fjvu.jpg',\n//   'https://res.cloudinary.com/electroshop-cmrs-project/image/upload/v1618667804/sliders/photo-1515940175183-6798529cb860_lqws53.jpg',\n// ];\n\nconst Carousel: React.FC<Props> = ({ vertical, fade, bgColor, images }) => {\n  if (!images.length) {\n    return null;\n  }\n  return (\n    <Container>\n      <Slider {...settings} fade={fade} vertical={vertical}>\n        {images.map((url: string, i: number) => (\n          <Image key={i} url={url} bgColor={bgColor} />\n        ))}\n      </Slider>\n    </Container>\n  );\n};\n\nexport default Carousel;\n\nCarousel.defaultProps = {\n  bgColor: 'transparent',\n  vertical: false,\n  fade: false,\n  cls: 'custom-slider',\n  images: [],\n};\n\nconst Container = styled.div`\n  max-width: 100%;\n  margin: 10px 0;\n\n  .slick-dots {\n    background-color: ${({ theme }) => theme.colors.thirdBackground};\n    li {\n      button {\n        border-radius: 50%;\n        width: 10px;\n        height: 10px;\n        background-color: grey;\n        &::before {\n          content: '';\n        }\n      }\n    }\n    .slick-active {\n      button {\n        background-color: ${({ theme }) => theme.colors.main};\n      }\n    }\n  }\n`;\n\nconst Image = styled.div<any>`\n  width: 100%;\n  height: 250px;\n  background-color: ${({ theme }) => theme.colors.thirdBackground};\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-image: ${(props) => `url(${props.url})`};\n`;\n",["366","367"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/LoadingCard.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/index.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Header.tsx",["368","369","370"],"import React, { memo, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MdExitToApp, MdNotifications } from 'react-icons/md';\nimport { useLazyQuery } from '@apollo/client';\nimport styled from 'styled-components';\nimport { useLocation } from 'react-router-dom';\nimport { Badge } from 'rsuite';\n//components\nimport Flexbox from '../hoc/Flexbox';\n//types\nimport { RootState } from '../../redux/store';\n//actions\nimport { removeToken } from '../../redux/slices/auth-credentials.slice';\nimport { removeUser } from '../../redux/slices/user.slice';\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n//request\nimport { LOGOUT_USER } from '../../redux/requests/user.request';\n//socket\nimport io from '../../utils/socket.utils';\nimport Notifications from '../Notifications';\n\nconst socket = io('user');\n\ntype Props = {};\n\nconst Header: React.FC<Props> = memo(\n  (props) => {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    //graphql\n    const [Logout] = useLazyQuery(LOGOUT_USER);\n    //state\n    const { user, authCredentials } = useSelector((state: RootState) => state);\n\n    useEffect(() => {\n      socket.on('logoutUser', async (id: string) => {\n        if (user.id === id) {\n          await _onLogout();\n        }\n      });\n\n      socket.on('logoutUsers', async (ids: string[]) => {\n        if (ids.includes(user.id)) {\n          await _onLogout();\n        }\n      });\n    }, []);\n\n    async function _onLogout(): Promise<void> {\n      try {\n        await Logout({\n          variables: {\n            clientId: authCredentials.clientId,\n          },\n        });\n        dispatch(removeToken());\n        dispatch(removeUser());\n      } catch (err) {\n        dispatch(saveNetStatus(err.graphQLErrors));\n      }\n    }\n\n    if (location.pathname === '/auth') {\n      return null;\n    }\n\n    return (\n      <Container justify=\"between\">\n        <Flexbox cls=\"gap\" justify=\"end\">\n          <Notifications />\n          <div className=\"user-email\">\n            <span className=\"user-email\">{user.email}</span>\n            <MdExitToApp\n              size={20}\n              color=\"black\"\n              className=\"hoverable\"\n              onClick={_onLogout}\n            />\n          </div>\n        </Flexbox>\n      </Container>\n    );\n  },\n  () => {\n    return true;\n  },\n);\n\nHeader.defaultProps = {};\n\nexport default Header;\n\nconst Container = styled(Flexbox)`\n  width: 100%;\n  min-height: 47px;\n  padding: 7px 30px 7px 10px;\n  background-color: ${({ theme }) => theme.colors.secondBackground};\n  border-bottom: ${({ theme }) => `2px solid ${theme.colors.border}`};\n\n  .user-email {\n    display: flex;\n    align-items: center;\n\n    span {\n      margin-right: 5px;\n    }\n  }\n\n  span {\n    color: ${({ theme }) => theme.colors.color};\n  }\n\n  svg path {\n    fill: ${({ theme }) => theme.colors.color};\n  }\n\n  @media screen and (max-width: 767px) {\n    padding: 7px 10px;\n\n    & > div {\n      justify-content: space-between;\n    }\n  }\n\n  @media screen and (max-width: 600px) {\n    max-width: calc(100vw - 33px) !important;\n    margin-left: 33px;\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/App.tsx",["371"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/ColorPick.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Checkbox.tsx",[],["372","373"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-adv/SliderAdv.tsx",[],["374","375"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/Slider.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/store.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/MultiSelect.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/main.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Navigation.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-best/SliderBest.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/Products.tsx",["376"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Modal.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/theme.slice.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithToken.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/config/routes.tsx",[],["377","378"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/PermissionDenied.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/NotFound.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/CreateUser.page.tsx",["379","380"],"import React, { useEffect, useState } from 'react';\nimport { useLocation, useHistory, RouteComponentProps } from 'react-router-dom';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n//components\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport Flexbox from '../../components/hoc/Flexbox';\nimport HeaderLine from '../../components/common/HeaderLine';\nimport BorderedBox from '../../components/hoc/BorderedBox';\nimport MultiSelect from '../../components/common/selectable/MultiSelect';\n//types\nimport { UserType } from '../../redux/types/user.types';\nimport { RootState } from '../../redux/store';\n//request\nimport { UPDATE_USER, GET_USER_BY_ID } from '../../redux/requests/user.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n//socket\nimport io from '../../utils/socket.utils';\n\nconst socket = io('user');\n\nconst initialState = {\n  id: '',\n  email: '',\n  isDisabled: false,\n  roles: [],\n};\n\ninterface QueryState\n  extends RouteComponentProps<\n    any, // { myParamProp?: string } params\n    any, // history\n    { selected?: string[] } //state\n  > {\n  selected: string[];\n}\n\ntype Props = {};\n\nconst CreatUser: React.FC<Props> = (props) => {\n  const location = useLocation<QueryState>();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  //graphql\n  const [UpdateUser, updateResponse] = useMutation(UPDATE_USER);\n  const [GetUserById, getResponse] = useLazyQuery(GET_USER_BY_ID);\n  //state\n  const { roles } = useSelector((state: RootState) => state);\n  const [state, setState] = useState<Partial<UserType>>(initialState);\n\n  useEffect(() => {\n    (async function () {\n      const selected: any = location.state?.selected;\n      if (selected) {\n        await getUser(selected[0]);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const payload = getResponse.data.getUserById;\n      setState(payload);\n    }\n  }, [getResponse.data]);\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      socket.emit('logoutUser', state.id);\n      history.push('/users');\n    }\n  }, [updateResponse.data]);\n\n  async function getUser(id: string): Promise<void> {\n    try {\n      await GetUserById({\n        variables: { id },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateUser({\n        variables: {\n          updatedUser: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function _onRoleSelect(key: string, val: string | string[]): void {\n    setState((prevState: any) => ({ ...prevState, [key]: val }));\n  }\n\n  return (\n    <>\n      <HeaderLine label=\"Update user\" goBack={true} />\n      <BorderedBox>\n        <Body>\n          <Input\n            type=\"text\"\n            label=\"ID\"\n            name=\"id\"\n            value={state.id}\n            getValue={(val: string) => false}\n            readOnly\n          />\n          <Input\n            type=\"text\"\n            label=\"Email\"\n            name=\"email\"\n            value={state.email}\n            getValue={(val: string) => false}\n            readOnly\n          />\n          <MultiSelect\n            label=\"Role\"\n            value={state.roles!.map((r, i) => ({ id: r, name: r }))}\n            options={roles.map((r, i) => ({ id: r, name: r }))}\n            getValue={(val: string[]) => _onRoleSelect('roles', val)}\n          />\n        </Body>\n        <FooterPanel>\n          <Button appearance=\"primary\" label=\"Update\" onAction={_onUpdate} />\n        </FooterPanel>\n      </BorderedBox>\n    </>\n  );\n};\n\nCreatUser.defaultProps = {};\n\nexport default CreatUser;\n\nconst Body = styled(Flexbox)`\n  padding: 0;\n  margin: 10px 0;\n  gap: 10px;\n`;\n\nconst FooterPanel = styled(Flexbox)`\n  margin-top: 10px;\n  padding: 0;\n  gap: 10px;\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/Settings.page.tsx",["381"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/ThemeSelecting.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Chart.tsx",[],["382","383"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Main.page.tsx",["384","385"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/user.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/Category.page.tsx",["386"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/CreateBrand.page.tsx",["387","388","389","390"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/Coupon.page.tsx",["391"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/SingleSelect.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/SignIn.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/storage.utils.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/CreateCategory.page.tsx",["392","393","394"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/Product.page.tsx",["395"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\n//components\nimport Table from '../../components/common/table/Table';\nimport HeaderLine from '../../components/common/HeaderLine';\n//types\nimport { ProductType } from '../../redux/types/product.type';\n//request\nimport {\n  GET_PRODUCTS,\n  DISABLE_PRODUCTS,\n  ACTIVATE_PRODUCTS,\n  DELETE_PRODUCTS,\n} from '../../redux/requests/product.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n\ntype Props = {};\n\nconst ProductPage: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  //graphql\n  const [GetProducts, getResponse] = useLazyQuery(GET_PRODUCTS);\n  const [DisableProducts] = useMutation(DISABLE_PRODUCTS);\n  const [ActivateProducts] = useMutation(ACTIVATE_PRODUCTS);\n  const [DeleteProducts] = useMutation(DELETE_PRODUCTS);\n  //state\n  const [products, setProducts] = useState<ProductType[]>([]);\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [deepSearch, setDeepSearch] = useState<string>('');\n  const [dateRange, setDateRange] = useState<{ [key: string]: Date }>({});\n  const [unSelect, setUnSelect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getProducts;\n      setProducts(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data]);\n\n  useEffect(() => {\n    (async function () {\n      await getProducts(\n        currentPage,\n        rowCount,\n        deepSearch,\n        dateRange.from,\n        dateRange.to,\n      );\n    })();\n  }, []);\n\n  async function getProducts(\n    pg: number,\n    rc: number,\n    kw: string,\n    from: Date | null,\n    to: Date | null,\n  ): Promise<void> {\n    try {\n      await GetProducts({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw,\n            from: to === null ? null : from,\n            to: to,\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber);\n    await getProducts(\n      pageNumber,\n      rowCount,\n      deepSearch,\n      dateRange.from,\n      dateRange.to,\n    );\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getProducts(\n      currentPage,\n      rc,\n      deepSearch,\n      dateRange.from,\n      dateRange.to,\n    );\n  }\n\n  async function getDeepSearchFromTable(keyword: string): Promise<void> {\n    setDeepSearch(keyword);\n    await getProducts(\n      currentPage,\n      rowCount,\n      keyword,\n      dateRange.from,\n      dateRange.to,\n    );\n  }\n\n  async function getIdsAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableProducts({\n        variables: {\n          disabledProducts: { ids },\n        },\n      });\n      handleProductsState(ids, true);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getIdsAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateProducts({\n        variables: {\n          activateProducts: { ids },\n        },\n      });\n      handleProductsState(ids, false);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getIdsAndDelete(ids: string[]): Promise<void> {\n    try {\n      await DeleteProducts({\n        variables: {\n          deleteProducts: { ids },\n        },\n      });\n      handleProductsList(ids);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getDateRange(range: { [key: string]: Date }): Promise<void> {\n    setDateRange({ ...dateRange, ...range });\n    if (range.to === null) {\n      await getProducts(currentPage, rowCount, deepSearch, null, null);\n    } else if (range.from.toString() === range.to.toString()) {\n      await getProducts(currentPage, rowCount, deepSearch, null, null);\n    } else {\n      await getProducts(\n        currentPage,\n        rowCount,\n        deepSearch,\n        range.from,\n        range.to,\n      );\n    }\n  }\n\n  function handleProductsState(ids: string[], isDisabled: boolean) {\n    const updatedProducts = products.map((product) => {\n      if (ids.includes(product.id)) {\n        return {\n          ...product,\n          isDisabled,\n        };\n      }\n      return product;\n    });\n    setProducts(updatedProducts);\n  }\n\n  function handleProductsList(ids: string[]) {\n    const deletedProducts = products.filter(\n      (product) => !ids.includes(product.id),\n    );\n    setProducts(deletedProducts);\n    setUnSelect(true);\n  }\n\n  return (\n    <>\n      <HeaderLine label=\"Products\" />\n      {/*  table */}\n      <Table\n        data={products}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdsAndDisable={getIdsAndDisable}\n        getIdsAndActivate={getIdsAndActivate}\n        getIdsAndDelete={getIdsAndDelete}\n        getDateRange={getDateRange}\n        path=\"products\"\n        exclude={excludeList}\n        error={!!getResponse.error}\n        unSelect={unSelect}\n      />\n    </>\n  );\n};\n\nexport default ProductPage;\n\nconst excludeList = [\n  'id',\n  'code',\n  'color',\n  'defective',\n  'modifiedBy',\n  'createdBy',\n  'used',\n  'cover',\n  'hasCoupon',\n  'saleCount',\n  'sold',\n  'description',\n  'images',\n  'freeDelivery',\n  'guarantee',\n  'stars',\n  'group',\n  'best',\n  'viewCount',\n  'coupon',\n];\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/CreateCoupon.page.tsx",["396","397","398"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { v4 as uuid } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { Slider } from 'rsuite';\n//components\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport Flexbox from '../../components/hoc/Flexbox';\nimport HeaderLine from '../../components/common/HeaderLine';\nimport BorderedBox from '../../components/hoc/BorderedBox';\nimport DatePick from '../../components/common/datePicker/DatePick';\nimport MultiSelect from '../../components/common/selectable/MultiSelect';\n//types\nimport { CreateCouponType } from '../../redux/types/coupon.type';\n//request\nimport {\n  CREATE_COUPON,\n  UPDATE_COUPON,\n  GET_COUPON_BY_ID,\n} from '../../redux/requests/coupon.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n\nconst types = ['product', 'brand', 'category', 'all'];\n\nconst initialState = {\n  name: '',\n  type: [],\n  value: 0,\n  description: '',\n  couponList: [],\n  endDate: new Date(),\n};\n\ntype CouponGeneratorType = {\n  length: number;\n  count: number;\n  list: { used: boolean; key: string }[];\n};\n\ntype Props = {};\n\nconst CreateCoupon: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  //requests\n  const [CreateCoupon, createResponse] = useMutation(CREATE_COUPON);\n  const [UpdateCoupon, updateResponse] = useMutation(UPDATE_COUPON);\n  const [GetCouponById, getResponse] = useLazyQuery(GET_COUPON_BY_ID);\n  //state\n  const [state, setState] = useState<CreateCouponType>({\n    id: uuid(),\n    ...initialState,\n  });\n  const [coupon, setCoupon] = useState<CouponGeneratorType>({\n    length: 5,\n    count: 30,\n    list: [],\n  });\n  const { mode, selected: id }: any = history.location.state;\n\n  useEffect(() => {\n    (async function () {\n      if (mode === 'update') {\n        await getCouponById(id[0]);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const payload = getResponse.data.getCouponById;\n      setState(payload);\n      setCoupon({\n        length: payload.couponList[0].key.length,\n        count: payload.couponList.length,\n        list: payload.couponList,\n      });\n    }\n  }, [getResponse.data]);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push('/coupons');\n    }\n  }, [createResponse.data]);\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push('/coupons');\n    }\n  }, [updateResponse.data]);\n\n  async function getCouponById(id: string): Promise<void> {\n    try {\n      await GetCouponById({\n        variables: { id },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateCoupon({\n        variables: {\n          newCoupon: {\n            ...state,\n            couponList: coupon.list,\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateCoupon({\n        variables: {\n          updatedCoupon: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function _onTypeSelect(key: string, val: string | string[]): void {\n    setState((prevState: any) => ({ ...prevState, [key]: val }));\n  }\n\n  function _onGenerate(): void {\n    const symbols = 'QWERTYUIOPASDFGHJKLZXCVBNM1234567890';\n    const list = [];\n    let key = new Date().getFullYear() + '';\n    for (let i = 0; i < coupon.count; i++) {\n      for (let j = 0; j < coupon.length; j++) {\n        key += symbols[Math.floor(Math.random() * symbols.length)];\n      }\n      list.push({ used: false, key });\n      key = new Date().getFullYear() + '';\n    }\n    setCoupon({ ...coupon, list });\n  }\n\n  return (\n    <>\n      <HeaderLine label=\"Create coupon\" goBack={true} />\n      <BorderedBox>\n        <Body flex=\"column\" align=\"start\">\n          <Flexbox cls=\"np gap\">\n            <Input\n              type=\"text\"\n              label=\"Name\"\n              name=\"name\"\n              value={state.name}\n              getValue={(val: string) => setState({ ...state, name: val })}\n              required={true}\n            />\n            <Input\n              type=\"text\"\n              label=\"Description\"\n              name=\"description\"\n              value={state.description}\n              getValue={(val: string) =>\n                setState({ ...state, description: val })\n              }\n            />\n            <DatePick\n              label=\"Expire date\"\n              value={new Date(state.endDate)}\n              getValue={(val: Date) => setState({ ...state, endDate: val })}\n              required={true}\n            />\n            <Input\n              type=\"number\"\n              label=\"Value of coupon\"\n              name=\"value\"\n              value={state.value}\n              getValue={(val: number) => setState({ ...state, value: +val })}\n              required={true}\n            />\n            <MultiSelect\n              label=\"Target\"\n              value={state.type!.map((t, i) => ({ id: t, name: t }))}\n              options={types.map((t, i) => ({ id: t, name: t }))}\n              getValue={(val: string[]) => _onTypeSelect('type', val)}\n              required={true}\n            />\n          </Flexbox>\n          <Flexbox cls=\"np gap\" align=\"start\">\n            <Flexbox cls=\"gap range-wrap\" flex=\"column\" align=\"start\">\n              <Slider\n                progress\n                value={coupon.length}\n                onChange={(value) => {\n                  setCoupon({ ...coupon, length: +value });\n                }}\n                min={5}\n                max={10}\n              />\n              <Slider\n                progress\n                value={coupon.count}\n                onChange={(value) => {\n                  setCoupon({ ...coupon, count: +value });\n                }}\n                min={1}\n                max={99}\n              />\n              <span>Coupon length: {coupon.length}</span>\n              <span>Coupon count: {coupon.count}</span>\n            </Flexbox>\n            <Flexbox cls=\"coupon-list-wrap\" col=\"4\" flex=\"column\" align=\"start\">\n              <span>List of coupon keys</span>\n              <ul>\n                {coupon.list.length ? (\n                  coupon.list.map((l, i) => (\n                    <li key={i}>\n                      {l.used ? <del>{l.key}</del> : <span>{l.key}</span>}\n                    </li>\n                  ))\n                ) : (\n                  <li>\n                    <span>Generate button is down below 👇</span>\n                  </li>\n                )}\n              </ul>\n            </Flexbox>\n          </Flexbox>\n        </Body>\n        <FooterPanel>\n          {mode === 'create' ? (\n            <Button\n              appearance=\"primary\"\n              label=\"Create\"\n              onAction={_onSave}\n              cls=\"m-0 mr-3\"\n            />\n          ) : (\n            <Button\n              appearance=\"primary\"\n              label=\"Update\"\n              onAction={_onUpdate}\n              cls=\"m-0 mr-3\"\n            />\n          )}\n          <Button\n            appearance=\"primary\"\n            label=\"Reset fields\"\n            onAction={() =>\n              setState({\n                id: uuid(),\n                ...initialState,\n              })\n            }\n            disabled={mode === 'update'}\n          />\n          <Button\n            appearance=\"primary\"\n            label=\"Generate Coupons\"\n            onAction={_onGenerate}\n            disabled={Boolean(coupon.list.length)}\n          />\n        </FooterPanel>\n      </BorderedBox>\n    </>\n  );\n};\n\nCreateCoupon.defaultProps = {};\n\nexport default CreateCoupon;\n\nconst Body = styled(Flexbox)`\n  padding: 0;\n  margin: 10px 0 20px 0;\n  gap: 10px;\n\n  .range-wrap {\n    background-color: ${({ theme }) => theme.colors.background};\n    min-height: 110px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.colors.lightBorder};\n    border-radius: 6px;\n    & > div {\n      margin: 10px auto 0 auto;\n      width: 100%;\n    }\n  }\n\n  .coupon-list-wrap {\n    background-color: ${({ theme }) => theme.colors.background};\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.colors.lightBorder};\n    border-radius: 6px;\n    padding: 10px !important;\n\n    span {\n      font-size: ${({ theme }) => theme.fontSize.sm + 'px'};\n      color: ${({ theme }) => theme.colors.color};\n      font-weight: 600;\n      margin-bottom: 5px;\n    }\n\n    ul {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 10px;\n\n      li {\n        font-size: ${({ theme }) => theme.fontSize.xs + 'px'};\n        color: ${({ theme }) => theme.colors.color};\n      }\n    }\n  }\n`;\n\nconst FooterPanel = styled(Flexbox)`\n  margin-top: 10px;\n  padding: 0;\n  gap: 10px;\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/BorderedBox.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Input.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brands.tsx",["399"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/cloudinary.utils.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/net-status.slice.ts",[],["400","401"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brand.page.tsx",["402"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/User.page.tsx",["403","404"],"import React, { useEffect, useMemo, useState } from 'react';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\n//components\nimport Table from '../../components/common/table/Table';\nimport HeaderLine from '../../components/common/HeaderLine';\n//types\nimport { ProductType } from '../../redux/types/product.type';\n//request\nimport {\n  GET_USERS,\n  DISABLE_USERS,\n  ACTIVATE_USERS,\n  DELETE_USERS,\n} from '../../redux/requests/user.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n//socket\nimport io from '../../utils/socket.utils';\n\nconst socket = io('user');\n\ntype Props = {};\n\nconst UserPage: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  //graphql\n  const [GetUsers, getResponse] = useLazyQuery(GET_USERS);\n  const [DisableUsers] = useMutation(DISABLE_USERS);\n  const [ActivateUsers] = useMutation(ACTIVATE_USERS);\n  const [DeleteUsers] = useMutation(DELETE_USERS);\n  //state\n  const [users, setUsers] = useState<ProductType[]>([]);\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [deepSearch, setDeepSearch] = useState<string>('');\n  const [unSelect, setUnSelect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getUsers;\n      setUsers(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data]);\n\n  useEffect(() => {\n    (async function () {\n      await getUsers(currentPage, rowCount, deepSearch);\n    })();\n  }, []);\n\n  async function getUsers(pg: number, rc: number, kw: string): Promise<void> {\n    try {\n      await GetUsers({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw,\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber);\n    await getUsers(pageNumber, rowCount, deepSearch);\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getUsers(currentPage, rc, deepSearch);\n  }\n\n  async function getDeepSearchFromTable(keyword: string): Promise<void> {\n    setDeepSearch(keyword);\n    await getUsers(currentPage, rowCount, keyword);\n  }\n\n  async function getIdsAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableUsers({\n        variables: {\n          disabledUsers: { ids },\n        },\n      });\n      handleUsersState(ids, true);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getIdsAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateUsers({\n        variables: {\n          activateUsers: { ids },\n        },\n      });\n      handleUsersState(ids, false);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getIdsAndDelete(ids: string[]): Promise<void> {\n    try {\n      await DeleteUsers({\n        variables: {\n          deleteUsers: { ids },\n        },\n      });\n      handleUsersList(ids);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function handleUsersState(ids: string[], isDisabled: boolean) {\n    const updatedUsers = users.map((product) => {\n      if (ids.includes(product.id)) {\n        return {\n          ...product,\n          isDisabled,\n        };\n      }\n      return product;\n    });\n    setUsers(updatedUsers);\n    socket.emit('logoutUsers', ids);\n  }\n\n  function handleUsersList(ids: string[]) {\n    const deletedUsers = users.filter((user) => !ids.includes(user.id));\n    setUsers(deletedUsers);\n    setUnSelect(true);\n    socket.emit('logoutUsers', ids);\n  }\n\n  return (\n    <>\n      <HeaderLine label=\"Users and roles\" />\n      {/*  table */}\n      <Table\n        data={users}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdsAndDisable={getIdsAndDisable}\n        getIdsAndActivate={getIdsAndActivate}\n        getIdsAndDelete={getIdsAndDelete}\n        getDateRange={(val) => false}\n        exclude={['id']}\n        error={!!getResponse.error}\n        path=\"users\"\n        unSelect={unSelect}\n      />\n    </>\n  );\n};\n\nexport default UserPage;\n",["405","406"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Divider.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/coupon.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/SubCategories.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/ModalBody.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/functions.utils.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/auth-credentials.slice.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/category.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/datePicker/DateRangePick.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/datePicker/DatePick.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/user.slice.ts",[],["407","408"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/HeaderLine.tsx",["409"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n//components\nimport BorderedBox from '../hoc/BorderedBox';\nimport Flexbox from '../hoc/Flexbox';\n\ntype Props = {\n  label: string;\n  goBack?: boolean;\n};\n\nconst HeaderLine: React.FC<Props> = ({ label, goBack }) => {\n  const history = useHistory();\n\n  return (\n    <BorderedBox>\n      <HeaderPanel justify=\"between\">\n        <h2>{label}</h2>\n        {goBack ? (\n          <h2 onClick={() => history.goBack()} className=\"hoverable\">\n            Go Back\n          </h2>\n        ) : (\n          <h2 />\n        )}\n      </HeaderPanel>\n    </BorderedBox>\n  );\n};\n\nexport default HeaderLine;\n\nHeaderLine.defaultProps = {\n  label: 'Section',\n  goBack: false,\n};\n\nconst HeaderPanel = styled(Flexbox)`\n  padding: 0;\n\n  h2 {\n    line-height: normal;\n    font-size: ${({ theme }) => theme.fontSize.md + 'px'};\n    color: ${({ theme }) => theme.colors.warning};\n    text-transform: uppercase;\n  }\n\n  h2:last-child {\n    cursor: pointer;\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/Table.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/richTextEditor/TinyEditor.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/styled-components.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useTheme.ts",["410"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useApollo.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useMedia.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/notificationBox/index.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/notificationBox/ErrorBox.tsx",["411"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/SystemUsage.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/socket.utils.ts",["412"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useInterval.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/ProgressBar.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/richTextEditor/templates.ts",[],["413","414"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/Notifications.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/styled-components.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/Buttons.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/validator.utils.ts",[],{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","replacedBy":"418"},{"ruleId":"415","replacedBy":"419"},{"ruleId":"417","replacedBy":"420"},{"ruleId":"415","replacedBy":"421"},{"ruleId":"417","replacedBy":"422"},{"ruleId":"423","severity":1,"message":"424","line":86,"column":6,"nodeType":"425","endLine":86,"endColumn":8,"suggestions":"426"},{"ruleId":"423","severity":1,"message":"427","line":142,"column":6,"nodeType":"425","endLine":142,"endColumn":27,"suggestions":"428"},{"ruleId":"423","severity":1,"message":"427","line":148,"column":6,"nodeType":"425","endLine":148,"endColumn":27,"suggestions":"429"},{"ruleId":"415","replacedBy":"430"},{"ruleId":"417","replacedBy":"431"},{"ruleId":"423","severity":1,"message":"432","line":47,"column":8,"nodeType":"425","endLine":47,"endColumn":15,"suggestions":"433"},{"ruleId":"415","replacedBy":"434"},{"ruleId":"417","replacedBy":"435"},{"ruleId":"436","severity":1,"message":"437","line":1,"column":17,"nodeType":"438","messageId":"439","endLine":1,"endColumn":25},{"ruleId":"436","severity":1,"message":"437","line":1,"column":17,"nodeType":"438","messageId":"439","endLine":1,"endColumn":25},{"ruleId":"415","replacedBy":"440"},{"ruleId":"417","replacedBy":"441"},{"ruleId":"436","severity":1,"message":"442","line":3,"column":23,"nodeType":"438","messageId":"439","endLine":3,"endColumn":38},{"ruleId":"436","severity":1,"message":"443","line":7,"column":10,"nodeType":"438","messageId":"439","endLine":7,"endColumn":15},{"ruleId":"423","severity":1,"message":"444","line":47,"column":8,"nodeType":"425","endLine":47,"endColumn":10,"suggestions":"445"},{"ruleId":"423","severity":1,"message":"446","line":42,"column":6,"nodeType":"425","endLine":42,"endColumn":8,"suggestions":"447"},{"ruleId":"415","replacedBy":"448"},{"ruleId":"417","replacedBy":"449"},{"ruleId":"415","replacedBy":"450"},{"ruleId":"417","replacedBy":"451"},{"ruleId":"423","severity":1,"message":"452","line":27,"column":6,"nodeType":"425","endLine":27,"endColumn":8,"suggestions":"453"},{"ruleId":"415","replacedBy":"454"},{"ruleId":"417","replacedBy":"455"},{"ruleId":"423","severity":1,"message":"456","line":61,"column":6,"nodeType":"425","endLine":61,"endColumn":8,"suggestions":"457"},{"ruleId":"423","severity":1,"message":"458","line":75,"column":6,"nodeType":"425","endLine":75,"endColumn":27,"suggestions":"459"},{"ruleId":"436","severity":1,"message":"460","line":4,"column":8,"nodeType":"438","messageId":"439","endLine":4,"endColumn":14},{"ruleId":"415","replacedBy":"461"},{"ruleId":"417","replacedBy":"462"},{"ruleId":"436","severity":1,"message":"463","line":15,"column":8,"nodeType":"438","messageId":"439","endLine":15,"endColumn":19},{"ruleId":"423","severity":1,"message":"464","line":32,"column":6,"nodeType":"425","endLine":32,"endColumn":8,"suggestions":"465"},{"ruleId":"423","severity":1,"message":"466","line":49,"column":6,"nodeType":"425","endLine":49,"endColumn":8,"suggestions":"467"},{"ruleId":"423","severity":1,"message":"468","line":57,"column":6,"nodeType":"425","endLine":57,"endColumn":8,"suggestions":"469"},{"ruleId":"423","severity":1,"message":"470","line":81,"column":6,"nodeType":"425","endLine":81,"endColumn":8,"suggestions":"471"},{"ruleId":"423","severity":1,"message":"427","line":106,"column":6,"nodeType":"425","endLine":106,"endColumn":27,"suggestions":"472"},{"ruleId":"423","severity":1,"message":"427","line":112,"column":6,"nodeType":"425","endLine":112,"endColumn":27,"suggestions":"473"},{"ruleId":"423","severity":1,"message":"474","line":55,"column":6,"nodeType":"425","endLine":55,"endColumn":8,"suggestions":"475"},{"ruleId":"423","severity":1,"message":"476","line":62,"column":6,"nodeType":"425","endLine":62,"endColumn":8,"suggestions":"477"},{"ruleId":"423","severity":1,"message":"427","line":75,"column":6,"nodeType":"425","endLine":75,"endColumn":27,"suggestions":"478"},{"ruleId":"423","severity":1,"message":"427","line":81,"column":6,"nodeType":"425","endLine":81,"endColumn":27,"suggestions":"479"},{"ruleId":"423","severity":1,"message":"480","line":55,"column":6,"nodeType":"425","endLine":55,"endColumn":8,"suggestions":"481"},{"ruleId":"423","severity":1,"message":"482","line":71,"column":6,"nodeType":"425","endLine":71,"endColumn":8,"suggestions":"483"},{"ruleId":"423","severity":1,"message":"427","line":89,"column":6,"nodeType":"425","endLine":89,"endColumn":27,"suggestions":"484"},{"ruleId":"423","severity":1,"message":"427","line":95,"column":6,"nodeType":"425","endLine":95,"endColumn":27,"suggestions":"485"},{"ruleId":"423","severity":1,"message":"486","line":27,"column":6,"nodeType":"425","endLine":27,"endColumn":8,"suggestions":"487"},{"ruleId":"415","replacedBy":"488"},{"ruleId":"417","replacedBy":"489"},{"ruleId":"423","severity":1,"message":"490","line":49,"column":6,"nodeType":"425","endLine":49,"endColumn":8,"suggestions":"491"},{"ruleId":"436","severity":1,"message":"492","line":1,"column":28,"nodeType":"438","messageId":"439","endLine":1,"endColumn":35},{"ruleId":"423","severity":1,"message":"493","line":52,"column":6,"nodeType":"425","endLine":52,"endColumn":8,"suggestions":"494"},{"ruleId":"415","replacedBy":"495"},{"ruleId":"417","replacedBy":"496"},{"ruleId":"415","replacedBy":"497"},{"ruleId":"417","replacedBy":"498"},{"ruleId":"499","severity":1,"message":"500","line":25,"column":11,"nodeType":"501","endLine":25,"endColumn":17},{"ruleId":"423","severity":1,"message":"502","line":40,"column":6,"nodeType":"425","endLine":40,"endColumn":8,"suggestions":"503"},{"ruleId":"436","severity":1,"message":"504","line":1,"column":17,"nodeType":"438","messageId":"439","endLine":1,"endColumn":26},{"ruleId":"436","severity":1,"message":"505","line":3,"column":5,"nodeType":"438","messageId":"439","endLine":3,"endColumn":41},{"ruleId":"415","replacedBy":"506"},{"ruleId":"417","replacedBy":"507"},"no-native-reassign",["508"],"no-negated-in-lhs",["509"],["508"],["509"],["508"],["509"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getBrands', 'getCategories', 'getCoupons', 'getProductById', and 'history.location.state'. Either include them or remove the dependency array.","ArrayExpression",["510"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["511"],["512"],["508"],["509"],"React Hook useEffect has a missing dependency: 'multiple'. Either include it or remove the dependency array.",["513"],["508"],["509"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["508"],["509"],"'MdNotifications' is defined but never used.","'Badge' is defined but never used.","React Hook useEffect has missing dependencies: '_onLogout' and 'user.id'. Either include them or remove the dependency array.",["514"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'netStatus.isOpen'. Either include them or remove the dependency array.",["515"],["508"],["509"],["508"],["509"],"React Hook useEffect has a missing dependency: 'getProductsByCategoryId'. Either include it or remove the dependency array.",["516"],["508"],["509"],"React Hook useEffect has missing dependencies: 'getUser' and 'location.state?.selected'. Either include them or remove the dependency array.",["517"],"React Hook useEffect has missing dependencies: 'history' and 'state.id'. Either include them or remove the dependency array.",["518"],"'Layout' is defined but never used.",["508"],["509"],"'SystemUsage' is defined but never used.","React Hook useEffect has a missing dependency: 'getStatistics'. Either include it or remove the dependency array.",["519"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getCategories', and 'rowCount'. Either include them or remove the dependency array.",["520"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["521"],"React Hook useEffect has missing dependencies: 'getBrandById', 'id', and 'mode'. Either include them or remove the dependency array.",["522"],["523"],["524"],"React Hook useEffect has missing dependencies: 'currentPage', 'dateRange.from', 'dateRange.to', 'deepSearch', 'getCoupons', and 'rowCount'. Either include them or remove the dependency array.",["525"],"React Hook useEffect has missing dependencies: 'getCategoryById', 'id', and 'mode'. Either include them or remove the dependency array.",["526"],["527"],["528"],"React Hook useEffect has missing dependencies: 'currentPage', 'dateRange.from', 'dateRange.to', 'deepSearch', 'getProducts', and 'rowCount'. Either include them or remove the dependency array.",["529"],"React Hook useEffect has missing dependencies: 'getCouponById', 'id', and 'mode'. Either include them or remove the dependency array.",["530"],["531"],["532"],"React Hook useEffect has a missing dependency: 'getBrandsByCategoryId'. Either include it or remove the dependency array.",["533"],["508"],["509"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getBrands', and 'rowCount'. Either include them or remove the dependency array.",["534"],"'useMemo' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getUsers', and 'rowCount'. Either include them or remove the dependency array.",["535"],["508"],["509"],["508"],["509"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["536"],"'useEffect' is defined but never used.","'socketAdapter' is defined but never used.",["508"],["509"],"no-global-assign","no-unsafe-negation",{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"561","fix":"562"},{"desc":"539","fix":"563"},{"desc":"541","fix":"564"},{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},{"desc":"539","fix":"569"},{"desc":"541","fix":"570"},{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},{"desc":"539","fix":"575"},{"desc":"541","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},"Update the dependencies array to be: [getBrands, getCategories, getCoupons, getProductById, history.location.state]",{"range":"585","text":"586"},"Update the dependencies array to be: [createResponse.data, history]",{"range":"587","text":"588"},"Update the dependencies array to be: [history, updateResponse.data]",{"range":"589","text":"590"},"Update the dependencies array to be: [multiple, value]",{"range":"591","text":"592"},"Update the dependencies array to be: [_onLogout, user.id]",{"range":"593","text":"594"},"Update the dependencies array to be: [dispatch, history, netStatus.isOpen]",{"range":"595","text":"596"},"Update the dependencies array to be: [getProductsByCategoryId]",{"range":"597","text":"598"},"Update the dependencies array to be: [getUser, location.state?.selected]",{"range":"599","text":"600"},"Update the dependencies array to be: [history, state.id, updateResponse.data]",{"range":"601","text":"602"},"Update the dependencies array to be: [getStatistics]",{"range":"603","text":"604"},"Update the dependencies array to be: [currentPage, deepSearch, getCategories, rowCount]",{"range":"605","text":"606"},"Update the dependencies array to be: [getCategories]",{"range":"607","text":"608"},"Update the dependencies array to be: [getBrandById, id, mode]",{"range":"609","text":"610"},{"range":"611","text":"588"},{"range":"612","text":"590"},"Update the dependencies array to be: [currentPage, dateRange.from, dateRange.to, deepSearch, getCoupons, rowCount]",{"range":"613","text":"614"},"Update the dependencies array to be: [getCategoryById, id, mode]",{"range":"615","text":"616"},{"range":"617","text":"588"},{"range":"618","text":"590"},"Update the dependencies array to be: [currentPage, dateRange.from, dateRange.to, deepSearch, getProducts, rowCount]",{"range":"619","text":"620"},"Update the dependencies array to be: [getCouponById, id, mode]",{"range":"621","text":"622"},{"range":"623","text":"588"},{"range":"624","text":"590"},"Update the dependencies array to be: [getBrandsByCategoryId]",{"range":"625","text":"626"},"Update the dependencies array to be: [currentPage, deepSearch, getBrands, rowCount]",{"range":"627","text":"628"},"Update the dependencies array to be: [currentPage, deepSearch, getUsers, rowCount]",{"range":"629","text":"630"},"Update the dependencies array to be: [dispatch]",{"range":"631","text":"632"},[3028,3030],"[getBrands, getCategories, getCoupons, getProductById, history.location.state]",[4423,4444],"[createResponse.data, history]",[4543,4564],"[history, updateResponse.data]",[1278,1285],"[multiple, value]",[1459,1461],"[_onLogout, user.id]",[1510,1512],"[dispatch, history, netStatus.isOpen]",[753,755],"[getProductsByCategoryId]",[1929,1931],"[getUser, location.state?.selected]",[2228,2249],"[history, state.id, updateResponse.data]",[1022,1024],"[getStatistics]",[1707,1709],"[currentPage, deepSearch, getCategories, rowCount]",[2121,2123],"[getCategories]",[2737,2739],"[getBrandById, id, mode]",[3413,3434],[3531,3552],[1750,1752],"[currentPage, dateRange.from, dateRange.to, deepSearch, getCoupons, rowCount]",[2076,2078],"[getCategoryById, id, mode]",[2341,2362],[2463,2484],[1772,1774],"[currentPage, dateRange.from, dateRange.to, deepSearch, getProducts, rowCount]",[2081,2083],"[getCouponById, id, mode]",[2495,2516],[2614,2635],[728,730],"[getBrandsByCategoryId]",[1624,1626],"[currentPage, deepSearch, getBrands, rowCount]",[1650,1652],"[currentPage, deepSearch, getUsers, rowCount]",[1194,1196],"[dispatch]"]