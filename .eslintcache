[{"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\index.tsx":"1","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\store.ts":"2","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Divider.tsx":"3","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ErrorBox.tsx":"4","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Button.tsx":"5","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Input.tsx":"6","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ProcessBox.tsx":"7","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Layout.tsx":"8","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\token.slice.ts":"9","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\utils\\storage.utils.ts":"10","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\user.request.ts":"11","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\user.slice.ts":"12","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithToken.tsx":"13","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\App.tsx":"14","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\SideMenu.tsx":"15","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Header.tsx":"16","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\reportWebVitals.ts":"17","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Table.tsx":"18","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\category.request.ts":"19","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Select.tsx":"20","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Auth.page.tsx":"21","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\CreateCategory.page.tsx":"22","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\Category.page.tsx":"23","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\LoadingBox.tsx":"24","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithoutToken.tsx":"25","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\Main.page.tsx":"26","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Login.tsx":"27","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Register.tsx":"28","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\Product.page.tsx":"29","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\product.request.ts":"30","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\CreateProduct.page.tsx":"31"},{"size":984,"mtime":1609165134470,"results":"32","hashOfConfig":"33"},{"size":569,"mtime":1609075281581,"results":"34","hashOfConfig":"33"},{"size":463,"mtime":1609063555514,"results":"35","hashOfConfig":"33"},{"size":371,"mtime":1609068577163,"results":"36","hashOfConfig":"33"},{"size":771,"mtime":1609235992399,"results":"37","hashOfConfig":"33"},{"size":1101,"mtime":1609705276994,"results":"38","hashOfConfig":"33"},{"size":522,"mtime":1609068588701,"results":"39","hashOfConfig":"33"},{"size":606,"mtime":1609669478969,"results":"40","hashOfConfig":"33"},{"size":693,"mtime":1609077105138,"results":"41","hashOfConfig":"33"},{"size":966,"mtime":1609076891545,"results":"42","hashOfConfig":"33"},{"size":318,"mtime":1609668483339,"results":"43","hashOfConfig":"33"},{"size":731,"mtime":1609151130054,"results":"44","hashOfConfig":"33"},{"size":568,"mtime":1609075533265,"results":"45","hashOfConfig":"33"},{"size":1556,"mtime":1609667540668,"results":"46","hashOfConfig":"33"},{"size":1708,"mtime":1609666972388,"results":"47","hashOfConfig":"33"},{"size":1273,"mtime":1609325726420,"results":"48","hashOfConfig":"33"},{"size":440,"mtime":1609063555517,"results":"49","hashOfConfig":"33"},{"size":7383,"mtime":1609669652327,"results":"50","hashOfConfig":"33"},{"size":1158,"mtime":1609622719114,"results":"51","hashOfConfig":"33"},{"size":1662,"mtime":1609500987373,"results":"52","hashOfConfig":"33"},{"size":989,"mtime":1609273707928,"results":"53","hashOfConfig":"33"},{"size":3557,"mtime":1609500439671,"results":"54","hashOfConfig":"33"},{"size":4115,"mtime":1609341438668,"results":"55","hashOfConfig":"33"},{"size":519,"mtime":1609273267360,"results":"56","hashOfConfig":"33"},{"size":571,"mtime":1609075533270,"results":"57","hashOfConfig":"33"},{"size":297,"mtime":1609273707950,"results":"58","hashOfConfig":"33"},{"size":2178,"mtime":1609668555771,"results":"59","hashOfConfig":"33"},{"size":2173,"mtime":1609273707931,"results":"60","hashOfConfig":"33"},{"size":4177,"mtime":1609670034252,"results":"61","hashOfConfig":"33"},{"size":1792,"mtime":1609668299329,"results":"62","hashOfConfig":"33"},{"size":4724,"mtime":1609705638513,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ivx92o",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\index.tsx",[],["132","133"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\store.ts",[],["134","135"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Divider.tsx",[],["136","137"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ErrorBox.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Button.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Input.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ProcessBox.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Layout.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\token.slice.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\utils\\storage.utils.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\user.request.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\user.slice.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithToken.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\App.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\SideMenu.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Header.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\reportWebVitals.ts",[],["138","139"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Table.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\category.request.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Select.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Auth.page.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\CreateCategory.page.tsx",["140","141","142"],"import React, {useEffect, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from \"@apollo/client\";\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Input from \"../../components/common/Input\";\nimport Button from \"../../components/common/Button\";\nimport ProcessBox from \"../../components/common/ProcessBox\";\nimport ErrorBox from \"../../components/common/ErrorBox\";\n//types\nimport { CategoryType } from \"../../redux/types/category.type\";\n//request\nimport { CREATE_CATEGORY, UPDATE_CATEGORY } from \"../../redux/requests/category.request\";\n\nconst initialState = {\n  name: '',\n  tabName: '',\n}\n\ntype Props = {}\n\nconst CreateCategory: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const [CreateCategory, createResponse] = useMutation(CREATE_CATEGORY);\n  const [UpdateCategory, updateResponse] = useMutation(UPDATE_CATEGORY);\n  const [state, setState] = useState<Partial<CategoryType>>(initialState);\n  const [mode, setMode] = useState<string>('create');\n\n  useEffect(() => {\n    const { mode, selected }: any = history.location.state;\n    if (mode === \"update\") {\n      setState(selected[0]);\n      setMode(mode);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push(\"/category\")\n    }\n  }, [createResponse])\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push(\"/category\")\n    }\n  }, [updateResponse])\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateCategory({\n        variables: {\n          newCategory: state\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateCategory({\n        variables: {\n          updatedCategory: state\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  return (\n    <Layout>\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"font-medium uppercase mx-4\">\n          Create category\n        </h2>\n        <h2\n          onClick={() => history.goBack()}\n          className=\"font-medium uppercase mx-4 cursor-pointer hover:opacity-75\"\n        >\n          Go Back\n        </h2>\n      </div>\n      <div className=\"flex items-center\">\n        <Input\n          type=\"text\"\n          label=\"Name\"\n          value={state.name}\n          getValue={(val: string) => setState({...state, name: val})}\n        />\n        <Input\n          type=\"text\"\n          label=\"Tab Name\"\n          value={state.tabName}\n          getValue={(val: string) => setState({...state, tabName: val})}\n        />\n      </div>\n      <div className=\"flex items-center mx-4 py-3\">\n        {\n          mode === \"create\" ? (\n            <Button\n              label=\"Create\"\n              onAction={_onSave}\n              cls=\"m-0 mr-3\"\n            />\n          ) : (\n            <Button\n              label=\"Update\"\n              onAction={_onUpdate}\n              cls=\"m-0 mr-3\"\n            />\n          )\n        }\n        <Button\n          label=\"Reset fields\"\n          onAction={() => setState(initialState)}\n          cls=\"m-0 mr-3\"\n        />\n      </div>\n      { createResponse.loading ? <ProcessBox /> : null }\n      { createResponse.error ? <ErrorBox message={createResponse.error.message} /> : null }\n\n      { updateResponse.loading ? <ProcessBox /> : null }\n      { updateResponse.error ? <ErrorBox message={updateResponse.error.message} /> : null }\n    </Layout>\n  );\n}\n\nCreateCategory.defaultProps = {}\n\nexport default CreateCategory;\n","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\Category.page.tsx",["143"],"import React, {useEffect, useState} from 'react';\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Table from \"../../components/common/Table\";\nimport ProcessBox from \"../../components/common/ProcessBox\";\nimport ErrorBox from \"../../components/common/ErrorBox\";\n//types\nimport { CategoryType } from \"../../redux/types/category.type\";\n//request\nimport {\n  GET_CATEGORIES,\n  DISABLE_CATEGORIES,\n  ACTIVATE_CATEGORIES\n} from \"../../redux/requests/category.request\";\n\ntype Props = {};\n\nconst CategoryPage: React.FC<Props> = (props) => {\n  const [GetCategories, getResponse] = useLazyQuery(GET_CATEGORIES);\n  const [DisableCategories, disableResponse] = useMutation(DISABLE_CATEGORIES);\n  const [ActivateCategories, activateResponse] = useMutation(ACTIVATE_CATEGORIES);\n  const [categories, setCategories] = useState<CategoryType[]>([]);\n  //pagination\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  //deep search\n  const [deepSearch, setDeepSearch] = useState<string>('');\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getCategories;\n      setCategories(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data])\n\n  useEffect(() => {\n    (async function() {\n      await getCategories(currentPage, rowCount, deepSearch)\n    })()\n  }, [])\n\n  async function getCategories(pg: number, rc: number, kw: string): Promise<void> {\n    try {\n      await GetCategories({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw\n          }\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber)\n    await getCategories(pageNumber, rowCount, deepSearch);\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getCategories(currentPage, rc, deepSearch);\n  }\n\n  async function getDeepSearchFromTable(kw: string): Promise<void> {\n    setDeepSearch(kw);\n    await getCategories(currentPage, rowCount, kw);\n  }\n\n  async function getIdAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableCategories({\n        variables: {\n          disabledCategories: { ids }\n        }\n      })\n      handleCategoriesState(ids, true)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateCategories({\n        variables: {\n          activateCategories: { ids }\n        }\n      })\n      handleCategoriesState(ids, false)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  function handleCategoriesState(ids: string[], isDisabled: boolean) {\n    const updatedCategories = categories.map(cat => {\n      if (ids.includes(cat.id)) {\n        return {\n          ...cat,\n          isDisabled\n        }\n      }\n      return cat;\n    })\n    setCategories(updatedCategories)\n  }\n\n  return (\n    <Layout>\n      <h2 className=\"font-medium uppercase mx-4\">\n        Categories\n      </h2>\n      {/*  table */}\n      <Table\n        data={categories}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdAndDisable={getIdAndDisable}\n        getIdAndActivate={getIdAndActivate}\n        path=\"category\"\n      />\n      { getResponse.loading ? <ProcessBox /> : null }\n      { getResponse.error ? <ErrorBox message={getResponse.error.message} /> : null }\n\n      { activateResponse.loading ? <ProcessBox /> : null }\n      { activateResponse.error ? <ErrorBox message={activateResponse.error.message} /> : null }\n\n      { disableResponse.loading ? <ProcessBox /> : null }\n      { disableResponse.error ? <ErrorBox message={disableResponse.error.message} /> : null }\n    </Layout>\n  );\n};\n\nexport default CategoryPage;\n","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\LoadingBox.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithoutToken.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\Main.page.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Login.tsx",["144"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Register.tsx",["145"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\Product.page.tsx",["146"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\product.request.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\CreateProduct.page.tsx",["147","148","149","150","151","152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"153","replacedBy":"157"},{"ruleId":"155","replacedBy":"158"},{"ruleId":"153","replacedBy":"159"},{"ruleId":"155","replacedBy":"160"},{"ruleId":"153","replacedBy":"161"},{"ruleId":"155","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":35,"column":6,"nodeType":"165","endLine":35,"endColumn":8,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":41,"column":6,"nodeType":"165","endLine":41,"endColumn":22,"suggestions":"168"},{"ruleId":"163","severity":1,"message":"167","line":47,"column":6,"nodeType":"165","endLine":47,"endColumn":22,"suggestions":"169"},{"ruleId":"163","severity":1,"message":"170","line":43,"column":6,"nodeType":"165","endLine":43,"endColumn":8,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":30,"column":24,"nodeType":"174","messageId":"175","endLine":30,"endColumn":28},{"ruleId":"172","severity":1,"message":"173","line":30,"column":24,"nodeType":"174","messageId":"175","endLine":30,"endColumn":28},{"ruleId":"163","severity":1,"message":"176","line":44,"column":6,"nodeType":"165","endLine":44,"endColumn":8,"suggestions":"177"},{"ruleId":"172","severity":1,"message":"178","line":1,"column":16,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"179","line":11,"column":10,"nodeType":"174","messageId":"175","endLine":11,"endColumn":21},{"ruleId":"163","severity":1,"message":"164","line":42,"column":6,"nodeType":"165","endLine":42,"endColumn":8,"suggestions":"180"},{"ruleId":"163","severity":1,"message":"167","line":48,"column":6,"nodeType":"165","endLine":48,"endColumn":22,"suggestions":"181"},{"ruleId":"163","severity":1,"message":"167","line":54,"column":6,"nodeType":"165","endLine":54,"endColumn":22,"suggestions":"182"},{"ruleId":"172","severity":1,"message":"183","line":80,"column":18,"nodeType":"174","messageId":"175","endLine":80,"endColumn":35},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],["184"],["185"],["184"],["185"],["184"],["185"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.","ArrayExpression",["186"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["187"],["188"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getCategories', and 'rowCount'. Either include them or remove the dependency array.",["189"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getProducts', and 'rowCount'. Either include them or remove the dependency array.",["190"],"'FormEvent' is defined but never used.","'ProductType' is defined but never used.",["191"],["192"],["193"],"'handleImageUpload' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"194","fix":"204"},{"desc":"196","fix":"205"},{"desc":"198","fix":"206"},"Update the dependencies array to be: [history.location.state]",{"range":"207","text":"208"},"Update the dependencies array to be: [createResponse, history]",{"range":"209","text":"210"},"Update the dependencies array to be: [history, updateResponse]",{"range":"211","text":"212"},"Update the dependencies array to be: [currentPage, deepSearch, getCategories, rowCount]",{"range":"213","text":"214"},"Update the dependencies array to be: [currentPage, deepSearch, getProducts, rowCount]",{"range":"215","text":"216"},{"range":"217","text":"208"},{"range":"218","text":"210"},{"range":"219","text":"212"},[1205,1207],"[history.location.state]",[1305,1321],"[createResponse, history]",[1418,1434],"[history, updateResponse]",[1498,1500],"[currentPage, deepSearch, getCategories, rowCount]",[1496,1498],"[currentPage, deepSearch, getProducts, rowCount]",[1278,1280],[1377,1393],[1489,1505]]