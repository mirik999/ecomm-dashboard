[{"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/reportWebVitals.ts":"1","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/roles.slice.ts":"2","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithoutToken.tsx":"3","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Auth.page.tsx":"4","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx":"5","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Flexbox.tsx":"6","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Button.tsx":"7","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/product.request.ts":"8","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/UploadZone.tsx":"9","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Register.tsx":"10","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Carousel.tsx":"11","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/LoadingCard.tsx":"12","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/index.tsx":"13","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Header.tsx":"14","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/App.tsx":"15","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Layout.tsx":"16","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/ColorPick.tsx":"17","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Checkbox.tsx":"18","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-adv/SliderAdv.tsx":"19","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/Slider.page.tsx":"20","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/store.ts":"21","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/MultiSelect.tsx":"22","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/table/Table.tsx":"23","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/main.request.ts":"24","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Navigation.tsx":"25","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/table/styled-components.ts":"26","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-best/SliderBest.tsx":"27","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/Products.tsx":"28","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Modal.tsx":"29","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/theme.slice.ts":"30","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/richTextEditor/TinyEditor.tsx":"31","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/table/body.handler..ts":"32","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithToken.tsx":"33","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/config/routes.tsx":"34","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/PermissionDenied.page.tsx":"35","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/NotFound.page.tsx":"36","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/CreateUser.page.tsx":"37","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/Settings.page.tsx":"38","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/ThemeSelecting.tsx":"39","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/StatisticCard.tsx":"40","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Main.page.tsx":"41","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/user.request.ts":"42","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/Category.page.tsx":"43","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/CreateBrand.page.tsx":"44","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/Coupon.page.tsx":"45","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/notificationBox/ErrorBox.tsx":"46","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/SingleSelect.tsx":"47","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Login.tsx":"48","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/richTextEditor/templates.ts":"49"},{"size":425,"mtime":1616437925159,"results":"50","hashOfConfig":"51"},{"size":231,"mtime":1616437925158,"results":"52","hashOfConfig":"51"},{"size":664,"mtime":1616846829191,"results":"53","hashOfConfig":"51"},{"size":741,"mtime":1616437925154,"results":"54","hashOfConfig":"51"},{"size":14162,"mtime":1618244490145,"results":"55","hashOfConfig":"51"},{"size":1893,"mtime":1616846829190,"results":"56","hashOfConfig":"51"},{"size":716,"mtime":1618426564960,"results":"57","hashOfConfig":"51"},{"size":2503,"mtime":1617733195224,"results":"58","hashOfConfig":"51"},{"size":8045,"mtime":1618824263855,"results":"59","hashOfConfig":"51"},{"size":2059,"mtime":1618585116159,"results":"60","hashOfConfig":"51"},{"size":1933,"mtime":1618672329478,"results":"61","hashOfConfig":"51"},{"size":734,"mtime":1616846829199,"results":"62","hashOfConfig":"51"},{"size":1330,"mtime":1618667427144,"results":"63","hashOfConfig":"51"},{"size":2517,"mtime":1618830473822,"results":"64","hashOfConfig":"51"},{"size":5515,"mtime":1618586082980,"results":"65","hashOfConfig":"51"},{"size":2772,"mtime":1618587684502,"results":"66","hashOfConfig":"51"},{"size":1092,"mtime":1618587717188,"results":"67","hashOfConfig":"51"},{"size":1101,"mtime":1618587801800,"results":"68","hashOfConfig":"51"},{"size":3280,"mtime":1618674432150,"results":"69","hashOfConfig":"51"},{"size":1234,"mtime":1618672067583,"results":"70","hashOfConfig":"51"},{"size":839,"mtime":1618418974238,"results":"71","hashOfConfig":"51"},{"size":1595,"mtime":1618244490143,"results":"72","hashOfConfig":"51"},{"size":8266,"mtime":1618826984275,"results":"73","hashOfConfig":"51"},{"size":306,"mtime":1616437925157,"results":"74","hashOfConfig":"51"},{"size":2800,"mtime":1616846829188,"results":"75","hashOfConfig":"51"},{"size":900,"mtime":1618825335096,"results":"76","hashOfConfig":"51"},{"size":3293,"mtime":1618674242509,"results":"77","hashOfConfig":"51"},{"size":3392,"mtime":1616846829203,"results":"78","hashOfConfig":"51"},{"size":1202,"mtime":1618672938804,"results":"79","hashOfConfig":"51"},{"size":1843,"mtime":1618670473129,"results":"80","hashOfConfig":"51"},{"size":2786,"mtime":1618244490144,"results":"81","hashOfConfig":"51"},{"size":1289,"mtime":1617655488402,"results":"82","hashOfConfig":"51"},{"size":982,"mtime":1618825365924,"results":"83","hashOfConfig":"51"},{"size":4167,"mtime":1618822719198,"results":"84","hashOfConfig":"51"},{"size":825,"mtime":1618823141068,"results":"85","hashOfConfig":"51"},{"size":798,"mtime":1618823151496,"results":"86","hashOfConfig":"51"},{"size":4179,"mtime":1618824263862,"results":"87","hashOfConfig":"51"},{"size":775,"mtime":1618830316425,"results":"88","hashOfConfig":"51"},{"size":3107,"mtime":1618830487285,"results":"89","hashOfConfig":"51"},{"size":4814,"mtime":1618834790444,"results":"90","hashOfConfig":"51"},{"size":2501,"mtime":1618834939719,"results":"91","hashOfConfig":"51"},{"size":1804,"mtime":1617731574624,"results":"92","hashOfConfig":"51"},{"size":4621,"mtime":1617127346338,"results":"93","hashOfConfig":"51"},{"size":6268,"mtime":1618824263853,"results":"94","hashOfConfig":"51"},{"size":5599,"mtime":1618244490145,"results":"95","hashOfConfig":"51"},{"size":1810,"mtime":1618425387250,"results":"96","hashOfConfig":"51"},{"size":1625,"mtime":1618244490143,"results":"97","hashOfConfig":"51"},{"size":2165,"mtime":1617655081475,"results":"98","hashOfConfig":"51"},{"size":661,"mtime":1616846829192,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"y767x1",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/reportWebVitals.ts",[],["206","207"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/roles.slice.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithoutToken.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Auth.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx",["208","209","210"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n//components\nimport Layout from '../../components/hoc/Layout';\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport UploadZone from '../../components/common/UploadZone';\nimport SingleSelect from '../../components/common/selectable/SingleSelect';\nimport MultiSelect from '../../components/common/selectable/MultiSelect';\nimport ColorPick from '../../components/common/ColorPick';\nimport Checkbox from '../../components/common/Checkbox';\nimport TinyEditor from '../../components/richTextEditor/TinyEditor';\nimport Flexbox from '../../components/hoc/Flexbox';\nimport HeaderLine from '../../components/common/HeaderLine';\nimport BorderedBox from '../../components/hoc/BorderedBox';\n//types\nimport { OptionType } from '../../redux/types/common.type';\nimport { CategoryType } from '../../redux/types/category.type';\n//request\nimport {\n  CREATE_PRODUCT,\n  UPDATE_PRODUCT,\n  GET_PRODUCT_BY_ID,\n} from '../../redux/requests/product.request';\nimport { GET_CATEGORIES_FOR_SELECT } from '../../redux/requests/category.request';\nimport { GET_BRANDS_FOR_SELECT } from '../../redux/requests/brand.request';\nimport { GET_COUPONS_FOR_SELECT } from '../../redux/requests/coupon.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n\nconst initialState: any = {\n  name: '',\n  code: '',\n  images: [],\n  cover: '',\n  description: '',\n  color: '',\n  price: 0,\n  saleCount: 0,\n  sale: false,\n  new: true,\n  freeDelivery: true,\n  guarantee: true,\n  hasCoupon: false,\n  used: false,\n  defective: false,\n  category: [],\n  brand: '',\n  coupon: '',\n};\n\ntype Props = {};\n\nconst CreateProduct: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  //state\n  const [CreateProduct, createResponse] = useMutation(CREATE_PRODUCT);\n  const [UpdateProduct, updateResponse] = useMutation(UPDATE_PRODUCT);\n  const [GetCategories, ctgResponse] = useLazyQuery(GET_CATEGORIES_FOR_SELECT);\n  const [GetProduct, productResponse] = useLazyQuery(GET_PRODUCT_BY_ID);\n  const [GetCoupons, couponsResponse] = useLazyQuery(GET_COUPONS_FOR_SELECT);\n  const [GetBrands, brandsResponse] = useLazyQuery(GET_BRANDS_FOR_SELECT);\n  const [state, setState] = useState<any>(initialState);\n  const [mode, setMode] = useState<string>('create');\n  const [categories, setCategories] = useState<OptionType[]>([]);\n  const [brands, setBrands] = useState<OptionType[]>([]);\n  const [coupons, setCoupons] = useState<OptionType[]>([]);\n\n  useEffect(() => {\n    (async function () {\n      const { mode, selected }: any = history.location.state;\n\n      await getCategories();\n      await getBrands();\n      await getCoupons();\n\n      if (mode === 'update') {\n        await getProductById(selected[0]);\n        setMode(mode);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (productResponse.data) {\n      const payload = productResponse.data.getProduct;\n      setState(payload);\n    }\n  }, [productResponse.data]);\n\n  useEffect(() => {\n    if (ctgResponse.data) {\n      const payload = ctgResponse.data.getCategories.payload;\n      let options = [];\n      for (let i = 0; i < payload.length; i++) {\n        options.push(payload[i]);\n        if (payload[i]?.subCategories) {\n          for (let j = 0; j < payload[i].subCategories.length; j++) {\n            options.push(payload[i].subCategories[j]);\n          }\n        }\n      }\n\n      setCategories(options);\n    }\n  }, [ctgResponse.data]);\n\n  useEffect(() => {\n    if (brandsResponse.data) {\n      const payload = brandsResponse.data.getBrands.payload;\n      let options = [];\n      for (let i = 0; i < payload.length; i++) {\n        options.push(payload[i]);\n      }\n\n      setBrands(options);\n    }\n  }, [brandsResponse.data]);\n\n  useEffect(() => {\n    if (couponsResponse.data) {\n      const payload = couponsResponse.data.getCoupons.payload;\n      let options = [];\n      for (let i = 0; i < payload.length; i++) {\n        if (payload[i].type.includes('product')) {\n          options.push(payload[i]);\n        }\n      }\n\n      setCoupons(options);\n    }\n  }, [couponsResponse.data]);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push('/products');\n    }\n  }, [createResponse.data]);\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push('/products');\n    }\n  }, [updateResponse.data]);\n\n  async function getProductById(id: string): Promise<void> {\n    try {\n      await GetProduct({\n        variables: { id },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getCategories(): Promise<void> {\n    try {\n      await GetCategories({\n        variables: {\n          controls: {\n            offset: 0,\n            limit: 1000,\n            keyword: '',\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getBrands(): Promise<void> {\n    try {\n      await GetBrands({\n        variables: {\n          controls: {\n            offset: 0,\n            limit: 1000,\n            keyword: '',\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getCoupons(): Promise<void> {\n    try {\n      await GetCoupons({\n        variables: {\n          controls: {\n            offset: 0,\n            limit: 1000,\n            keyword: '',\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function _onChange(val: any, name: string): void {\n    if (name === 'new' && val) {\n      setState((prevState: any) => ({ ...prevState, new: true, used: false }));\n    } else if (name === 'used' && val) {\n      setState((prevState: any) => ({ ...prevState, new: false, used: true }));\n    } else {\n      setState((prevState: any) => ({ ...prevState, [name]: val }));\n    }\n  }\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateProduct({\n        variables: {\n          newProduct: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateProduct({\n        variables: {\n          updatedProduct: handleState(state),\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function _onComboSelect(key: string, val: string | string[]): void {\n    setState((prevState: any) => ({ ...prevState, [key]: val }));\n  }\n\n  function getCoverImage(val: string[]): void {\n    const cover = val[0] ? val[0] : '';\n    setState((prevState: any) => ({ ...prevState, cover }));\n  }\n\n  function getImages(images: string[]): void {\n    setState((prevState: any) => ({ ...prevState, images }));\n  }\n\n  function getDescriptionHtml(val: string): void {\n    setState((prevState: any) => ({ ...prevState, description: val }));\n  }\n\n  function handleState(st: any): any {\n    const category = st.category.map((cat: CategoryType) => cat?.id || cat);\n    const coupon = st.coupon?.id || st.coupon;\n    const brand = st.brand?.id || st.brand;\n    return {\n      ...st,\n      category,\n      coupon,\n      brand,\n    };\n  }\n\n  return (\n    <Layout>\n      <Container>\n        <HeaderLine label=\"Create Product\" goBack={true} />\n        <BorderedBox>\n          <Flexbox cls=\"gap np\">\n            <Input\n              type=\"text\"\n              label=\"Product name\"\n              name=\"productName\"\n              value={state.name}\n              getValue={(val: string) => _onChange(val, 'name')}\n            />\n            <Input\n              type=\"text\"\n              label=\"Code\"\n              name=\"code\"\n              value={state.code}\n              getValue={(val: string) => _onChange(val, 'code')}\n            />\n            <Input\n              type=\"number\"\n              label=\"Price\"\n              name=\"price\"\n              value={state.price}\n              getValue={(val: string) => _onChange(+val, 'price')}\n            />\n            <Input\n              type=\"number\"\n              label=\"Sale percent\"\n              name=\"salePercent\"\n              value={state.saleCount}\n              getValue={(val: string) => _onChange(+val, 'saleCount')}\n            />\n            <MultiSelect\n              label=\"Category\"\n              value={state.category}\n              options={categories}\n              getValue={(val: string[]) => _onComboSelect('category', val)}\n            />\n            <SingleSelect\n              label=\"Brand\"\n              value={state.brand}\n              options={brands}\n              getValue={(val: string) => _onComboSelect('brand', val)}\n            />\n            <ColorPick\n              value={state.color}\n              getValue={(val: string) => _onChange(val, 'color')}\n            />\n            <SingleSelect\n              label=\"Coupon\"\n              value={state.coupon}\n              options={coupons}\n              getValue={(val: string) => _onComboSelect('coupon', val)}\n              disabled={!state.hasCoupon}\n            />\n          </Flexbox>\n          <Flexbox cls=\"mt gap np\" align=\"start\">\n            <UploadZone\n              multiple={false}\n              value={state.cover}\n              label=\"Maximum 1 image and Size less than 500KB\"\n              getValue={getCoverImage}\n              folderInCloud=\"product_images\"\n            />\n            <UploadZone\n              multiple={true}\n              value={state.images}\n              label=\"Maximum 5 images and Each size less than 500KB\"\n              getValue={getImages}\n              folderInCloud=\"product_images\"\n            />\n          </Flexbox>\n          <Flexbox cls=\"sides-wrap mt gap np\" justify=\"start\" align=\"start\">\n            <Flexbox cls=\"right-side gap np\" flex=\"column\" align=\"start\">\n              <Flexbox\n                cls=\"checkbox-wrap gap np\"\n                flex=\"column\"\n                justify=\"start\"\n                align=\"start\"\n              >\n                <Flexbox\n                  cls=\"checkbox-child-wrap gap np\"\n                  flex=\"column\"\n                  justify=\"start\"\n                  align=\"start\"\n                >\n                  <Checkbox\n                    label=\"Sale\"\n                    name=\"sale\"\n                    value={state.sale}\n                    getValue={(val: boolean) => _onChange(val, 'sale')}\n                  />\n                  <Checkbox\n                    label=\"New\"\n                    name=\"new\"\n                    value={state.new}\n                    getValue={(val: boolean) => _onChange(val, 'new')}\n                  />\n                  <Checkbox\n                    label=\"Free Delivery\"\n                    name=\"freeDelivery\"\n                    value={state.freeDelivery}\n                    getValue={(val: boolean) => _onChange(val, 'freeDelivery')}\n                  />\n                  <Checkbox\n                    label=\"Guarantee\"\n                    name=\"guarantee\"\n                    value={state.guarantee}\n                    getValue={(val: boolean) => _onChange(val, 'guarantee')}\n                  />\n                  <Checkbox\n                    label=\"Coupon\"\n                    name=\"hasCoupon\"\n                    value={state.hasCoupon}\n                    getValue={(val: boolean) => _onChange(val, 'hasCoupon')}\n                  />\n                  <Checkbox\n                    label=\"Used\"\n                    name=\"used\"\n                    value={state.used}\n                    getValue={(val: boolean) => _onChange(val, 'used')}\n                  />\n                  <Checkbox\n                    label=\"Defective\"\n                    name=\"defective\"\n                    value={state.defective}\n                    getValue={(val: boolean) => _onChange(val, 'defective')}\n                  />\n                </Flexbox>\n              </Flexbox>\n              <Flexbox cls=\"np\" flex=\"column\" align=\"start\">\n                <TinyEditor\n                  label=\"Description\"\n                  value={state.description}\n                  getValue={getDescriptionHtml}\n                  cls=\"md:flex-2\"\n                />\n              </Flexbox>\n              <Flexbox cls=\"gap np\">\n                {mode === 'create' ? (\n                  <Button\n                    appearance=\"primary\"\n                    label=\"Create\"\n                    onAction={_onSave}\n                    cls=\"m-0 mr-3\"\n                  />\n                ) : (\n                  <Button\n                    appearance=\"primary\"\n                    label=\"Update\"\n                    onAction={_onUpdate}\n                    cls=\"m-0 mr-3\"\n                  />\n                )}\n                <Button\n                  appearance=\"primary\"\n                  label=\"Reset fields\"\n                  onAction={() => setState(initialState)}\n                  cls=\"m-0 mr-3\"\n                />\n              </Flexbox>\n            </Flexbox>\n          </Flexbox>\n        </BorderedBox>\n      </Container>\n    </Layout>\n  );\n};\n\nCreateProduct.defaultProps = {};\n\nexport default CreateProduct;\n\nconst Container = styled.div`\n  .heading {\n    font-size: ${({ theme }) => theme.fontSize.sm + 'px'};\n    font-weight: bold;\n    margin-bottom: 5px;\n    color: ${({ theme }) => theme.colors.color};\n  }\n\n  .checkbox-wrap {\n    .checkbox-child-wrap {\n      overflow: hidden;\n      max-height: 70px;\n    }\n  }\n\n  @media screen and (max-width: 1700px) {\n    .sides-wrap {\n      flex-direction: column;\n    }\n  }\n\n  @media screen and (max-width: 1000px) {\n    .color-and-checkbox-wrap {\n      flex-direction: row;\n    }\n    .sides-wrap {\n      flex-direction: column;\n    }\n  }\n\n  @media screen and (max-width: 700px) {\n    .color-and-checkbox-wrap {\n      flex-direction: column;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    .color-and-checkbox-wrap {\n      flex-direction: column;\n    }\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Flexbox.tsx",[],["211","212"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Button.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/product.request.ts",[],["213","214"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/UploadZone.tsx",["215"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Register.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Carousel.tsx",["216"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/LoadingCard.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/index.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Header.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/App.tsx",["217","218","219","220"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Layout.tsx",["221"],"import React, { Fragment, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Helmet from 'react-helmet';\n//components\nimport Header from '../common/Header';\nimport Navigation from '../common/Navigation';\nimport Flexbox from './Flexbox';\n//utils\nimport { getFromLocalStorage } from '../../utils/storage.utils';\n//types\nimport { RootState } from '../../redux/store';\n//actions\nimport { themeToDark, themeToLight } from '../../redux/slices/theme.slice';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  const dispatch = useDispatch();\n  const { theme } = useSelector((state: RootState) => state);\n\n  useEffect(() => {\n    const locTheme = getFromLocalStorage('theme');\n    if (\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n    ) {\n      if (!locTheme) {\n        require('rsuite/dist/styles/rsuite-dark.min.css');\n        dispatch(themeToDark());\n      }\n    }\n\n    if (locTheme === 'dark') {\n      require('rsuite/dist/styles/rsuite-dark.min.css');\n      dispatch(themeToDark());\n    }\n\n    if (locTheme === 'light') {\n      require('rsuite/dist/styles/rsuite-default.min.css');\n      dispatch(themeToLight());\n    }\n  }, []);\n\n  const rsuiteLight =\n    'https://cdnjs.cloudflare.com/ajax/libs/rsuite/4.9.3/styles/rsuite-default.min.css';\n  const rsuiteDark =\n    'https://cdnjs.cloudflare.com/ajax/libs/rsuite/4.9.3/styles/rsuite-dark.min.css';\n\n  return (\n    <Fragment>\n      <Helmet\n        link={[\n          {\n            rel: 'stylesheet',\n            href: theme.name === 'dark' ? rsuiteDark : rsuiteLight,\n          },\n        ]}\n      />\n      <Container>\n        <Navigation />\n        <Flexbox cls=\"np\" justify=\"start\" align=\"start\" flex=\"column\" col=\"1\">\n          <Header />\n          <div className=\"children-wrap\">{children}</div>\n        </Flexbox>\n      </Container>\n    </Fragment>\n  );\n};\n\nLayout.defaultProps = {};\n\nexport default Layout;\n\nconst Container = styled(Flexbox)`\n  max-width: 100%;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  background-color: ${({ theme }) => theme.colors.background};\n\n  .children-wrap {\n    padding: 30px;\n    width: 100%;\n    background-color: ${({ theme }) => theme.colors.background};\n    height: calc(100vh - 45px);\n    max-width: calc(100vw - 160px);\n    overflow: auto;\n\n    & > h2 {\n      font-size: ${({ theme }) => theme.fontSize.md + 'px'};\n      color: ${({ theme }) => theme.colors.color};\n      text-transform: uppercase;\n    }\n\n    @media screen and (max-width: 767px) {\n      padding: 10px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-width: calc(100vw - 33px) !important;\n      margin-left: 33px;\n    }\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/ColorPick.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Checkbox.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-adv/SliderAdv.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/Slider.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/store.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/MultiSelect.tsx",["222"],"import React, { memo, useEffect, useState } from 'react';\nimport { CheckPicker, SelectPicker } from 'rsuite';\nimport styled from 'styled-components';\n//types\nimport { OptionType } from '../../../redux/types/common.type';\n\ntype Props = {\n  label?: string;\n  value: any;\n  cls?: string;\n  options: OptionType[];\n  getValue: (val: string[]) => void;\n  [key: string]: any;\n};\n\nconst MultiSelect: React.FC<Props> = memo(\n  ({ label, value, cls, options, getValue, ...props }) => {\n    const [innerState, setInnerState] = useState<string[]>([]);\n\n    useEffect(() => {\n      if (typeof value[0] === 'object') {\n        setInnerState(value.map((v: any) => v.id));\n      } else {\n        setInnerState(value);\n      }\n    }, [value]);\n\n    function _onChange(selectedOption: string[]): void {\n      setInnerState(selectedOption);\n      getValue(selectedOption);\n    }\n\n    return (\n      <Label className={cls}>\n        <CheckPicker\n          value={innerState}\n          data={options}\n          onChange={_onChange}\n          labelKey=\"name\"\n          valueKey=\"id\"\n          block\n          placeholder={label}\n          disabled={props.isDisabled}\n        />\n      </Label>\n    );\n  },\n  (prevProps, nextProps) => {\n    return (\n      prevProps.value === nextProps.value &&\n      prevProps.options.length === nextProps.options.length\n    );\n  },\n);\n\nMultiSelect.defaultProps = {\n  label: 'Label',\n  cls: '',\n  options: [],\n  value: '',\n  getValue: () => false,\n};\n\nexport default MultiSelect;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  min-width: 220px;\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/table/Table.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/main.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Navigation.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/table/styled-components.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-best/SliderBest.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/Products.tsx",["223"],"import React, { memo, useEffect, useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport styled from 'styled-components';\n//components\nimport Flexbox from '../../components/hoc/Flexbox';\n//request\nimport { GET_PRODUCTS_BY_CATEGORY_ID } from '../../redux/requests/product.request';\n//types\nimport { ProductType } from '../../redux/types/product.type';\n\ntype Props = {\n  id: string;\n};\n\nconst Products: React.FC<Props> = memo(({ id }) => {\n  //requests\n  const [GetProductsByCategoryId, productsResponse] = useLazyQuery(\n    GET_PRODUCTS_BY_CATEGORY_ID,\n  );\n  //state\n  const [products, setProducts] = useState<ProductType[]>([]);\n\n  useEffect(() => {\n    (async function () {\n      await getProductsByCategoryId();\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (productsResponse.data) {\n      const payload = productsResponse.data.getProductsByCategoryId;\n      setProducts(payload);\n    }\n  }, [productsResponse]);\n\n  async function getProductsByCategoryId(): Promise<void> {\n    try {\n      await GetProductsByCategoryId({\n        variables: {\n          id,\n        },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Container flex=\"column\" align=\"start\">\n      <Flexbox cls=\"header np\" justify=\"between\">\n        <h3>Products</h3>\n        <Flexbox cls=\"np count-wrap\" justify=\"end\">\n          <small>{products.length}</small>\n        </Flexbox>\n      </Flexbox>\n      {products.length ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Product name</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product, i) => (\n              <tr key={i}>\n                <td>{product.name}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <span className=\"no-data\">No products</span>\n      )}\n    </Container>\n  );\n});\n\nProducts.defaultProps = {\n  id: '',\n};\n\nexport default Products;\n\nconst Container = styled(Flexbox)`\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 4px;\n  border-width: 2px 4px 2px 2px;\n  border-style: solid;\n  border-color: ${({ theme }) => theme.colors.border};\n  padding: 10px;\n  min-width: 300px;\n  max-width: 500px;\n\n  .header {\n    min-height: 40px !important;\n    border-width: 0 0 2px 0;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.colors.border};\n\n    h3 {\n      font-weight: bold;\n      margin: 0;\n    }\n\n    .count-wrap {\n      small {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: ${({ theme }) => theme.colors.errorLight};\n        border-right: ${({ theme }) => `4px solid ${theme.colors.error}`};\n        color: ${({ theme }) => theme.colors.white};\n        border-radius: 5px;\n        width: 40px;\n        height: 20px;\n        text-align: center;\n        font-weight: bold;\n        font-size: ${({ theme }) => theme.fontSize.xs + 'px'};\n      }\n    }\n  }\n\n  table {\n    width: 100%;\n    border-collapse: separate;\n    overflow: auto;\n    white-space: nowrap;\n    border-radius: 3px;\n\n    th,\n    td {\n      text-align: left;\n      border-width: 1px;\n      border-style: solid;\n      border-color: ${({ theme }) => theme.colors.border};\n      padding: 3px;\n    }\n  }\n\n  .no-data {\n    display: block;\n    margin-top: 10px;\n  }\n\n  @media (max-width: 789px) {\n    max-width: 100%;\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Modal.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/theme.slice.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/richTextEditor/TinyEditor.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/table/body.handler..ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithToken.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/config/routes.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/PermissionDenied.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/NotFound.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/CreateUser.page.tsx",["224","225"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/Settings.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/ThemeSelecting.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/StatisticCard.tsx",["226","227"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Main.page.tsx",["228","229","230","231","232","233"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\n//components\nimport Layout from '../../components/hoc/Layout';\nimport SystemUsage from './SystemUsage';\nimport StatisticCard from './StatisticCard';\nimport Flexbox from '../../components/hoc/Flexbox';\nimport HeaderLine from '../../components/common/HeaderLine';\nimport BorderedBox from '../../components/hoc/BorderedBox';\n//request\nimport { GET_STATISTICS } from '../../redux/requests/main.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\nimport { RootState } from '../../redux/store';\n\ntype Props = {};\n\nconst MainPage: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const { theme } = useSelector((state: RootState) => state);\n  //state\n  const [GetStatistics, statsResponse] = useLazyQuery(GET_STATISTICS);\n  const [stats, setStats] = useState({\n    product: {},\n    category: {},\n    brand: {},\n  });\n\n  useEffect(() => {\n    (async () => {\n      await getStatistics();\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (statsResponse.data) {\n      setStats(statsResponse.data.getAll);\n    }\n  }, [statsResponse.data]);\n\n  async function getStatistics() {\n    try {\n      await GetStatistics();\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  return (\n    <Layout>\n      <HeaderLine label=\"Common Statistics\" />\n      <BorderedBox>\n        {/*<Flexbox cls=\"np gap\">*/}\n        {/*  /!*<SystemUsage />*!/*/}\n        {/*  {stats.product ? (*/}\n        {/*    <StatisticCard*/}\n        {/*      theme={theme.name}*/}\n        {/*      header=\"Product\"*/}\n        {/*      stats={stats.product}*/}\n        {/*      status={statsResponse.loading}*/}\n        {/*    />*/}\n        {/*  ) : null}*/}\n        {/*  {stats.category ? (*/}\n        {/*    <StatisticCard*/}\n        {/*      theme={theme.name}*/}\n        {/*      header=\"Category\"*/}\n        {/*      stats={stats.category}*/}\n        {/*      status={statsResponse.loading}*/}\n        {/*    />*/}\n        {/*  ) : null}*/}\n        {/*  {stats.brand ? (*/}\n        {/*    <StatisticCard*/}\n        {/*      theme={theme.name}*/}\n        {/*      header=\"Brand\"*/}\n        {/*      stats={stats.brand}*/}\n        {/*      status={statsResponse.loading}*/}\n        {/*    />*/}\n        {/*  ) : null}*/}\n        {/*</Flexbox>*/}\n      </BorderedBox>\n    </Layout>\n  );\n};\n\nexport default MainPage;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/user.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/Category.page.tsx",["234"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/CreateBrand.page.tsx",["235","236","237","238"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/Coupon.page.tsx",["239"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/notificationBox/ErrorBox.tsx",["240"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/SingleSelect.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Login.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/richTextEditor/templates.ts",[],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":86,"column":6,"nodeType":"247","endLine":86,"endColumn":8,"suggestions":"248"},{"ruleId":"245","severity":1,"message":"249","line":142,"column":6,"nodeType":"247","endLine":142,"endColumn":27,"suggestions":"250"},{"ruleId":"245","severity":1,"message":"249","line":148,"column":6,"nodeType":"247","endLine":148,"endColumn":27,"suggestions":"251"},{"ruleId":"241","replacedBy":"252"},{"ruleId":"243","replacedBy":"253"},{"ruleId":"241","replacedBy":"254"},{"ruleId":"243","replacedBy":"255"},{"ruleId":"245","severity":1,"message":"256","line":37,"column":8,"nodeType":"247","endLine":37,"endColumn":15,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":25},{"ruleId":"258","severity":1,"message":"262","line":26,"column":10,"nodeType":"260","messageId":"261","endLine":26,"endColumn":21},{"ruleId":"258","severity":1,"message":"263","line":26,"column":23,"nodeType":"260","messageId":"261","endLine":26,"endColumn":35},{"ruleId":"258","severity":1,"message":"264","line":30,"column":3,"nodeType":"260","messageId":"261","endLine":30,"endColumn":22},{"ruleId":"245","severity":1,"message":"265","line":53,"column":6,"nodeType":"247","endLine":53,"endColumn":8,"suggestions":"266"},{"ruleId":"245","severity":1,"message":"267","line":45,"column":6,"nodeType":"247","endLine":45,"endColumn":8,"suggestions":"268"},{"ruleId":"258","severity":1,"message":"269","line":2,"column":23,"nodeType":"260","messageId":"261","endLine":2,"endColumn":35},{"ruleId":"245","severity":1,"message":"270","line":27,"column":6,"nodeType":"247","endLine":27,"endColumn":8,"suggestions":"271"},{"ruleId":"245","severity":1,"message":"272","line":58,"column":6,"nodeType":"247","endLine":58,"endColumn":8,"suggestions":"273"},{"ruleId":"245","severity":1,"message":"249","line":71,"column":6,"nodeType":"247","endLine":71,"endColumn":27,"suggestions":"274"},{"ruleId":"258","severity":1,"message":"275","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":26},{"ruleId":"258","severity":1,"message":"276","line":1,"column":28,"nodeType":"260","messageId":"261","endLine":1,"endColumn":34},{"ruleId":"258","severity":1,"message":"277","line":6,"column":8,"nodeType":"260","messageId":"261","endLine":6,"endColumn":19},{"ruleId":"258","severity":1,"message":"278","line":7,"column":8,"nodeType":"260","messageId":"261","endLine":7,"endColumn":21},{"ruleId":"258","severity":1,"message":"279","line":8,"column":8,"nodeType":"260","messageId":"261","endLine":8,"endColumn":15},{"ruleId":"258","severity":1,"message":"280","line":21,"column":11,"nodeType":"260","messageId":"261","endLine":21,"endColumn":16},{"ruleId":"258","severity":1,"message":"281","line":24,"column":10,"nodeType":"260","messageId":"261","endLine":24,"endColumn":15},{"ruleId":"245","severity":1,"message":"282","line":34,"column":6,"nodeType":"247","endLine":34,"endColumn":8,"suggestions":"283"},{"ruleId":"245","severity":1,"message":"284","line":49,"column":6,"nodeType":"247","endLine":49,"endColumn":8,"suggestions":"285"},{"ruleId":"245","severity":1,"message":"286","line":57,"column":6,"nodeType":"247","endLine":57,"endColumn":8,"suggestions":"287"},{"ruleId":"245","severity":1,"message":"288","line":83,"column":6,"nodeType":"247","endLine":83,"endColumn":8,"suggestions":"289"},{"ruleId":"245","severity":1,"message":"249","line":108,"column":6,"nodeType":"247","endLine":108,"endColumn":27,"suggestions":"290"},{"ruleId":"245","severity":1,"message":"249","line":114,"column":6,"nodeType":"247","endLine":114,"endColumn":27,"suggestions":"291"},{"ruleId":"245","severity":1,"message":"292","line":56,"column":6,"nodeType":"247","endLine":56,"endColumn":8,"suggestions":"293"},{"ruleId":"258","severity":1,"message":"275","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":26},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getBrands', 'getCategories', 'getCoupons', 'getProductById', and 'history.location.state'. Either include them or remove the dependency array.","ArrayExpression",["296"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["297"],["298"],["294"],["295"],["294"],["295"],"React Hook useEffect has a missing dependency: 'multiple'. Either include it or remove the dependency array.",["299"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'themeToDark' is defined but never used.","'themeToLight' is defined but never used.","'getFromLocalStorage' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["300"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["301"],"'SelectPicker' is defined but never used.","React Hook useEffect has a missing dependency: 'getProductsByCategoryId'. Either include it or remove the dependency array.",["302"],"React Hook useEffect has missing dependencies: 'getUser' and 'location.state?.selected'. Either include them or remove the dependency array.",["303"],["304"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'SystemUsage' is defined but never used.","'StatisticCard' is defined but never used.","'Flexbox' is defined but never used.","'theme' is assigned a value but never used.","'stats' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStatistics'. Either include it or remove the dependency array.",["305"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getCategories', and 'rowCount'. Either include them or remove the dependency array.",["306"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["307"],"React Hook useEffect has missing dependencies: 'getBrandById' and 'history.location.state'. Either include them or remove the dependency array.",["308"],["309"],["310"],"React Hook useEffect has missing dependencies: 'currentPage', 'dateRange.from', 'dateRange.to', 'deepSearch', 'getCoupons', and 'rowCount'. Either include them or remove the dependency array.",["311"],"no-global-assign","no-unsafe-negation",{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"316","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"314","fix":"337"},{"desc":"316","fix":"338"},{"desc":"339","fix":"340"},"Update the dependencies array to be: [getBrands, getCategories, getCoupons, getProductById, history.location.state]",{"range":"341","text":"342"},"Update the dependencies array to be: [createResponse.data, history]",{"range":"343","text":"344"},"Update the dependencies array to be: [history, updateResponse.data]",{"range":"345","text":"346"},"Update the dependencies array to be: [multiple, value]",{"range":"347","text":"348"},"Update the dependencies array to be: [dispatch, history]",{"range":"349","text":"350"},"Update the dependencies array to be: [dispatch]",{"range":"351","text":"352"},"Update the dependencies array to be: [getProductsByCategoryId]",{"range":"353","text":"354"},"Update the dependencies array to be: [getUser, location.state?.selected]",{"range":"355","text":"356"},{"range":"357","text":"346"},"Update the dependencies array to be: [getStatistics]",{"range":"358","text":"359"},"Update the dependencies array to be: [currentPage, deepSearch, getCategories, rowCount]",{"range":"360","text":"361"},"Update the dependencies array to be: [getCategories]",{"range":"362","text":"363"},"Update the dependencies array to be: [getBrandById, history.location.state]",{"range":"364","text":"365"},{"range":"366","text":"344"},{"range":"367","text":"346"},"Update the dependencies array to be: [currentPage, dateRange.from, dateRange.to, deepSearch, getCoupons, rowCount]",{"range":"368","text":"369"},[3059,3061],"[getBrands, getCategories, getCoupons, getProductById, history.location.state]",[4454,4475],"[createResponse.data, history]",[4574,4595],"[history, updateResponse.data]",[1194,1201],"[multiple, value]",[1703,1705],"[dispatch, history]",[1297,1299],"[dispatch]",[753,755],"[getProductsByCategoryId]",[1883,1885],"[getUser, location.state?.selected]",[2139,2160],[1103,1105],"[getStatistics]",[1700,1702],"[currentPage, deepSearch, getCategories, rowCount]",[1969,1971],"[getCategories]",[2676,2678],"[getBrandById, history.location.state]",[3352,3373],[3470,3491],[1793,1795],"[currentPage, dateRange.from, dateRange.to, deepSearch, getCoupons, rowCount]"]