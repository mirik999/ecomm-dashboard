[{"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/reportWebVitals.ts":"1","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/roles.slice.ts":"2","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithoutToken.tsx":"3","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Auth.page.tsx":"4","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx":"5","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Flexbox.tsx":"6","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Button.tsx":"7","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/product.request.ts":"8","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/UploadZone.tsx":"9","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Register.tsx":"10","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Carousel.tsx":"11","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/LoadingCard.tsx":"12","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/index.tsx":"13","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Header.tsx":"14","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/App.tsx":"15","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Layout.tsx":"16","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/ColorPick.tsx":"17","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Checkbox.tsx":"18","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-adv/SliderAdv.tsx":"19","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/Slider.page.tsx":"20","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/store.ts":"21","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/MultiSelect.tsx":"22","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/main.request.ts":"23","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Navigation.tsx":"24","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-best/SliderBest.tsx":"25","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/Products.tsx":"26","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Modal.tsx":"27","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/theme.slice.ts":"28","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithToken.tsx":"29","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/config/routes.tsx":"30","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/PermissionDenied.page.tsx":"31","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/NotFound.page.tsx":"32","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/CreateUser.page.tsx":"33","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/Settings.page.tsx":"34","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/ThemeSelecting.tsx":"35","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Chart.tsx":"36","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Main.page.tsx":"37","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/user.request.ts":"38","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/Category.page.tsx":"39","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/CreateBrand.page.tsx":"40","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/Coupon.page.tsx":"41","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/SingleSelect.tsx":"42","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Login.tsx":"43","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/storage.utils.ts":"44","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/CreateCategory.page.tsx":"45","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/Product.page.tsx":"46","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/CreateCoupon.page.tsx":"47","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/BorderedBox.tsx":"48","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Input.tsx":"49","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brands.tsx":"50","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/cloudinary.utils.ts":"51","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/net-status.slice.ts":"52","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brand.page.tsx":"53","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/User.page.tsx":"54","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Divider.tsx":"55","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/coupon.request.ts":"56","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/SubCategories.tsx":"57","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/ModalBody.tsx":"58","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/functions.utils.ts":"59","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/auth-credentials.slice.ts":"60","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/category.request.ts":"61","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/datePicker/DateRangePick.tsx":"62","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/datePicker/DatePick.tsx":"63","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/user.slice.ts":"64","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/HeaderLine.tsx":"65","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/Table.tsx":"66","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/richTextEditor/TinyEditor.tsx":"67","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/styled-components.ts":"68","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useTheme.ts":"69","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useApollo.ts":"70","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useMedia.ts":"71","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/notificationBox/index.tsx":"72","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/notificationBox/ErrorBox.tsx":"73","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/SystemUsage.tsx":"74","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useSocket.ts":"75"},{"size":425,"mtime":1616437925159,"results":"76","hashOfConfig":"77"},{"size":231,"mtime":1616437925158,"results":"78","hashOfConfig":"77"},{"size":664,"mtime":1616846829191,"results":"79","hashOfConfig":"77"},{"size":741,"mtime":1619195926994,"results":"80","hashOfConfig":"77"},{"size":14169,"mtime":1619040388528,"results":"81","hashOfConfig":"77"},{"size":1893,"mtime":1616846829190,"results":"82","hashOfConfig":"77"},{"size":716,"mtime":1618426564960,"results":"83","hashOfConfig":"77"},{"size":2503,"mtime":1617733195224,"results":"84","hashOfConfig":"77"},{"size":8045,"mtime":1618824263855,"results":"85","hashOfConfig":"77"},{"size":2059,"mtime":1618585116159,"results":"86","hashOfConfig":"77"},{"size":1933,"mtime":1618672329478,"results":"87","hashOfConfig":"77"},{"size":734,"mtime":1618954549518,"results":"88","hashOfConfig":"77"},{"size":1330,"mtime":1618667427144,"results":"89","hashOfConfig":"77"},{"size":2517,"mtime":1618958423276,"results":"90","hashOfConfig":"77"},{"size":2493,"mtime":1619085474134,"results":"91","hashOfConfig":"77"},{"size":2850,"mtime":1619196220539,"results":"92","hashOfConfig":"77"},{"size":1092,"mtime":1618587717188,"results":"93","hashOfConfig":"77"},{"size":1101,"mtime":1618587801800,"results":"94","hashOfConfig":"77"},{"size":3280,"mtime":1618674432150,"results":"95","hashOfConfig":"77"},{"size":1234,"mtime":1618672067583,"results":"96","hashOfConfig":"77"},{"size":839,"mtime":1618418974238,"results":"97","hashOfConfig":"77"},{"size":1595,"mtime":1618244490143,"results":"98","hashOfConfig":"77"},{"size":261,"mtime":1618953069882,"results":"99","hashOfConfig":"77"},{"size":2790,"mtime":1618958366440,"results":"100","hashOfConfig":"77"},{"size":3293,"mtime":1618674242509,"results":"101","hashOfConfig":"77"},{"size":3392,"mtime":1616846829203,"results":"102","hashOfConfig":"77"},{"size":1202,"mtime":1618672938804,"results":"103","hashOfConfig":"77"},{"size":1843,"mtime":1618958050019,"results":"104","hashOfConfig":"77"},{"size":1194,"mtime":1619039105005,"results":"105","hashOfConfig":"77"},{"size":4525,"mtime":1618827145787,"results":"106","hashOfConfig":"77"},{"size":825,"mtime":1618823141068,"results":"107","hashOfConfig":"77"},{"size":798,"mtime":1618823151496,"results":"108","hashOfConfig":"77"},{"size":4307,"mtime":1619196280315,"results":"109","hashOfConfig":"77"},{"size":775,"mtime":1619082394575,"results":"110","hashOfConfig":"77"},{"size":3107,"mtime":1618830487285,"results":"111","hashOfConfig":"77"},{"size":5487,"mtime":1618958942808,"results":"112","hashOfConfig":"77"},{"size":2952,"mtime":1619196734547,"results":"113","hashOfConfig":"77"},{"size":1804,"mtime":1617731574624,"results":"114","hashOfConfig":"77"},{"size":4621,"mtime":1617127346338,"results":"115","hashOfConfig":"77"},{"size":6268,"mtime":1618824263853,"results":"116","hashOfConfig":"77"},{"size":5599,"mtime":1618944350182,"results":"117","hashOfConfig":"77"},{"size":1625,"mtime":1618244490143,"results":"118","hashOfConfig":"77"},{"size":2058,"mtime":1619082724783,"results":"119","hashOfConfig":"77"},{"size":1012,"mtime":1616846829206,"results":"120","hashOfConfig":"77"},{"size":5135,"mtime":1618824263860,"results":"121","hashOfConfig":"77"},{"size":5850,"mtime":1618944268068,"results":"122","hashOfConfig":"77"},{"size":9054,"mtime":1618958135858,"results":"123","hashOfConfig":"77"},{"size":605,"mtime":1616962860751,"results":"124","hashOfConfig":"77"},{"size":1421,"mtime":1618585116158,"results":"125","hashOfConfig":"77"},{"size":3640,"mtime":1616846829197,"results":"126","hashOfConfig":"77"},{"size":793,"mtime":1616437925159,"results":"127","hashOfConfig":"77"},{"size":521,"mtime":1617733665229,"results":"128","hashOfConfig":"77"},{"size":4410,"mtime":1619040388532,"results":"129","hashOfConfig":"77"},{"size":4394,"mtime":1619040388525,"results":"130","hashOfConfig":"77"},{"size":876,"mtime":1616846829187,"results":"131","hashOfConfig":"77"},{"size":1863,"mtime":1617736372028,"results":"132","hashOfConfig":"77"},{"size":3485,"mtime":1618824263857,"results":"133","hashOfConfig":"77"},{"size":883,"mtime":1618657241264,"results":"134","hashOfConfig":"77"},{"size":277,"mtime":1617466525467,"results":"135","hashOfConfig":"77"},{"size":946,"mtime":1616437925157,"results":"136","hashOfConfig":"77"},{"size":1878,"mtime":1618945477226,"results":"137","hashOfConfig":"77"},{"size":1301,"mtime":1618950622047,"results":"138","hashOfConfig":"77"},{"size":805,"mtime":1618957931373,"results":"139","hashOfConfig":"77"},{"size":823,"mtime":1616437925158,"results":"140","hashOfConfig":"77"},{"size":1044,"mtime":1617655875993,"results":"141","hashOfConfig":"77"},{"size":8252,"mtime":1619039957990,"results":"142","hashOfConfig":"77"},{"size":2795,"mtime":1619039967550,"results":"143","hashOfConfig":"77"},{"size":1177,"mtime":1619082000272,"results":"144","hashOfConfig":"77"},{"size":1260,"mtime":1619083971212,"results":"145","hashOfConfig":"77"},{"size":3221,"mtime":1619091585192,"results":"146","hashOfConfig":"77"},{"size":459,"mtime":1619091362249,"results":"147","hashOfConfig":"77"},{"size":942,"mtime":1619039962983,"results":"148","hashOfConfig":"77"},{"size":1813,"mtime":1619039962988,"results":"149","hashOfConfig":"77"},{"size":4197,"mtime":1619196220643,"results":"150","hashOfConfig":"77"},{"size":392,"mtime":1619196466105,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"y767x1",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"157"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"157"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"206"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"160"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"157"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"232"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"168"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/reportWebVitals.ts",[],["327","328"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/roles.slice.ts",[],["329","330"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithoutToken.tsx",[],["331","332"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Auth.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx",["333","334","335"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n//components\nimport Layout from '../../components/hoc/Layout';\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport UploadZone from '../../components/common/UploadZone';\nimport SingleSelect from '../../components/common/selectable/SingleSelect';\nimport MultiSelect from '../../components/common/selectable/MultiSelect';\nimport ColorPick from '../../components/common/ColorPick';\nimport Checkbox from '../../components/common/Checkbox';\nimport TinyEditor from '../../components/common/richTextEditor/TinyEditor';\nimport Flexbox from '../../components/hoc/Flexbox';\nimport HeaderLine from '../../components/common/HeaderLine';\nimport BorderedBox from '../../components/hoc/BorderedBox';\n//types\nimport { OptionType } from '../../redux/types/common.type';\nimport { CategoryType } from '../../redux/types/category.type';\n//request\nimport {\n  CREATE_PRODUCT,\n  UPDATE_PRODUCT,\n  GET_PRODUCT_BY_ID,\n} from '../../redux/requests/product.request';\nimport { GET_CATEGORIES_FOR_SELECT } from '../../redux/requests/category.request';\nimport { GET_BRANDS_FOR_SELECT } from '../../redux/requests/brand.request';\nimport { GET_COUPONS_FOR_SELECT } from '../../redux/requests/coupon.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n\nconst initialState: any = {\n  name: '',\n  code: '',\n  images: [],\n  cover: '',\n  description: '',\n  color: '',\n  price: 0,\n  saleCount: 0,\n  sale: false,\n  new: true,\n  freeDelivery: true,\n  guarantee: true,\n  hasCoupon: false,\n  used: false,\n  defective: false,\n  category: [],\n  brand: '',\n  coupon: '',\n};\n\ntype Props = {};\n\nconst CreateProduct: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  //state\n  const [CreateProduct, createResponse] = useMutation(CREATE_PRODUCT);\n  const [UpdateProduct, updateResponse] = useMutation(UPDATE_PRODUCT);\n  const [GetCategories, ctgResponse] = useLazyQuery(GET_CATEGORIES_FOR_SELECT);\n  const [GetProduct, productResponse] = useLazyQuery(GET_PRODUCT_BY_ID);\n  const [GetCoupons, couponsResponse] = useLazyQuery(GET_COUPONS_FOR_SELECT);\n  const [GetBrands, brandsResponse] = useLazyQuery(GET_BRANDS_FOR_SELECT);\n  const [state, setState] = useState<any>(initialState);\n  const [mode, setMode] = useState<string>('create');\n  const [categories, setCategories] = useState<OptionType[]>([]);\n  const [brands, setBrands] = useState<OptionType[]>([]);\n  const [coupons, setCoupons] = useState<OptionType[]>([]);\n\n  useEffect(() => {\n    (async function () {\n      const { mode, selected }: any = history.location.state;\n\n      await getCategories();\n      await getBrands();\n      await getCoupons();\n\n      if (mode === 'update') {\n        await getProductById(selected[0]);\n        setMode(mode);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (productResponse.data) {\n      const payload = productResponse.data.getProduct;\n      setState(payload);\n    }\n  }, [productResponse.data]);\n\n  useEffect(() => {\n    if (ctgResponse.data) {\n      const payload = ctgResponse.data.getCategories.payload;\n      let options = [];\n      for (let i = 0; i < payload.length; i++) {\n        options.push(payload[i]);\n        if (payload[i]?.subCategories) {\n          for (let j = 0; j < payload[i].subCategories.length; j++) {\n            options.push(payload[i].subCategories[j]);\n          }\n        }\n      }\n\n      setCategories(options);\n    }\n  }, [ctgResponse.data]);\n\n  useEffect(() => {\n    if (brandsResponse.data) {\n      const payload = brandsResponse.data.getBrands.payload;\n      let options = [];\n      for (let i = 0; i < payload.length; i++) {\n        options.push(payload[i]);\n      }\n\n      setBrands(options);\n    }\n  }, [brandsResponse.data]);\n\n  useEffect(() => {\n    if (couponsResponse.data) {\n      const payload = couponsResponse.data.getCoupons.payload;\n      let options = [];\n      for (let i = 0; i < payload.length; i++) {\n        if (payload[i].type.includes('product')) {\n          options.push(payload[i]);\n        }\n      }\n\n      setCoupons(options);\n    }\n  }, [couponsResponse.data]);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push('/products');\n    }\n  }, [createResponse.data]);\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push('/products');\n    }\n  }, [updateResponse.data]);\n\n  async function getProductById(id: string): Promise<void> {\n    try {\n      await GetProduct({\n        variables: { id },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getCategories(): Promise<void> {\n    try {\n      await GetCategories({\n        variables: {\n          controls: {\n            offset: 0,\n            limit: 1000,\n            keyword: '',\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getBrands(): Promise<void> {\n    try {\n      await GetBrands({\n        variables: {\n          controls: {\n            offset: 0,\n            limit: 1000,\n            keyword: '',\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getCoupons(): Promise<void> {\n    try {\n      await GetCoupons({\n        variables: {\n          controls: {\n            offset: 0,\n            limit: 1000,\n            keyword: '',\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function _onChange(val: any, name: string): void {\n    if (name === 'new' && val) {\n      setState((prevState: any) => ({ ...prevState, new: true, used: false }));\n    } else if (name === 'used' && val) {\n      setState((prevState: any) => ({ ...prevState, new: false, used: true }));\n    } else {\n      setState((prevState: any) => ({ ...prevState, [name]: val }));\n    }\n  }\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateProduct({\n        variables: {\n          newProduct: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateProduct({\n        variables: {\n          updatedProduct: handleState(state),\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function _onComboSelect(key: string, val: string | string[]): void {\n    setState((prevState: any) => ({ ...prevState, [key]: val }));\n  }\n\n  function getCoverImage(val: string[]): void {\n    const cover = val[0] ? val[0] : '';\n    setState((prevState: any) => ({ ...prevState, cover }));\n  }\n\n  function getImages(images: string[]): void {\n    setState((prevState: any) => ({ ...prevState, images }));\n  }\n\n  function getDescriptionHtml(val: string): void {\n    setState((prevState: any) => ({ ...prevState, description: val }));\n  }\n\n  function handleState(st: any): any {\n    const category = st.category.map((cat: CategoryType) => cat?.id || cat);\n    const coupon = st.coupon?.id || st.coupon;\n    const brand = st.brand?.id || st.brand;\n    return {\n      ...st,\n      category,\n      coupon,\n      brand,\n    };\n  }\n\n  return (\n    <Layout>\n      <Container>\n        <HeaderLine label=\"Create Product\" goBack={true} />\n        <BorderedBox>\n          <Flexbox cls=\"gap np\">\n            <Input\n              type=\"text\"\n              label=\"Product name\"\n              name=\"productName\"\n              value={state.name}\n              getValue={(val: string) => _onChange(val, 'name')}\n            />\n            <Input\n              type=\"text\"\n              label=\"Code\"\n              name=\"code\"\n              value={state.code}\n              getValue={(val: string) => _onChange(val, 'code')}\n            />\n            <Input\n              type=\"number\"\n              label=\"Price\"\n              name=\"price\"\n              value={state.price}\n              getValue={(val: string) => _onChange(+val, 'price')}\n            />\n            <Input\n              type=\"number\"\n              label=\"Sale percent\"\n              name=\"salePercent\"\n              value={state.saleCount}\n              getValue={(val: string) => _onChange(+val, 'saleCount')}\n            />\n            <MultiSelect\n              label=\"Category\"\n              value={state.category}\n              options={categories}\n              getValue={(val: string[]) => _onComboSelect('category', val)}\n            />\n            <SingleSelect\n              label=\"Brand\"\n              value={state.brand}\n              options={brands}\n              getValue={(val: string) => _onComboSelect('brand', val)}\n            />\n            <ColorPick\n              value={state.color}\n              getValue={(val: string) => _onChange(val, 'color')}\n            />\n            <SingleSelect\n              label=\"Coupon\"\n              value={state.coupon}\n              options={coupons}\n              getValue={(val: string) => _onComboSelect('coupon', val)}\n              disabled={!state.hasCoupon}\n            />\n          </Flexbox>\n          <Flexbox cls=\"mt gap np\" align=\"start\">\n            <UploadZone\n              multiple={false}\n              value={state.cover}\n              label=\"Maximum 1 image and Size less than 500KB\"\n              getValue={getCoverImage}\n              folderInCloud=\"product_images\"\n            />\n            <UploadZone\n              multiple={true}\n              value={state.images}\n              label=\"Maximum 5 images and Each size less than 500KB\"\n              getValue={getImages}\n              folderInCloud=\"product_images\"\n            />\n          </Flexbox>\n          <Flexbox cls=\"sides-wrap mt gap np\" justify=\"start\" align=\"start\">\n            <Flexbox cls=\"right-side gap np\" flex=\"column\" align=\"start\">\n              <Flexbox\n                cls=\"checkbox-wrap gap np\"\n                flex=\"column\"\n                justify=\"start\"\n                align=\"start\"\n              >\n                <Flexbox\n                  cls=\"checkbox-child-wrap gap np\"\n                  flex=\"column\"\n                  justify=\"start\"\n                  align=\"start\"\n                >\n                  <Checkbox\n                    label=\"Sale\"\n                    name=\"sale\"\n                    value={state.sale}\n                    getValue={(val: boolean) => _onChange(val, 'sale')}\n                  />\n                  <Checkbox\n                    label=\"New\"\n                    name=\"new\"\n                    value={state.new}\n                    getValue={(val: boolean) => _onChange(val, 'new')}\n                  />\n                  <Checkbox\n                    label=\"Free Delivery\"\n                    name=\"freeDelivery\"\n                    value={state.freeDelivery}\n                    getValue={(val: boolean) => _onChange(val, 'freeDelivery')}\n                  />\n                  <Checkbox\n                    label=\"Guarantee\"\n                    name=\"guarantee\"\n                    value={state.guarantee}\n                    getValue={(val: boolean) => _onChange(val, 'guarantee')}\n                  />\n                  <Checkbox\n                    label=\"Coupon\"\n                    name=\"hasCoupon\"\n                    value={state.hasCoupon}\n                    getValue={(val: boolean) => _onChange(val, 'hasCoupon')}\n                  />\n                  <Checkbox\n                    label=\"Used\"\n                    name=\"used\"\n                    value={state.used}\n                    getValue={(val: boolean) => _onChange(val, 'used')}\n                  />\n                  <Checkbox\n                    label=\"Defective\"\n                    name=\"defective\"\n                    value={state.defective}\n                    getValue={(val: boolean) => _onChange(val, 'defective')}\n                  />\n                </Flexbox>\n              </Flexbox>\n              <Flexbox cls=\"np\" flex=\"column\" align=\"start\">\n                <TinyEditor\n                  label=\"Description\"\n                  value={state.description}\n                  getValue={getDescriptionHtml}\n                  cls=\"md:flex-2\"\n                />\n              </Flexbox>\n              <Flexbox cls=\"gap np\">\n                {mode === 'create' ? (\n                  <Button\n                    appearance=\"primary\"\n                    label=\"Create\"\n                    onAction={_onSave}\n                    cls=\"m-0 mr-3\"\n                  />\n                ) : (\n                  <Button\n                    appearance=\"primary\"\n                    label=\"Update\"\n                    onAction={_onUpdate}\n                    cls=\"m-0 mr-3\"\n                  />\n                )}\n                <Button\n                  appearance=\"primary\"\n                  label=\"Reset fields\"\n                  onAction={() => setState(initialState)}\n                  cls=\"m-0 mr-3\"\n                />\n              </Flexbox>\n            </Flexbox>\n          </Flexbox>\n        </BorderedBox>\n      </Container>\n    </Layout>\n  );\n};\n\nCreateProduct.defaultProps = {};\n\nexport default CreateProduct;\n\nconst Container = styled.div`\n  .heading {\n    font-size: ${({ theme }) => theme.fontSize.sm + 'px'};\n    font-weight: bold;\n    margin-bottom: 5px;\n    color: ${({ theme }) => theme.colors.color};\n  }\n\n  .checkbox-wrap {\n    .checkbox-child-wrap {\n      overflow: hidden;\n      max-height: 70px;\n    }\n  }\n\n  @media screen and (max-width: 1700px) {\n    .sides-wrap {\n      flex-direction: column;\n    }\n  }\n\n  @media screen and (max-width: 1000px) {\n    .color-and-checkbox-wrap {\n      flex-direction: row;\n    }\n    .sides-wrap {\n      flex-direction: column;\n    }\n  }\n\n  @media screen and (max-width: 700px) {\n    .color-and-checkbox-wrap {\n      flex-direction: column;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    .color-and-checkbox-wrap {\n      flex-direction: column;\n    }\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Flexbox.tsx",[],["336","337"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Button.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/product.request.ts",[],["338","339"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/UploadZone.tsx",["340"],"import React, { useEffect, useState, memo } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport styled from 'styled-components';\nimport { Input } from 'rsuite';\n//components\nimport Flexbox from '../hoc/Flexbox';\n//utils\nimport { imageUploadAndGetUrl } from '../../utils/cloudinary.utils';\n\ntype Props = {\n  label?: string;\n  value: string[] | string;\n  multiple: boolean;\n  cls?: string;\n  getValue: (val: string[]) => void;\n  folderInCloud: string;\n  [key: string]: any;\n};\n\nconst UploadZone: React.FC<Props> = memo(\n  ({ label, value, multiple, cls, getValue, folderInCloud, ...props }) => {\n    const [preview, setPreview] = useState<string[]>([]);\n    const [upLoading, setUpLoading] = useState<boolean>(false);\n    const [warning, setWarning] = useState<string>('');\n    const [uploadPercent, setUploadPercent] = useState<number>(0);\n    const [photoIndex, setPhotoIndex] = useState<number>(0);\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n\n    useEffect(() => {\n      if (multiple && typeof value === 'object') {\n        setPreview(value);\n      }\n\n      if (!multiple && typeof value === 'string' && value !== '') {\n        setPreview([value]);\n      }\n    }, [value]);\n\n    async function handleImage(value: any, e: any) {\n      const files = e.currentTarget.files!;\n      const newPreviewList: string[] = [];\n\n      if (files.length >= 5 || preview.length >= 5) {\n        setWarning('Please follow the above instruction');\n        return;\n      }\n\n      setUpLoading(true);\n\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n\n        if (file.size > 524000) {\n          if (multiple) {\n            setWarning('Some of the images size greater than 500KB');\n          } else {\n            setWarning('Image size greater than 500KB');\n          }\n          setUpLoading(false);\n          continue;\n        }\n\n        await imageUploadAndGetUrl(\n          file,\n          folderInCloud,\n          (percent, error, file) => {\n            if (percent) {\n              setUploadPercent(percent);\n            }\n            if (error) {\n              setWarning(error);\n            }\n            if (file) {\n              setUploadPercent(0);\n              setWarning('');\n              if (multiple) {\n                setPreview((prevState) => [file.data.secure_url, ...prevState]);\n                newPreviewList.push(file.data.secure_url);\n              } else {\n                setPreview([file.data.secure_url]);\n                newPreviewList.push(file.data.secure_url);\n              }\n            }\n          },\n        );\n      }\n\n      getValue([...newPreviewList, ...preview]);\n      setUpLoading(false);\n    }\n\n    function _onDeletePreviewImage(e: any, url: string): void {\n      e.stopPropagation();\n      const newPreviewState: string[] = preview.filter((pre) => pre !== url);\n      setPreview(newPreviewState);\n      getValue(newPreviewState);\n    }\n\n    const placeholder = multiple\n      ? 'Click to select an images'\n      : 'Click to select an image';\n\n    return (\n      <Container cls={cls} flex=\"column\" justify=\"start\" align=\"start\">\n        <Flexbox cls=\"np\" flex=\"column\" align=\"start\">\n          {/*<Flexbox cls=\"np\" justify=\"between\">*/}\n          {/*  <span className={warning ? 'text-red' : 'text-black'}>{label}</span>*/}\n          {/*  {uploadPercent ? <span>{uploadPercent}%</span> : null}*/}\n          {/*</Flexbox>*/}\n          <label htmlFor={'file-upload' + placeholder}>\n            <Flexbox cls=\"input-wrap gap np\">\n              <Input\n                type=\"file\"\n                id={'file-upload' + placeholder}\n                name=\"file-upload\"\n                autoComplete=\"off\"\n                onChange={handleImage}\n                multiple={multiple}\n                accept=\"image/*\"\n                disabled={upLoading}\n              />\n              <Input\n                type=\"text\"\n                value=\"\"\n                readOnly={true}\n                placeholder={warning ? warning : placeholder}\n                {...props}\n              />\n              {uploadPercent ? <span>{uploadPercent}%</span> : null}\n            </Flexbox>\n          </label>\n        </Flexbox>\n\n        {preview.length ? (\n          <Flexbox cls=\"preview-wrap\" wrap=\"no-wrap\">\n            {preview.map((pre, i) => (\n              <Flexbox key={i} flex=\"column\">\n                <div\n                  style={{ backgroundImage: `url(${pre})` }}\n                  onClick={() => {\n                    setPhotoIndex(i);\n                    setIsOpen(true);\n                  }}\n                />\n                <div\n                  className=\"hoverable\"\n                  onClick={(e) => _onDeletePreviewImage(e, pre)}\n                >\n                  Remove\n                </div>\n              </Flexbox>\n            ))}\n          </Flexbox>\n        ) : null}\n\n        {isOpen && (\n          <Lightbox\n            mainSrc={preview[photoIndex]}\n            nextSrc={preview[(photoIndex + 1) % preview.length]}\n            prevSrc={\n              preview[(photoIndex + preview.length - 1) % preview.length]\n            }\n            onCloseRequest={() => setIsOpen(false)}\n            onMovePrevRequest={() =>\n              setPhotoIndex((photoIndex + preview.length - 1) % preview.length)\n            }\n            onMoveNextRequest={() =>\n              setPhotoIndex((photoIndex + 1) % preview.length)\n            }\n          />\n        )}\n      </Container>\n    );\n  },\n  (prevState, nextState) => {\n    if (typeof prevState.value === 'string') {\n      return prevState.value === nextState.value;\n    }\n    return compareDeeper(prevState.value, nextState.value as string[]);\n  },\n);\n\nUploadZone.defaultProps = {\n  label: 'Upload an image',\n  cls: '',\n  value: [],\n  multiple: false,\n};\n\nexport default UploadZone;\n\nfunction compareDeeper(prev: string[], next: string[]): boolean {\n  if (prev.length !== next.length) {\n    return next.every((n, i) => n === prev[i]);\n  }\n  return true;\n}\n\nconst Container = styled(Flexbox)`\n  position: relative;\n  padding: 0;\n  min-width: 340px;\n\n  & > div {\n    .text-black {\n      color: ${({ theme }) => theme.colors.color};\n    }\n    .text-red {\n      color: ${({ theme }) => theme.colors.error};\n    }\n\n    span {\n      font-size: ${({ theme }) => theme.fontSize.sm + 'px'};\n      font-weight: bold;\n      margin-bottom: 5px;\n      color: ${({ theme }) => theme.colors.color};\n    }\n  }\n\n  label {\n    width: 100%;\n  }\n\n  .input-wrap {\n    position: relative;\n\n    input {\n      cursor: pointer;\n    }\n\n    input:first-child {\n      flex: 1;\n      position: absolute;\n      width: 100%;\n      padding: 5px;\n      opacity: 0;\n    }\n\n    input[type='file']:hover + input[type='text'] {\n      border-color: #169de0;\n    }\n\n    span {\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      color: ${({ theme }) => theme.colors.color};\n    }\n  }\n\n  .preview-wrap {\n    gap: 10px;\n    padding: 10px;\n    margin-top: 10px;\n    border-radius: 5px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: #e5e5ea;\n    color: ${({ theme }) => theme.colors.color};\n    background-color: ${({ theme }) => theme.colors.background};\n    overflow: auto;\n\n    & > div {\n      padding: 10px 0;\n      min-width: 80px;\n      min-height: 80px;\n      background-color: ${({ theme }) => theme.colors.background};\n      border-radius: 5px;\n\n      & > div:first-child {\n        width: 75px;\n        height: 75px;\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: contain;\n      }\n\n      & > div:last-child {\n        cursor: pointer;\n        color: ${({ theme }) => theme.colors.color};\n        font-size: ${({ theme }) => theme.fontSize.xs + 'px'};\n        text-align: center;\n      }\n    }\n  }\n\n  @media screen and (max-width: 1100px) {\n    min-width: 300px !important;\n  }\n\n  @media screen and (max-width: 620px) {\n    .preview-wrap {\n      flex-wrap: wrap !important;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    min-width: 200px !important;\n  }\n`;\n",["341","342"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Register.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Carousel.tsx",["343"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Slider from 'react-slick';\n\nconst settings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  arrows: false,\n};\n\ntype Props = {\n  bgColor?: string;\n  vertical: boolean;\n  fade: boolean;\n  cls?: string;\n  images: string[];\n};\n\n// const prc = [\n//   'https://res.cloudinary.com/electroshop-cmrs-project/image/upload/v1618667801/sliders/landscape-1499968892-back-to-school-tech_c8fjvu.jpg',\n//   'https://res.cloudinary.com/electroshop-cmrs-project/image/upload/v1618667804/sliders/photo-1515940175183-6798529cb860_lqws53.jpg',\n// ];\n\nconst Carousel: React.FC<Props> = ({ vertical, fade, bgColor, images }) => {\n  if (!images.length) {\n    return null;\n  }\n  return (\n    <Container>\n      <Slider {...settings} fade={fade} vertical={vertical}>\n        {images.map((url: string, i: number) => (\n          <Image key={i} url={url} bgColor={bgColor} />\n        ))}\n      </Slider>\n    </Container>\n  );\n};\n\nexport default Carousel;\n\nCarousel.defaultProps = {\n  bgColor: 'transparent',\n  vertical: false,\n  fade: false,\n  cls: 'custom-slider',\n  images: [],\n};\n\nconst Container = styled.div`\n  max-width: 100%;\n  margin: 10px 0;\n\n  .slick-dots {\n    background-color: ${({ theme }) => theme.colors.thirdBackground};\n    li {\n      button {\n        border-radius: 50%;\n        width: 10px;\n        height: 10px;\n        background-color: grey;\n        &::before {\n          content: '';\n        }\n      }\n    }\n    .slick-active {\n      button {\n        background-color: ${({ theme }) => theme.colors.main};\n      }\n    }\n  }\n`;\n\nconst Image = styled.div<any>`\n  width: 100%;\n  height: 250px;\n  background-color: ${({ theme }) => theme.colors.thirdBackground};\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-image: ${(props) => `url(${props.url})`};\n`;\n",["344","345"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/LoadingCard.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/index.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Header.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/App.tsx",["346","347","348","349","350","351","352","353","354","355","356","357","358"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/Layout.tsx",["359"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/ColorPick.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Checkbox.tsx",[],["360","361"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-adv/SliderAdv.tsx",[],["362","363"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/Slider.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/store.ts",[],["364","365"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/MultiSelect.tsx",["366"],"import React, { memo, useEffect, useState } from 'react';\nimport { CheckPicker, SelectPicker } from 'rsuite';\nimport styled from 'styled-components';\n//types\nimport { OptionType } from '../../../redux/types/common.type';\n\ntype Props = {\n  label?: string;\n  value: any;\n  cls?: string;\n  options: OptionType[];\n  getValue: (val: string[]) => void;\n  [key: string]: any;\n};\n\nconst MultiSelect: React.FC<Props> = memo(\n  ({ label, value, cls, options, getValue, ...props }) => {\n    const [innerState, setInnerState] = useState<string[]>([]);\n\n    useEffect(() => {\n      if (typeof value[0] === 'object') {\n        setInnerState(value.map((v: any) => v.id));\n      } else {\n        setInnerState(value);\n      }\n    }, [value]);\n\n    function _onChange(selectedOption: string[]): void {\n      setInnerState(selectedOption);\n      getValue(selectedOption);\n    }\n\n    return (\n      <Label className={cls}>\n        <CheckPicker\n          value={innerState}\n          data={options}\n          onChange={_onChange}\n          labelKey=\"name\"\n          valueKey=\"id\"\n          block\n          placeholder={label}\n          disabled={props.isDisabled}\n        />\n      </Label>\n    );\n  },\n  (prevProps, nextProps) => {\n    return (\n      prevProps.value === nextProps.value &&\n      prevProps.options.length === nextProps.options.length\n    );\n  },\n);\n\nMultiSelect.defaultProps = {\n  label: 'Label',\n  cls: '',\n  options: [],\n  value: '',\n  getValue: () => false,\n};\n\nexport default MultiSelect;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  min-width: 220px;\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/main.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Navigation.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/slider-best/SliderBest.tsx",[],["367","368"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/Products.tsx",["369"],"import React, { memo, useEffect, useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport styled from 'styled-components';\n//components\nimport Flexbox from '../../components/hoc/Flexbox';\n//request\nimport { GET_PRODUCTS_BY_CATEGORY_ID } from '../../redux/requests/product.request';\n//types\nimport { ProductType } from '../../redux/types/product.type';\n\ntype Props = {\n  id: string;\n};\n\nconst Products: React.FC<Props> = memo(({ id }) => {\n  //requests\n  const [GetProductsByCategoryId, productsResponse] = useLazyQuery(\n    GET_PRODUCTS_BY_CATEGORY_ID,\n  );\n  //state\n  const [products, setProducts] = useState<ProductType[]>([]);\n\n  useEffect(() => {\n    (async function () {\n      await getProductsByCategoryId();\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (productsResponse.data) {\n      const payload = productsResponse.data.getProductsByCategoryId;\n      setProducts(payload);\n    }\n  }, [productsResponse]);\n\n  async function getProductsByCategoryId(): Promise<void> {\n    try {\n      await GetProductsByCategoryId({\n        variables: {\n          id,\n        },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Container flex=\"column\" align=\"start\">\n      <Flexbox cls=\"header np\" justify=\"between\">\n        <h3>Products</h3>\n        <Flexbox cls=\"np count-wrap\" justify=\"end\">\n          <small>{products.length}</small>\n        </Flexbox>\n      </Flexbox>\n      {products.length ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Product name</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product, i) => (\n              <tr key={i}>\n                <td>{product.name}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <span className=\"no-data\">No products</span>\n      )}\n    </Container>\n  );\n});\n\nProducts.defaultProps = {\n  id: '',\n};\n\nexport default Products;\n\nconst Container = styled(Flexbox)`\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 4px;\n  border-width: 2px 4px 2px 2px;\n  border-style: solid;\n  border-color: ${({ theme }) => theme.colors.border};\n  padding: 10px;\n  min-width: 300px;\n  max-width: 500px;\n\n  .header {\n    min-height: 40px !important;\n    border-width: 0 0 2px 0;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.colors.border};\n\n    h3 {\n      font-weight: bold;\n      margin: 0;\n    }\n\n    .count-wrap {\n      small {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: ${({ theme }) => theme.colors.errorLight};\n        border-right: ${({ theme }) => `4px solid ${theme.colors.error}`};\n        color: ${({ theme }) => theme.colors.white};\n        border-radius: 5px;\n        width: 40px;\n        height: 20px;\n        text-align: center;\n        font-weight: bold;\n        font-size: ${({ theme }) => theme.fontSize.xs + 'px'};\n      }\n    }\n  }\n\n  table {\n    width: 100%;\n    border-collapse: separate;\n    overflow: auto;\n    white-space: nowrap;\n    border-radius: 3px;\n\n    th,\n    td {\n      text-align: left;\n      border-width: 1px;\n      border-style: solid;\n      border-color: ${({ theme }) => theme.colors.border};\n      padding: 3px;\n    }\n  }\n\n  .no-data {\n    display: block;\n    margin-top: 10px;\n  }\n\n  @media (max-width: 789px) {\n    max-width: 100%;\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Modal.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/theme.slice.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/WithToken.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/config/routes.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/PermissionDenied.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Rest/NotFound.page.tsx",[],["370","371"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/CreateUser.page.tsx",["372","373"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/Settings.page.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Settings/ThemeSelecting.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Chart.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/Main.page.tsx",["374","375"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/user.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/Category.page.tsx",["376"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\n//components\nimport Layout from '../../components/hoc/Layout';\nimport Table from '../../components/table/Table';\nimport HeaderLine from '../../components/common/HeaderLine';\n//types\nimport { CategoryType } from '../../redux/types/category.type';\n//request\nimport {\n  GET_CATEGORIES,\n  DISABLE_CATEGORIES,\n  ACTIVATE_CATEGORIES,\n  DELETE_CATEGORIES,\n} from '../../redux/requests/category.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n\ntype Props = {};\n\nconst CategoryPage: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  //graphql\n  const [GetCategories, getResponse] = useLazyQuery(GET_CATEGORIES);\n  const [DisableCategories] = useMutation(DISABLE_CATEGORIES);\n  const [ActivateCategories] = useMutation(ACTIVATE_CATEGORIES);\n  const [DeleteCategories] = useMutation(DELETE_CATEGORIES);\n  //state\n  const [categories, setCategories] = useState<CategoryType[]>([]);\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [deepSearch, setDeepSearch] = useState<string>('');\n  const [unSelect, setUnSelect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getCategories;\n      setCategories(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data]);\n\n  useEffect(() => {\n    (async function () {\n      await getCategories(currentPage, rowCount, deepSearch);\n    })();\n  }, []);\n\n  async function getCategories(\n    pg: number,\n    rc: number,\n    kw: string,\n  ): Promise<void> {\n    try {\n      await GetCategories({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw,\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber);\n    await getCategories(pageNumber, rowCount, deepSearch);\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getCategories(currentPage, rc, deepSearch);\n  }\n\n  async function getDeepSearchFromTable(kw: string): Promise<void> {\n    setDeepSearch(kw);\n    await getCategories(currentPage, rowCount, kw);\n  }\n\n  async function getIdsAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableCategories({\n        variables: {\n          disabledCategories: { ids },\n        },\n      });\n      handleCategoriesState(ids, true);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getIdsAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateCategories({\n        variables: {\n          activateCategories: { ids },\n        },\n      });\n      handleCategoriesState(ids, false);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getIdsAndDelete(ids: string[]): Promise<void> {\n    try {\n      await DeleteCategories({\n        variables: {\n          deleteCategories: { ids },\n        },\n      });\n      handleCategoriesList(ids);\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function handleCategoriesState(ids: string[], isDisabled: boolean) {\n    const updatedCategories = categories.map((cat) => {\n      if (ids.includes(cat.id!)) {\n        return {\n          ...cat,\n          isDisabled,\n        };\n      }\n      return cat;\n    });\n    setCategories(updatedCategories);\n  }\n\n  function handleCategoriesList(ids: string[]) {\n    const deletedCategories = categories.filter(\n      (category) => !ids.includes(category.id!),\n    );\n    setCategories(deletedCategories);\n    setUnSelect(true);\n  }\n\n  return (\n    <Layout>\n      <HeaderLine label=\"categories\" />\n      {/*  table */}\n      <Table\n        data={categories}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdsAndDisable={getIdsAndDisable}\n        getIdsAndActivate={getIdsAndActivate}\n        getIdsAndDelete={getIdsAndDelete}\n        getDateRange={(val) => false}\n        path=\"categories\"\n        error={!!getResponse.error}\n        exclude={['id']}\n        unSelect={unSelect}\n      />\n    </Layout>\n  );\n};\n\nexport default CategoryPage;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/CreateBrand.page.tsx",["377","378","379","380"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\n//components\nimport Layout from '../../components/hoc/Layout';\nimport Input from '../../components/common/Input';\nimport Flexbox from '../../components/hoc/Flexbox';\nimport Button from '../../components/common/Button';\nimport HeaderLine from '../../components/common/HeaderLine';\nimport UploadZone from '../../components/common/UploadZone';\nimport BorderedBox from '../../components/hoc/BorderedBox';\nimport MultiSelect from '../../components/common/selectable/MultiSelect';\n//types\nimport { BrandType } from '../../redux/types/brand.type';\nimport { OptionType } from '../../redux/types/common.type';\n//request\nimport {\n  CREATE_BRAND,\n  UPDATE_BRAND,\n  GET_BRAND_BY_ID,\n} from '../../redux/requests/brand.request';\nimport { GET_CATEGORIES_FOR_SELECT } from '../../redux/requests/category.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n\nconst initialState = {\n  name: '',\n  imageUrl: '',\n  category: [],\n};\n\ntype Props = {};\n\nconst CreateBrand: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  //graphql\n  const [CreateBrand, createResponse] = useMutation(CREATE_BRAND);\n  const [UpdateBrand, updateResponse] = useMutation(UPDATE_BRAND);\n  const [GetCategories, ctgResponse] = useLazyQuery(GET_CATEGORIES_FOR_SELECT);\n  const [GetBrandById, getResponse] = useLazyQuery(GET_BRAND_BY_ID);\n  //state\n  const [categories, setCategories] = useState<OptionType[]>([]);\n  const [mode, setMode] = useState<string>('create');\n  const [state, setState] = useState<BrandType>({\n    id: uuid(),\n    ...initialState,\n  });\n\n  useEffect(() => {\n    (async function () {\n      await getCategories();\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (ctgResponse.data) {\n      const payload = ctgResponse.data.getCategories.payload;\n      let options = [];\n      for (let i = 0; i < payload.length; i++) {\n        options.push(payload[i]);\n        if (payload[i]?.subCategories) {\n          for (let j = 0; j < payload[i].subCategories.length; j++) {\n            options.push(payload[i].subCategories[j]);\n          }\n        }\n      }\n      setCategories(options);\n    }\n  }, [ctgResponse.data]);\n\n  useEffect(() => {\n    (async function () {\n      const { mode, selected }: any = history.location.state;\n      if (mode === 'update') {\n        await getBrandById(selected[0]);\n        setMode(mode);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const payload = getResponse.data.getBrandById;\n      let categoryIds = [];\n      for (let i = 0; i < payload.category.length; i++) {\n        categoryIds.push(payload.category[i].id);\n        if (payload.category[i].subCategories) {\n          for (let j = 0; j < payload.category[i].subCategories.length; j++) {\n            categoryIds.push(payload.category[i].subCategories[j].id);\n          }\n        }\n      }\n      setState({\n        ...payload,\n        category: categoryIds,\n      });\n    }\n  }, [getResponse.data]);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push('/brands');\n    }\n  }, [createResponse.data]);\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push('/brands');\n    }\n  }, [updateResponse.data]);\n\n  async function getBrandById(id: string): Promise<void> {\n    try {\n      await GetBrandById({\n        variables: { id },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function getCategories(): Promise<void> {\n    try {\n      await GetCategories({\n        variables: {\n          controls: {\n            offset: 0,\n            limit: 1000,\n            keyword: '',\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateBrand({\n        variables: {\n          newBrand: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateBrand({\n        variables: {\n          updatedBrand: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function _onCategorySelect(key: string, val: string | string[]): void {\n    setState((prevState: any) => ({ ...prevState, [key]: val }));\n  }\n\n  function getBrandsImage(val: string[]): void {\n    const imageUrl = val[0] ? val[0] : '';\n    setState((prevState: any) => ({ ...prevState, imageUrl }));\n  }\n\n  return (\n    <Layout>\n      <HeaderLine label=\"Create brand\" goBack={true} />\n      <BorderedBox>\n        <Body align=\"start\">\n          <Input\n            type=\"text\"\n            label=\"Name\"\n            name=\"name\"\n            value={state.name}\n            getValue={(val: string) => setState({ ...state, name: val })}\n          />\n          <MultiSelect\n            label=\"Category\"\n            value={state.category}\n            options={categories}\n            getValue={(val: string[]) => _onCategorySelect('category', val)}\n          />\n          <UploadZone\n            multiple={false}\n            value={state.imageUrl}\n            label=\"Maximum 1 image and Size less than 500KB\"\n            getValue={getBrandsImage}\n            folderInCloud=\"brands_images\"\n          />\n        </Body>\n        <FooterPanel>\n          {mode === 'create' ? (\n            <Button appearance=\"primary\" label=\"Create\" onAction={_onSave} />\n          ) : (\n            <Button appearance=\"primary\" label=\"Update\" onAction={_onUpdate} />\n          )}\n          <Button\n            appearance=\"primary\"\n            label=\"Reset fields\"\n            onAction={() => setState(initialState)}\n          />\n        </FooterPanel>\n      </BorderedBox>\n    </Layout>\n  );\n};\n\nCreateBrand.defaultProps = {};\n\nexport default CreateBrand;\n\nconst Body = styled(Flexbox)`\n  padding: 0;\n  margin: 10px 0;\n  gap: 10px;\n`;\n\nconst FooterPanel = styled(Flexbox)`\n  padding: 0;\n  gap: 10px;\n`;\n",["381","382"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/Coupon.page.tsx",["383"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/selectable/SingleSelect.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/Login.tsx",["384"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/storage.utils.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/CreateCategory.page.tsx",["385","386","387"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { v4 as uuid } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n//components\nimport Layout from '../../components/hoc/Layout';\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport Divider from '../../components/common/Divider';\nimport SubCategories from './SubCategories';\nimport Brands from '../Brand/Brands';\nimport Products from '../Product/Products';\nimport Flexbox from '../../components/hoc/Flexbox';\nimport HeaderLine from '../../components/common/HeaderLine';\nimport BorderedBox from '../../components/hoc/BorderedBox';\n//types\nimport { CategoryType, SubCategoryType } from '../../redux/types/category.type';\n//request\nimport {\n  CREATE_CATEGORY,\n  UPDATE_CATEGORY,\n  GET_CATEGORY_BY_ID,\n} from '../../redux/requests/category.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n\nconst initialState = {\n  name: '',\n  tabName: '',\n  subCategories: [],\n};\n\ntype Props = {};\n\nconst CreateCategory: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  //requests\n  const [CreateCategory, createResponse] = useMutation(CREATE_CATEGORY);\n  const [UpdateCategory, updateResponse] = useMutation(UPDATE_CATEGORY);\n  const [GetCategoryById, getResponse] = useLazyQuery(GET_CATEGORY_BY_ID);\n  //state\n  const [state, setState] = useState<Partial<CategoryType>>({\n    id: uuid(),\n    ...initialState,\n  });\n  const [mode, setMode] = useState<string>('create');\n\n  useEffect(() => {\n    (async function () {\n      const { mode, selected }: any = history.location.state;\n      if (mode === 'update') {\n        await getCategoryById(selected[0]);\n        setMode(mode);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const payload = getResponse.data.getCategoryById;\n      setState(payload);\n    }\n  }, [getResponse.data]);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push('/categories');\n    }\n  }, [createResponse.data]);\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push('/categories');\n    }\n  }, [updateResponse.data]);\n\n  function _onSubCategoryChange(val: SubCategoryType[]): void {\n    setState({ ...state, subCategories: val });\n  }\n\n  async function getCategoryById(id: string): Promise<void> {\n    try {\n      await GetCategoryById({\n        variables: { id },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateCategory({\n        variables: {\n          newCategory: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateCategory({\n        variables: {\n          updatedCategory: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  return (\n    <Layout>\n      <HeaderLine label=\"Create category\" goBack={true} />\n      <BorderedBox>\n        <Body>\n          <Input\n            type=\"text\"\n            label=\"Name\"\n            name=\"name\"\n            value={state.name}\n            getValue={(val: string) => setState({ ...state, name: val })}\n          />\n          <Input\n            type=\"text\"\n            label=\"Tab Name\"\n            name=\"tabName\"\n            value={state.tabName}\n            getValue={(val: string) => setState({ ...state, tabName: val })}\n          />\n        </Body>\n        <SubCategories\n          parentId={state.id!}\n          subCategories={state.subCategories!}\n          getValue={_onSubCategoryChange}\n        />\n        <FooterPanel>\n          {mode === 'create' ? (\n            <Button\n              appearance=\"primary\"\n              label=\"Create\"\n              onAction={_onSave}\n              cls=\"m-0 mr-3\"\n            />\n          ) : (\n            <Button\n              appearance=\"primary\"\n              label=\"Update\"\n              onAction={_onUpdate}\n              cls=\"m-0 mr-3\"\n            />\n          )}\n          <Button\n            appearance=\"primary\"\n            label=\"Reset fields\"\n            onAction={() => setState(initialState)}\n            cls=\"m-0 mr-3\"\n          />\n        </FooterPanel>\n        {mode === 'update' ? (\n          <InfoCardsWrap>\n            <Divider label=\"Connections\" />\n            <Flexbox cls=\"np\" align=\"start\">\n              <Brands id={state.id!} />\n              <Products id={state.id!} />\n            </Flexbox>\n          </InfoCardsWrap>\n        ) : null}\n      </BorderedBox>\n    </Layout>\n  );\n};\n\nCreateCategory.defaultProps = {};\n\nexport default CreateCategory;\n\nconst Body = styled(Flexbox)`\n  padding: 0;\n  margin: 10px 0 20px 0;\n  gap: 10px;\n`;\n\nconst FooterPanel = styled(Flexbox)`\n  margin-top: 10px;\n  padding: 0;\n  gap: 10px;\n`;\n\nconst InfoCardsWrap = styled.div`\n  div {\n    gap: 10px;\n  }\n`;\n",["388","389"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Product/Product.page.tsx",["390"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Coupon/CreateCoupon.page.tsx",["391","392","393"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { v4 as uuid } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { Slider } from 'rsuite';\n//components\nimport Layout from '../../components/hoc/Layout';\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport Flexbox from '../../components/hoc/Flexbox';\nimport HeaderLine from '../../components/common/HeaderLine';\nimport BorderedBox from '../../components/hoc/BorderedBox';\nimport DatePick from '../../components/common/datePicker/DatePick';\nimport MultiSelect from '../../components/common/selectable/MultiSelect';\n//types\nimport { CreateCouponType } from '../../redux/types/coupon.type';\n//request\nimport {\n  CREATE_COUPON,\n  UPDATE_COUPON,\n  GET_COUPON_BY_ID,\n} from '../../redux/requests/coupon.request';\n//actions\nimport { saveNetStatus } from '../../redux/slices/net-status.slice';\n\nconst types = ['product', 'brand', 'category', 'all'];\n\nconst initialState = {\n  name: '',\n  type: [],\n  value: 0,\n  description: '',\n  couponList: [],\n  endDate: new Date(),\n};\n\ntype CouponGeneratorType = {\n  length: number;\n  count: number;\n  list: { used: boolean; key: string }[];\n};\n\ntype Props = {};\n\nconst CreateCoupon: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  //requests\n  const [CreateCoupon, createResponse] = useMutation(CREATE_COUPON);\n  const [UpdateCoupon, updateResponse] = useMutation(UPDATE_COUPON);\n  const [GetCouponById, getResponse] = useLazyQuery(GET_COUPON_BY_ID);\n  //state\n  const [state, setState] = useState<CreateCouponType>({\n    id: uuid(),\n    ...initialState,\n  });\n  const [coupon, setCoupon] = useState<CouponGeneratorType>({\n    length: 5,\n    count: 30,\n    list: [],\n  });\n  const [mode, setMode] = useState<string>('create');\n\n  useEffect(() => {\n    (async function () {\n      const { mode, selected }: any = history.location.state;\n      if (mode === 'update') {\n        await getCouponById(selected[0]);\n        setMode(mode);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const payload = getResponse.data.getCouponById;\n      setState(payload);\n      setCoupon({\n        length: payload.couponList[0].key.length,\n        count: payload.couponList.length,\n        list: payload.couponList,\n      });\n    }\n  }, [getResponse.data]);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push('/coupons');\n    }\n  }, [createResponse.data]);\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push('/coupons');\n    }\n  }, [updateResponse.data]);\n\n  async function getCouponById(id: string): Promise<void> {\n    try {\n      await GetCouponById({\n        variables: { id },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateCoupon({\n        variables: {\n          newCoupon: {\n            ...state,\n            couponList: coupon.list,\n          },\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateCoupon({\n        variables: {\n          updatedCoupon: state,\n        },\n      });\n    } catch (err) {\n      dispatch(saveNetStatus(err.graphQLErrors));\n    }\n  }\n\n  function _onTypeSelect(key: string, val: string | string[]): void {\n    setState((prevState: any) => ({ ...prevState, [key]: val }));\n  }\n\n  function _onGenerate(): void {\n    const symbols = 'QWERTYUIOPASDFGHJKLZXCVBNM1234567890';\n    const list = [];\n    let key = new Date().getFullYear() + '';\n    for (let i = 0; i < coupon.count; i++) {\n      for (let j = 0; j < coupon.length; j++) {\n        key += symbols[Math.floor(Math.random() * symbols.length)];\n      }\n      list.push({ used: false, key });\n      key = new Date().getFullYear() + '';\n    }\n    setCoupon({ ...coupon, list });\n  }\n\n  return (\n    <Layout>\n      <HeaderLine label=\"Create coupon\" goBack={true} />\n      <BorderedBox>\n        <Body flex=\"column\" align=\"start\">\n          <Flexbox cls=\"np gap\">\n            <Input\n              type=\"text\"\n              label=\"Name\"\n              name=\"name\"\n              value={state.name}\n              getValue={(val: string) => setState({ ...state, name: val })}\n            />\n            <Input\n              type=\"text\"\n              label=\"Description\"\n              name=\"description\"\n              value={state.description}\n              getValue={(val: string) =>\n                setState({ ...state, description: val })\n              }\n            />\n            <DatePick\n              label=\"Expire date\"\n              value={new Date(state.endDate)}\n              getValue={(val: Date) => setState({ ...state, endDate: val })}\n            />\n            <Input\n              type=\"number\"\n              label=\"Value of coupon\"\n              name=\"value\"\n              value={state.value}\n              getValue={(val: number) => setState({ ...state, value: +val })}\n            />\n            <MultiSelect\n              label=\"Target\"\n              value={state.type!.map((t, i) => ({ id: t, name: t }))}\n              options={types.map((t, i) => ({ id: t, name: t }))}\n              getValue={(val: string[]) => _onTypeSelect('type', val)}\n            />\n          </Flexbox>\n          <Flexbox cls=\"np gap\" align=\"start\">\n            <Flexbox cls=\"gap range-wrap\" flex=\"column\" align=\"start\">\n              <Slider\n                progress\n                value={coupon.length}\n                onChange={(value) => {\n                  setCoupon({ ...coupon, length: +value });\n                }}\n                min={5}\n                max={10}\n              />\n              <Slider\n                progress\n                value={coupon.count}\n                onChange={(value) => {\n                  setCoupon({ ...coupon, count: +value });\n                }}\n                min={1}\n                max={99}\n              />\n              <span>Coupon length: {coupon.length}</span>\n              <span>Coupon count: {coupon.count}</span>\n            </Flexbox>\n            <Flexbox cls=\"coupon-list-wrap\" col=\"4\" flex=\"column\" align=\"start\">\n              <span>List of coupon keys</span>\n              <ul>\n                {coupon.list.length ? (\n                  coupon.list.map((l, i) => (\n                    <li key={i}>\n                      {l.used ? <del>{l.key}</del> : <span>{l.key}</span>}\n                    </li>\n                  ))\n                ) : (\n                  <li>\n                    <span>Generate button is down below 👇</span>\n                  </li>\n                )}\n              </ul>\n            </Flexbox>\n          </Flexbox>\n        </Body>\n        <FooterPanel>\n          {mode === 'create' ? (\n            <Button\n              appearance=\"primary\"\n              label=\"Create\"\n              onAction={_onSave}\n              cls=\"m-0 mr-3\"\n            />\n          ) : (\n            <Button\n              appearance=\"primary\"\n              label=\"Update\"\n              onAction={_onUpdate}\n              cls=\"m-0 mr-3\"\n            />\n          )}\n          <Button\n            appearance=\"primary\"\n            label=\"Reset fields\"\n            onAction={() =>\n              setState({\n                id: uuid(),\n                ...initialState,\n              })\n            }\n            cls=\"m-0 mr-3\"\n          />\n          <Button\n            appearance=\"primary\"\n            label=\"Generate Coupons\"\n            onAction={_onGenerate}\n            cls=\"m-0 mr-3\"\n          />\n        </FooterPanel>\n      </BorderedBox>\n    </Layout>\n  );\n};\n\nCreateCoupon.defaultProps = {};\n\nexport default CreateCoupon;\n\nconst Body = styled(Flexbox)`\n  padding: 0;\n  margin: 10px 0 20px 0;\n  gap: 10px;\n\n  .range-wrap {\n    background-color: ${({ theme }) => theme.colors.background};\n    min-height: 110px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.colors.lightBorder};\n    border-radius: 6px;\n    & > div {\n      margin: 10px auto 0 auto;\n      width: 100%;\n    }\n  }\n\n  .coupon-list-wrap {\n    background-color: ${({ theme }) => theme.colors.background};\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.colors.lightBorder};\n    border-radius: 6px;\n    padding: 10px !important;\n\n    span {\n      font-size: ${({ theme }) => theme.fontSize.sm + 'px'};\n      color: ${({ theme }) => theme.colors.color};\n      font-weight: 600;\n      margin-bottom: 5px;\n    }\n\n    ul {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 10px;\n\n      li {\n        font-size: ${({ theme }) => theme.fontSize.xs + 'px'};\n        color: ${({ theme }) => theme.colors.color};\n      }\n    }\n  }\n`;\n\nconst FooterPanel = styled(Flexbox)`\n  margin-top: 10px;\n  padding: 0;\n  gap: 10px;\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/hoc/BorderedBox.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Input.tsx",["394"],"import React, { FormEvent, useRef } from 'react';\nimport { Input as RsInput } from 'rsuite';\nimport styled from 'styled-components';\n\ntype Props = {\n  type?: 'text' | 'number' | 'email' | 'password' | 'phone' | 'range';\n  label?: string;\n  value: any;\n  name: string;\n  cls?: string;\n  getValue: (val: any) => void;\n  [key: string]: any;\n};\n\nconst Input: React.FC<Props> = ({\n  type,\n  label,\n  value,\n  name,\n  cls,\n  getValue,\n  ...props\n}) => {\n  const randomNumber = useRef(Math.floor(Math.random() * 1000)).current;\n\n  const isNumberType = type === 'number' || type === 'password';\n\n  function _onChange(val: string) {\n    getValue(val);\n  }\n\n  return (\n    <Label\n      htmlFor={type + label! + randomNumber}\n      className={cls}\n      isPassword={type === 'password'}\n    >\n      <RsInput\n        type={isNumberType ? 'text' : type}\n        id={type + label! + randomNumber}\n        placeholder={label}\n        name={type}\n        autoComplete=\"current-password\"\n        value={isNumberType ? value || '' : value}\n        onChange={_onChange}\n        {...props}\n      />\n    </Label>\n  );\n};\n\nInput.defaultProps = {\n  type: 'text',\n  label: 'Label',\n  name: 'input-name',\n  cls: '',\n  value: '',\n};\n\nexport default Input;\n\nconst Label = styled.label<any>`\n  display: flex;\n  flex-direction: column;\n  min-width: 220px;\n  flex: 1;\n  -webkit-text-security: ${({ isPassword }) => (isPassword ? 'disc' : 'auto')};\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brands.tsx",["395"],"import React, { memo, useEffect, useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport styled from 'styled-components';\n//components\nimport Flexbox from '../../components/hoc/Flexbox';\n//request\nimport { GET_BRANDS_BY_CATEGORY_ID } from '../../redux/requests/brand.request';\n//types\nimport { BrandType } from '../../redux/types/brand.type';\n\ntype Props = {\n  id: string;\n};\n\nconst Brands: React.FC<Props> = memo(({ id }) => {\n  //graphql\n  const [GetBrandsByCategoryId, brandsResponse] = useLazyQuery(\n    GET_BRANDS_BY_CATEGORY_ID,\n  );\n  //state\n  const [brands, setBrands] = useState<BrandType[]>([]);\n\n  useEffect(() => {\n    (async function () {\n      await getBrandsByCategoryId();\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (brandsResponse.data) {\n      const payload = brandsResponse.data.getBrandsByCategoryId;\n      setBrands(payload);\n    }\n  }, [brandsResponse]);\n\n  async function getBrandsByCategoryId(): Promise<void> {\n    try {\n      await GetBrandsByCategoryId({\n        variables: {\n          id,\n        },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Container flex=\"column\" align=\"start\">\n      <Flexbox cls=\"header np\" justify=\"between\">\n        <h3>Brands</h3>\n        <Flexbox cls=\"np count-wrap\" justify=\"end\">\n          <small>{brands.length}</small>\n        </Flexbox>\n      </Flexbox>\n      {brands.length ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Brand name</th>\n              <th>Other brands</th>\n            </tr>\n          </thead>\n          <tbody>\n            {brands.map((brand, i) => (\n              <tr key={i}>\n                <td>{brand.name}</td>\n                <td>\n                  {brand.category.map((cat: any, idx) => {\n                    if (cat.id !== id) {\n                      return <span key={idx}>{cat.name}</span>;\n                    }\n                    return '';\n                  })}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <span className=\"no-data\">No brands</span>\n      )}\n    </Container>\n  );\n});\n\nBrands.defaultProps = {};\n\nexport default Brands;\n\nconst Container = styled(Flexbox)`\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 4px;\n  border-width: 2px 4px 2px 2px;\n  border-style: solid;\n  border-color: ${({ theme }) => theme.colors.border};\n  padding: 10px;\n  min-width: 300px;\n  max-width: 500px;\n\n  .header {\n    min-height: 40px !important;\n    border-width: 0 0 2px 0;\n    border-style: solid;\n    border-color: ${({ theme }) => theme.colors.border};\n\n    h3 {\n      font-weight: bold;\n      margin: 0;\n    }\n\n    .count-wrap {\n      small {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: ${({ theme }) => theme.colors.errorLight};\n        border-right: ${({ theme }) => `4px solid ${theme.colors.error}`};\n        color: ${({ theme }) => theme.colors.white};\n        border-radius: 5px;\n        width: 40px;\n        height: 20px;\n        text-align: center;\n        font-weight: bold;\n        font-size: ${({ theme }) => theme.fontSize.xs + 'px'};\n      }\n    }\n  }\n\n  table {\n    width: 100%;\n    border-collapse: separate;\n    overflow: auto;\n    white-space: nowrap;\n    border-radius: 3px;\n\n    th,\n    td {\n      text-align: left;\n      border-width: 1px;\n      border-style: solid;\n      border-color: ${({ theme }) => theme.colors.border};\n      padding: 3px;\n    }\n  }\n\n  .no-data {\n    display: block;\n    margin-top: 10px;\n  }\n\n  @media (max-width: 789px) {\n    max-width: 100%;\n  }\n`;\n","/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/cloudinary.utils.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/net-status.slice.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Brand/Brand.page.tsx",["396"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/User/User.page.tsx",["397"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/Divider.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/coupon.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Category/SubCategories.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Slider/ModalBody.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/utils/functions.utils.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/auth-credentials.slice.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/requests/category.request.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/datePicker/DateRangePick.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/datePicker/DatePick.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/redux/slices/user.slice.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/HeaderLine.tsx",["398"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/table/Table.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/richTextEditor/TinyEditor.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Auth/styled-components.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useTheme.ts",["399"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useApollo.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useMedia.ts",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/notificationBox/index.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/components/common/notificationBox/ErrorBox.tsx",["400"],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/pages/Main/SystemUsage.tsx",[],"/Users/mirik/Documents/Projects/@electroshop/ecomm-dashboard/src/hooks/useSocket.ts",["401"],{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","replacedBy":"405"},{"ruleId":"402","replacedBy":"406"},{"ruleId":"404","replacedBy":"407"},{"ruleId":"402","replacedBy":"408"},{"ruleId":"404","replacedBy":"409"},{"ruleId":"410","severity":1,"message":"411","line":86,"column":6,"nodeType":"412","endLine":86,"endColumn":8,"suggestions":"413"},{"ruleId":"410","severity":1,"message":"414","line":142,"column":6,"nodeType":"412","endLine":142,"endColumn":27,"suggestions":"415"},{"ruleId":"410","severity":1,"message":"414","line":148,"column":6,"nodeType":"412","endLine":148,"endColumn":27,"suggestions":"416"},{"ruleId":"402","replacedBy":"417"},{"ruleId":"404","replacedBy":"418"},{"ruleId":"402","replacedBy":"419"},{"ruleId":"404","replacedBy":"420"},{"ruleId":"410","severity":1,"message":"421","line":37,"column":8,"nodeType":"412","endLine":37,"endColumn":15,"suggestions":"422"},{"ruleId":"402","replacedBy":"423"},{"ruleId":"404","replacedBy":"424"},{"ruleId":"425","severity":1,"message":"426","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"402","replacedBy":"429"},{"ruleId":"404","replacedBy":"430"},{"ruleId":"425","severity":1,"message":"431","line":4,"column":3,"nodeType":"427","messageId":"428","endLine":4,"endColumn":15},{"ruleId":"425","severity":1,"message":"432","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":16},{"ruleId":"425","severity":1,"message":"433","line":7,"column":3,"nodeType":"427","messageId":"428","endLine":7,"endColumn":11},{"ruleId":"425","severity":1,"message":"434","line":8,"column":3,"nodeType":"427","messageId":"428","endLine":8,"endColumn":14},{"ruleId":"425","severity":1,"message":"435","line":9,"column":3,"nodeType":"427","messageId":"428","endLine":9,"endColumn":13},{"ruleId":"425","severity":1,"message":"436","line":11,"column":10,"nodeType":"427","messageId":"428","endLine":11,"endColumn":17},{"ruleId":"425","severity":1,"message":"437","line":12,"column":10,"nodeType":"427","messageId":"428","endLine":12,"endColumn":20},{"ruleId":"425","severity":1,"message":"438","line":15,"column":10,"nodeType":"427","messageId":"428","endLine":15,"endColumn":24},{"ruleId":"425","severity":1,"message":"439","line":22,"column":10,"nodeType":"427","messageId":"428","endLine":22,"endColumn":23},{"ruleId":"425","severity":1,"message":"440","line":24,"column":10,"nodeType":"427","messageId":"428","endLine":24,"endColumn":19},{"ruleId":"425","severity":1,"message":"441","line":27,"column":10,"nodeType":"427","messageId":"428","endLine":27,"endColumn":24},{"ruleId":"425","severity":1,"message":"442","line":27,"column":26,"nodeType":"427","messageId":"428","endLine":27,"endColumn":43},{"ruleId":"410","severity":1,"message":"443","line":49,"column":6,"nodeType":"412","endLine":49,"endColumn":8,"suggestions":"444"},{"ruleId":"410","severity":1,"message":"445","line":40,"column":6,"nodeType":"412","endLine":40,"endColumn":8,"suggestions":"446"},{"ruleId":"402","replacedBy":"447"},{"ruleId":"404","replacedBy":"448"},{"ruleId":"402","replacedBy":"449"},{"ruleId":"404","replacedBy":"450"},{"ruleId":"402","replacedBy":"451"},{"ruleId":"404","replacedBy":"452"},{"ruleId":"425","severity":1,"message":"453","line":2,"column":23,"nodeType":"427","messageId":"428","endLine":2,"endColumn":35},{"ruleId":"402","replacedBy":"454"},{"ruleId":"404","replacedBy":"455"},{"ruleId":"410","severity":1,"message":"456","line":27,"column":6,"nodeType":"412","endLine":27,"endColumn":8,"suggestions":"457"},{"ruleId":"402","replacedBy":"458"},{"ruleId":"404","replacedBy":"459"},{"ruleId":"410","severity":1,"message":"460","line":61,"column":6,"nodeType":"412","endLine":61,"endColumn":8,"suggestions":"461"},{"ruleId":"410","severity":1,"message":"462","line":75,"column":6,"nodeType":"412","endLine":75,"endColumn":27,"suggestions":"463"},{"ruleId":"425","severity":1,"message":"464","line":16,"column":8,"nodeType":"427","messageId":"428","endLine":16,"endColumn":19},{"ruleId":"410","severity":1,"message":"465","line":33,"column":6,"nodeType":"412","endLine":33,"endColumn":8,"suggestions":"466"},{"ruleId":"410","severity":1,"message":"467","line":49,"column":6,"nodeType":"412","endLine":49,"endColumn":8,"suggestions":"468"},{"ruleId":"410","severity":1,"message":"469","line":57,"column":6,"nodeType":"412","endLine":57,"endColumn":8,"suggestions":"470"},{"ruleId":"410","severity":1,"message":"471","line":83,"column":6,"nodeType":"412","endLine":83,"endColumn":8,"suggestions":"472"},{"ruleId":"410","severity":1,"message":"414","line":108,"column":6,"nodeType":"412","endLine":108,"endColumn":27,"suggestions":"473"},{"ruleId":"410","severity":1,"message":"414","line":114,"column":6,"nodeType":"412","endLine":114,"endColumn":27,"suggestions":"474"},{"ruleId":"402","replacedBy":"475"},{"ruleId":"404","replacedBy":"476"},{"ruleId":"410","severity":1,"message":"477","line":56,"column":6,"nodeType":"412","endLine":56,"endColumn":8,"suggestions":"478"},{"ruleId":"425","severity":1,"message":"479","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":31},{"ruleId":"410","severity":1,"message":"480","line":59,"column":6,"nodeType":"412","endLine":59,"endColumn":8,"suggestions":"481"},{"ruleId":"410","severity":1,"message":"414","line":72,"column":6,"nodeType":"412","endLine":72,"endColumn":27,"suggestions":"482"},{"ruleId":"410","severity":1,"message":"414","line":78,"column":6,"nodeType":"412","endLine":78,"endColumn":27,"suggestions":"483"},{"ruleId":"402","replacedBy":"484"},{"ruleId":"404","replacedBy":"485"},{"ruleId":"410","severity":1,"message":"486","line":56,"column":6,"nodeType":"412","endLine":56,"endColumn":8,"suggestions":"487"},{"ruleId":"410","severity":1,"message":"488","line":74,"column":6,"nodeType":"412","endLine":74,"endColumn":8,"suggestions":"489"},{"ruleId":"410","severity":1,"message":"414","line":92,"column":6,"nodeType":"412","endLine":92,"endColumn":27,"suggestions":"490"},{"ruleId":"410","severity":1,"message":"414","line":98,"column":6,"nodeType":"412","endLine":98,"endColumn":27,"suggestions":"491"},{"ruleId":"425","severity":1,"message":"492","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"493","line":27,"column":6,"nodeType":"412","endLine":27,"endColumn":8,"suggestions":"494"},{"ruleId":"410","severity":1,"message":"495","line":49,"column":6,"nodeType":"412","endLine":49,"endColumn":8,"suggestions":"496"},{"ruleId":"410","severity":1,"message":"497","line":49,"column":6,"nodeType":"412","endLine":49,"endColumn":8,"suggestions":"498"},{"ruleId":"499","severity":1,"message":"500","line":25,"column":11,"nodeType":"501","endLine":25,"endColumn":17},{"ruleId":"410","severity":1,"message":"502","line":37,"column":6,"nodeType":"412","endLine":37,"endColumn":8,"suggestions":"503"},{"ruleId":"425","severity":1,"message":"504","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":26},{"ruleId":"410","severity":1,"message":"505","line":13,"column":6,"nodeType":"412","endLine":13,"endColumn":10,"suggestions":"506"},"no-native-reassign",["507"],"no-negated-in-lhs",["508"],["507"],["508"],["507"],["508"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getBrands', 'getCategories', 'getCoupons', 'getProductById', and 'history.location.state'. Either include them or remove the dependency array.","ArrayExpression",["509"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["510"],["511"],["507"],["508"],["507"],["508"],"React Hook useEffect has a missing dependency: 'multiple'. Either include it or remove the dependency array.",["512"],["507"],["508"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["507"],["508"],"'ApolloClient' is defined but never used.","'InMemoryCache' is defined but never used.","'HttpLink' is defined but never used.","'fromPromise' is defined but never used.","'ApolloLink' is defined but never used.","'onError' is defined but never used.","'setContext' is defined but never used.","'useMediaLayout' is defined but never used.","'REFRESH_TOKEN' is defined but never used.","'saveToken' is defined but never used.","'getFromCookies' is defined but never used.","'removeFromCookies' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'netStatus.isOpen'. Either include them or remove the dependency array.",["513"],"React Hook useEffect has missing dependencies: '_onLogout', 'socket', and 'user.id'. Either include them or remove the dependency array.",["514"],["507"],["508"],["507"],["508"],["507"],["508"],"'SelectPicker' is defined but never used.",["507"],["508"],"React Hook useEffect has a missing dependency: 'getProductsByCategoryId'. Either include it or remove the dependency array.",["515"],["507"],["508"],"React Hook useEffect has missing dependencies: 'getUser' and 'location.state?.selected'. Either include them or remove the dependency array.",["516"],"React Hook useEffect has missing dependencies: 'history', 'socket', and 'state.id'. Either include them or remove the dependency array.",["517"],"'SystemUsage' is defined but never used.","React Hook useEffect has a missing dependency: 'getStatistics'. Either include it or remove the dependency array.",["518"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getCategories', and 'rowCount'. Either include them or remove the dependency array.",["519"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["520"],"React Hook useEffect has missing dependencies: 'getBrandById' and 'history.location.state'. Either include them or remove the dependency array.",["521"],["522"],["523"],["507"],["508"],"React Hook useEffect has missing dependencies: 'currentPage', 'dateRange.from', 'dateRange.to', 'deepSearch', 'getCoupons', and 'rowCount'. Either include them or remove the dependency array.",["524"],"'memo' is defined but never used.","React Hook useEffect has missing dependencies: 'getCategoryById' and 'history.location.state'. Either include them or remove the dependency array.",["525"],["526"],["527"],["507"],["508"],"React Hook useEffect has missing dependencies: 'currentPage', 'dateRange.from', 'dateRange.to', 'deepSearch', 'getProducts', and 'rowCount'. Either include them or remove the dependency array.",["528"],"React Hook useEffect has missing dependencies: 'getCouponById' and 'history.location.state'. Either include them or remove the dependency array.",["529"],["530"],["531"],"'FormEvent' is defined but never used.","React Hook useEffect has a missing dependency: 'getBrandsByCategoryId'. Either include it or remove the dependency array.",["532"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getBrands', and 'rowCount'. Either include them or remove the dependency array.",["533"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getUsers', and 'rowCount'. Either include them or remove the dependency array.",["534"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["535"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["536"],"no-global-assign","no-unsafe-negation",{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"561","fix":"562"},{"desc":"539","fix":"563"},{"desc":"541","fix":"564"},{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},{"desc":"539","fix":"569"},{"desc":"541","fix":"570"},{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},{"desc":"539","fix":"575"},{"desc":"541","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},"Update the dependencies array to be: [getBrands, getCategories, getCoupons, getProductById, history.location.state]",{"range":"587","text":"588"},"Update the dependencies array to be: [createResponse.data, history]",{"range":"589","text":"590"},"Update the dependencies array to be: [history, updateResponse.data]",{"range":"591","text":"592"},"Update the dependencies array to be: [multiple, value]",{"range":"593","text":"594"},"Update the dependencies array to be: [dispatch, history, netStatus.isOpen]",{"range":"595","text":"596"},"Update the dependencies array to be: [_onLogout, socket, user.id]",{"range":"597","text":"598"},"Update the dependencies array to be: [getProductsByCategoryId]",{"range":"599","text":"600"},"Update the dependencies array to be: [getUser, location.state?.selected]",{"range":"601","text":"602"},"Update the dependencies array to be: [history, socket, state.id, updateResponse.data]",{"range":"603","text":"604"},"Update the dependencies array to be: [getStatistics]",{"range":"605","text":"606"},"Update the dependencies array to be: [currentPage, deepSearch, getCategories, rowCount]",{"range":"607","text":"608"},"Update the dependencies array to be: [getCategories]",{"range":"609","text":"610"},"Update the dependencies array to be: [getBrandById, history.location.state]",{"range":"611","text":"612"},{"range":"613","text":"590"},{"range":"614","text":"592"},"Update the dependencies array to be: [currentPage, dateRange.from, dateRange.to, deepSearch, getCoupons, rowCount]",{"range":"615","text":"616"},"Update the dependencies array to be: [getCategoryById, history.location.state]",{"range":"617","text":"618"},{"range":"619","text":"590"},{"range":"620","text":"592"},"Update the dependencies array to be: [currentPage, dateRange.from, dateRange.to, deepSearch, getProducts, rowCount]",{"range":"621","text":"622"},"Update the dependencies array to be: [getCouponById, history.location.state]",{"range":"623","text":"624"},{"range":"625","text":"590"},{"range":"626","text":"592"},"Update the dependencies array to be: [getBrandsByCategoryId]",{"range":"627","text":"628"},"Update the dependencies array to be: [currentPage, deepSearch, getBrands, rowCount]",{"range":"629","text":"630"},"Update the dependencies array to be: [currentPage, deepSearch, getUsers, rowCount]",{"range":"631","text":"632"},"Update the dependencies array to be: [dispatch]",{"range":"633","text":"634"},"Update the dependencies array to be: [ns, socket]",{"range":"635","text":"636"},[3066,3068],"[getBrands, getCategories, getCoupons, getProductById, history.location.state]",[4461,4482],"[createResponse.data, history]",[4581,4602],"[history, updateResponse.data]",[1194,1201],"[multiple, value]",[1640,1642],"[dispatch, history, netStatus.isOpen]",[1313,1315],"[_onLogout, socket, user.id]",[753,755],"[getProductsByCategoryId]",[1968,1970],"[getUser, location.state?.selected]",[2267,2288],"[history, socket, state.id, updateResponse.data]",[1072,1074],"[getStatistics]",[1700,1702],"[currentPage, deepSearch, getCategories, rowCount]",[1969,1971],"[getCategories]",[2676,2678],"[getBrandById, history.location.state]",[3352,3373],[3470,3491],[1793,1795],"[currentPage, dateRange.from, dateRange.to, deepSearch, getCoupons, rowCount]",[1939,1941],"[getCategoryById, history.location.state]",[2204,2225],[2326,2347],[1815,1817],"[currentPage, dateRange.from, dateRange.to, deepSearch, getProducts, rowCount]",[2214,2216],"[getCouponById, history.location.state]",[2628,2649],[2747,2768],[728,730],"[getBrandsByCategoryId]",[1624,1626],"[currentPage, deepSearch, getBrands, rowCount]",[1611,1613],"[currentPage, deepSearch, getUsers, rowCount]",[1169,1171],"[dispatch]",[338,342],"[ns, socket]"]