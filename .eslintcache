[{"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\table\\Table.tsx":"1","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\index.tsx":"2","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\roles.slice.ts":"3","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\utils\\storage.utils.ts":"4","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\Main.page.tsx":"5","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\nav.slice.ts":"6","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\CreateProduct.page.tsx":"7","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\product.request.ts":"8","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\Product.page.tsx":"9","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Auth.page.tsx":"10","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithoutToken.tsx":"11","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithToken.tsx":"12","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\richTextEditor\\templates.ts":"13","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\richTextEditor\\TinyEditor.tsx":"14","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\store.ts":"15","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\CreateCategory.page.tsx":"16","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Register.tsx":"17","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\utils\\cloudinary.utils.ts":"18","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Navigation.tsx":"19","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\table\\Buttons.tsx":"20","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\UploadZone.tsx":"21","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\Category.page.tsx":"22","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\User\\User.page.tsx":"23","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\App.tsx":"24","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\notificationBox\\ErrorBox.tsx":"25","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\User\\CreateUser.page.tsx":"26","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\utils\\token.utils.ts":"27","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\notificationBox\\index.tsx":"28","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\table\\FakeTable.tsx":"29","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Login.tsx":"30","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\reportWebVitals.ts":"31","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\utils\\user.utils.ts":"32","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Header.tsx":"33","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\notificationBox\\WarningBox.tsx":"34","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\SubCategories.tsx":"35","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\category.request.ts":"36","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\table\\body.handler..ts":"37","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Select.tsx":"38","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\user.request.ts":"39","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\user.slice.ts":"40","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\auth-credentials.slice.ts":"41","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\StatisticCard.tsx":"42","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Rest\\NotFound.page.tsx":"43","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Checkbox.tsx":"44","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\LoadingCard.tsx":"45","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\notificationBox\\ProcessBox.tsx":"46","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\table\\LoadingBox.tsx":"47","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\SystemUsage.tsx":"48","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Layout.tsx":"49","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Button.tsx":"50","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\hooks\\useInterval.ts":"51","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Input.tsx":"52"},{"size":7275,"mtime":1613416084304,"results":"53","hashOfConfig":"54"},{"size":1078,"mtime":1612899336858,"results":"55","hashOfConfig":"54"},{"size":242,"mtime":1612199729538,"results":"56","hashOfConfig":"54"},{"size":1001,"mtime":1612199729542,"results":"57","hashOfConfig":"54"},{"size":1266,"mtime":1613323084121,"results":"58","hashOfConfig":"54"},{"size":1185,"mtime":1612641116885,"results":"59","hashOfConfig":"54"},{"size":8342,"mtime":1613815601644,"results":"60","hashOfConfig":"54"},{"size":1567,"mtime":1613417927758,"results":"61","hashOfConfig":"54"},{"size":4701,"mtime":1613417067484,"results":"62","hashOfConfig":"54"},{"size":1028,"mtime":1612199729532,"results":"63","hashOfConfig":"54"},{"size":603,"mtime":1612899436322,"results":"64","hashOfConfig":"54"},{"size":1158,"mtime":1613326834704,"results":"65","hashOfConfig":"54"},{"size":615,"mtime":1612606874002,"results":"66","hashOfConfig":"54"},{"size":2367,"mtime":1612614610651,"results":"67","hashOfConfig":"68"},{"size":722,"mtime":1612199729539,"results":"69","hashOfConfig":"68"},{"size":3776,"mtime":1612804586497,"results":"70","hashOfConfig":"54"},{"size":2146,"mtime":1613325552225,"results":"71","hashOfConfig":"54"},{"size":793,"mtime":1612611863622,"results":"72","hashOfConfig":"68"},{"size":1862,"mtime":1613145979658,"results":"73","hashOfConfig":"54"},{"size":1846,"mtime":1613417016487,"results":"74","hashOfConfig":"54"},{"size":5644,"mtime":1612611913174,"results":"75","hashOfConfig":"54"},{"size":4584,"mtime":1613326834751,"results":"76","hashOfConfig":"54"},{"size":4371,"mtime":1612801445140,"results":"77","hashOfConfig":"54"},{"size":4873,"mtime":1613833864231,"results":"78","hashOfConfig":"54"},{"size":1038,"mtime":1613327928556,"results":"79","hashOfConfig":"54"},{"size":3852,"mtime":1612627097541,"results":"80","hashOfConfig":"54"},{"size":266,"mtime":1612899554051,"results":"81","hashOfConfig":"54"},{"size":851,"mtime":1613830614455,"results":"82","hashOfConfig":"54"},{"size":979,"mtime":1613416117405,"results":"83","hashOfConfig":"54"},{"size":2188,"mtime":1612899990376,"results":"84","hashOfConfig":"54"},{"size":440,"mtime":1612199729541,"results":"85","hashOfConfig":"54"},{"size":443,"mtime":1612631732495,"results":"86","hashOfConfig":"54"},{"size":1741,"mtime":1613239842054,"results":"87","hashOfConfig":"54"},{"size":405,"mtime":1612199729530,"results":"88","hashOfConfig":"54"},{"size":2762,"mtime":1612804816803,"results":"89","hashOfConfig":"54"},{"size":1620,"mtime":1612804777019,"results":"90","hashOfConfig":"54"},{"size":748,"mtime":1612802670573,"results":"91","hashOfConfig":"54"},{"size":3163,"mtime":1612207924134,"results":"92","hashOfConfig":"54"},{"size":1628,"mtime":1613239995866,"results":"93","hashOfConfig":"54"},{"size":823,"mtime":1612899848982,"results":"94","hashOfConfig":"54"},{"size":930,"mtime":1612900048934,"results":"95","hashOfConfig":"54"},{"size":915,"mtime":1613143991203,"results":"96","hashOfConfig":"54"},{"size":572,"mtime":1612199729535,"results":"97","hashOfConfig":"54"},{"size":946,"mtime":1612199729526,"results":"98","hashOfConfig":"54"},{"size":492,"mtime":1612199729533,"results":"99","hashOfConfig":"54"},{"size":547,"mtime":1612199729529,"results":"100","hashOfConfig":"54"},{"size":415,"mtime":1613415936376,"results":"101","hashOfConfig":"54"},{"size":4101,"mtime":1612199729534,"results":"102","hashOfConfig":"54"},{"size":641,"mtime":1612199729527,"results":"103","hashOfConfig":"54"},{"size":809,"mtime":1612199729526,"results":"104","hashOfConfig":"54"},{"size":510,"mtime":1612199729531,"results":"105","hashOfConfig":"54"},{"size":1060,"mtime":1612199729527,"results":"106","hashOfConfig":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"46v0i4",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bnv71b",{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"125"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"125"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"125"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\table\\Table.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\index.tsx",[],["226","227"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\roles.slice.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\utils\\storage.utils.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\Main.page.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\nav.slice.ts",[],["228","229"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\CreateProduct.page.tsx",["230","231","232","233"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\product.request.ts",[],["234","235"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\Product.page.tsx",["236"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Table from \"../../components/common/table/Table\";\nimport NotificationBox from \"../../components/common/notificationBox\";\n//types\nimport { ProductType } from \"../../redux/types/product.type\";\n//request\nimport {\n  GET_PRODUCTS,\n  DISABLE_PRODUCTS,\n  ACTIVATE_PRODUCTS,\n  DELETE_PRODUCTS\n} from \"../../redux/requests/product.request\";\n\ntype Props = {};\n\nconst ProductPage: React.FC<Props> = (props) => {\n  const [GetProducts, getResponse] = useLazyQuery(GET_PRODUCTS);\n  const [DisableProducts, disableResponse] = useMutation(DISABLE_PRODUCTS);\n  const [ActivateProducts, activateResponse] = useMutation(ACTIVATE_PRODUCTS);\n  const [DeleteProducts, deleteResponse] = useMutation(DELETE_PRODUCTS);\n  const [products, setProducts] = useState<ProductType[]>([]);\n  //pagination\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  //deep search\n  const [deepSearch, setDeepSearch] = useState<string>('');\n  //side effects\n  const [unSelect, setUnSelect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getProducts;\n      console.log(payload)\n      setProducts(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data])\n\n  useEffect(() => {\n    (async function() {\n      await getProducts(currentPage, rowCount, deepSearch)\n    })()\n  }, [])\n\n  async function getProducts(pg: number, rc: number, kw: string): Promise<void> {\n    try {\n      await GetProducts({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw\n          }\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber)\n    await getProducts(pageNumber, rowCount, deepSearch);\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getProducts(currentPage, rc, deepSearch);\n  }\n\n  async function getDeepSearchFromTable(keyword: string): Promise<void> {\n    setDeepSearch(keyword);\n    await getProducts(currentPage, rowCount, keyword);\n  }\n\n  async function getIdsAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableProducts({\n        variables: {\n          disabledProducts: { ids }\n        }\n      })\n      handleProductsState(ids, true)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdsAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateProducts({\n        variables: {\n          activateProducts: { ids }\n        }\n      })\n      handleProductsState(ids, false)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdsAndDelete(ids: string[]): Promise<void> {\n    try {\n      await DeleteProducts({\n        variables: {\n          deleteProducts: { ids }\n        }\n      })\n      handleProductsList(ids)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  function handleProductsState(ids: string[], isDisabled: boolean) {\n    const updatedProducts = products.map(product => {\n      if (ids.includes(product.id)) {\n        return {\n          ...product,\n          isDisabled\n        }\n      }\n      return product;\n    })\n    setProducts(updatedProducts)\n  }\n\n  function handleProductsList(ids: string[]) {\n    const deletedProducts = products.filter(product => !ids.includes(product.id))\n    setProducts(deletedProducts)\n    setUnSelect(true);\n  }\n\n  return (\n    <Layout>\n      <h2 className=\"font-medium uppercase mx-4\">\n        Products\n      </h2>\n      {/*  table */}\n      <Table\n        data={products}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdsAndDisable={getIdsAndDisable}\n        getIdsAndActivate={getIdsAndActivate}\n        getIdsAndDelete={getIdsAndDelete}\n        path=\"products\"\n        exclude={excludeList}\n        error={!!getResponse.error}\n        unSelect={unSelect}\n      />\n      <NotificationBox\n        list={[\n          getResponse,\n          activateResponse,\n          disableResponse,\n          deleteResponse\n        ]}\n      />\n    </Layout>\n  );\n};\n\nexport default ProductPage;\n\nconst excludeList = [\n  'id',\n  'cover',\n  'description',\n  'images',\n  'freeDelivery',\n  'guarantee',\n  'stars',\n  'group',\n  'best',\n  'viewCount'\n]\n",["237","238"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Auth.page.tsx",[],["239","240"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithoutToken.tsx",[],["241","242"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithToken.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\richTextEditor\\templates.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\richTextEditor\\TinyEditor.tsx",["243"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\store.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\CreateCategory.page.tsx",["244","245","246"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Register.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\utils\\cloudinary.utils.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Navigation.tsx",["247","248"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\table\\Buttons.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\UploadZone.tsx",["249"],"import React, { FormEvent, useEffect, useState, memo } from 'react';\nimport Lightbox from 'react-image-lightbox';\n//utils\nimport { imageUploadAndGetUrl } from \"../../utils/cloudinary.utils\";\n\ntype Props = {\n  label?: string\n  value: string[]\n  multiple: boolean\n  cls?: string\n  getValue: (val: string[]) => void\n  [key: string]: any\n};\n\nconst UploadZone: React.FC<Props> = memo(({\n label,\n value,\n multiple,\n cls,\n getValue,\n ...props\n}) => {\n  const [preview, setPreview] = useState<string[]>([]);\n  const [upLoading, setUpLoading] = useState<boolean>(false);\n  const [warning, setWarning] = useState<string>('');\n  const [uploadPercent, setUploadPercent] = useState<number>(0);\n  const [photoIndex, setPhotoIndex] = useState<number>(0);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (multiple && typeof value === \"object\") {\n      setPreview(value)\n    }\n\n    if (!multiple && typeof value === \"string\" && value !== \"\") {\n      setPreview([value])\n    }\n  }, [value])\n\n  async function handleImage({ currentTarget }: FormEvent<HTMLInputElement>) {\n    const files = currentTarget.files!;\n    const newPreviewList: string[] = [];\n\n    if (files.length > 5) {\n      setWarning('Please follow the above instruction');\n      return;\n    }\n\n    setUpLoading(true);\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n\n      if (file.size > 524000) {\n        if (multiple) {\n          setWarning('Some of the images size greater than 500KB');\n        } else {\n          setWarning('Image size greater than 500KB');\n        }\n        setUpLoading(false);\n        continue;\n      }\n\n      await imageUploadAndGetUrl(file, \"product_images\",(percent, error, file) => {\n        if (percent) {\n          setUploadPercent(percent);\n        }\n        if (error) {\n          setWarning(error)\n        }\n        if (file) {\n          setUploadPercent(0);\n          setWarning('');\n          if (multiple) {\n            setPreview(prevState => [file.data.secure_url, ...prevState]);\n            newPreviewList.push(file.data.secure_url);\n          } else {\n            setPreview([file.data.secure_url]);\n            newPreviewList.push(file.data.secure_url);\n          }\n        }\n      });\n    }\n\n    getValue([...newPreviewList, ...preview]);\n    setUpLoading(false);\n  }\n\n  function _onDeletePreviewImage(e: any, url: string): void {\n    e.stopPropagation();\n    const newPreviewState: string[] = preview.filter(pre => pre !== url);\n    setPreview(newPreviewState);\n    getValue(newPreviewState);\n  }\n\n  return (\n    <div  className={`flex flex-col relative ${cls}`}>\n      <div className=\"flex justify-between\">\n        <span className={warning ? 'text-red-400' : 'text-black'}>{label}</span>\n        { uploadPercent ? <span className=\"ml-2 font-bold\">{uploadPercent}%</span> : null }\n      </div>\n      <label htmlFor=\"file-upload\">\n        <div className=\"flex-1\">\n          <input\n            type=\"file\"\n            id=\"file-upload\"\n            name=\"file-upload\"\n            autoComplete=\"off\"\n            className=\"absolute w-full p-2 opacity-0\"\n            onChange={handleImage}\n            multiple={multiple}\n            accept=\"image/*\"\n            disabled={upLoading}\n          />\n          <input type=\"text\"\n           value=\"\"\n           className=\"shadow-ml outline-none border-b-2 border-gray-200 p-3 text-black\n            border-r-4 rounded-md text-base focus:border-blue-400 w-full\"\n           readOnly={true}\n           placeholder={ warning ?  warning : 'Click to select' }\n           {...props}\n          />\n        </div>\n      </label>\n      <div\n        className=\"p-3 my-4 border-dashed border-2 border-gray-300 flex\n         flex-wrap rounded text-gray-300\"\n      >\n        {\n          preview.length ? preview.map((pre, i) => (\n            <div\n              key={i}\n              className=\"min-w-44 min-h-44 flex-1 m-3 p-2 bg-white rounded flex\n                flex-col items-center\"\n              onClick={() => {\n                setPhotoIndex(i)\n                setIsOpen(true)\n              }}\n            >\n              <div\n                className=\"w-36 h-36 bg-no-repeat bg-center bg-contain\"\n                style={{ backgroundImage: `url(${pre})` }}\n              />\n              <div\n                className=\"cursor-pointer text-gray-200 px-1 pt-3 pb-1 text-center\n                  transition-all hover:text-gray-400\"\n                onClick={(e) => _onDeletePreviewImage(e, pre)}\n              >\n                Remove\n              </div>\n            </div>\n          )) : 'Preview'\n        }\n      </div>\n\n      {isOpen && (\n        <Lightbox\n          mainSrc={preview[photoIndex]}\n          nextSrc={preview[(photoIndex + 1) % preview.length]}\n          prevSrc={preview[(photoIndex + preview.length - 1) % preview.length]}\n          onCloseRequest={() => setIsOpen(false)}\n          onMovePrevRequest={() =>\n            setPhotoIndex((photoIndex + preview.length - 1) % preview.length)\n          }\n          onMoveNextRequest={() =>\n            setPhotoIndex((photoIndex + 1) % preview.length)\n          }\n        />\n      )}\n    </div>\n  );\n}, (prevState, nextState) => {\n  if (typeof prevState.value === \"string\") {\n    return prevState.value === nextState.value\n  }\n  return compareDeeper(prevState.value, nextState.value)\n});\n\nUploadZone.defaultProps = {\n  label: 'Upload an image',\n  cls: 'm-4',\n  value: [],\n  multiple: false\n};\n\nexport default UploadZone;\n\n\nfunction compareDeeper(prev: string[], next: string[]): boolean {\n  if (prev.length !== next.length) {\n    return next.every((n, i) => n === prev[i]);\n  }\n  return true;\n}\n","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\Category.page.tsx",["250"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Table from \"../../components/common/table/Table\";\nimport NotificationBox from \"../../components/common/notificationBox\";\n//types\nimport { CategoryType } from \"../../redux/types/category.type\";\n//request\nimport {\n  GET_CATEGORIES,\n  DISABLE_CATEGORIES,\n  ACTIVATE_CATEGORIES,\n  DELETE_CATEGORIES\n} from \"../../redux/requests/category.request\";\n\ntype Props = {};\n\nconst CategoryPage: React.FC<Props> = (props) => {\n  const [GetCategories, getResponse] = useLazyQuery(GET_CATEGORIES);\n  const [DisableCategories, disableResponse] = useMutation(DISABLE_CATEGORIES);\n  const [ActivateCategories, activateResponse] = useMutation(ACTIVATE_CATEGORIES);\n  const [DeleteCategories, deleteResponse] = useMutation(DELETE_CATEGORIES);\n  const [categories, setCategories] = useState<CategoryType[]>([]);\n  //pagination\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  //deep search\n  const [deepSearch, setDeepSearch] = useState<string>('');\n  //side effects\n  const [unSelect, setUnSelect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getCategories;\n      setCategories(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data])\n\n  useEffect(() => {\n    (async function() {\n      await getCategories(currentPage, rowCount, deepSearch)\n    })()\n  }, [])\n\n  async function getCategories(pg: number, rc: number, kw: string): Promise<void> {\n    try {\n      await GetCategories({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw\n          }\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber)\n    await getCategories(pageNumber, rowCount, deepSearch);\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getCategories(currentPage, rc, deepSearch);\n  }\n\n  async function getDeepSearchFromTable(kw: string): Promise<void> {\n    setDeepSearch(kw);\n    await getCategories(currentPage, rowCount, kw);\n  }\n\n  async function getIdsAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableCategories({\n        variables: {\n          disabledCategories: { ids }\n        }\n      })\n      handleCategoriesState(ids, true)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdsAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateCategories({\n        variables: {\n          activateCategories: { ids }\n        }\n      })\n      handleCategoriesState(ids, false)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdsAndDelete(ids: string[]): Promise<void> {\n    try {\n      await DeleteCategories({\n        variables: {\n          deleteCategories: { ids }\n        }\n      })\n      handleCategoriesList(ids)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  function handleCategoriesState(ids: string[], isDisabled: boolean) {\n    const updatedCategories = categories.map(cat => {\n      if (ids.includes(cat.id!)) {\n        return {\n          ...cat,\n          isDisabled\n        }\n      }\n      return cat;\n    })\n    setCategories(updatedCategories)\n  }\n\n  function handleCategoriesList(ids: string[]) {\n    const deletedCategories = categories.filter(category => !ids.includes(category.id!))\n    setCategories(deletedCategories)\n    setUnSelect(true);\n  }\n\n  return (\n    <Layout>\n      <h2 className=\"font-medium uppercase mx-4\">\n        Categories\n      </h2>\n      {/*  table */}\n      <Table\n        data={categories}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdsAndDisable={getIdsAndDisable}\n        getIdsAndActivate={getIdsAndActivate}\n        getIdsAndDelete={getIdsAndDelete}\n        path=\"categories\"\n        error={!!getResponse.error}\n        exclude={['id']}\n        unSelect={unSelect}\n      />\n      <NotificationBox\n        list={[\n          getResponse,\n          activateResponse,\n          disableResponse,\n          deleteResponse\n        ]}\n      />\n    </Layout>\n  );\n};\n\nexport default CategoryPage;\n","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\User\\User.page.tsx",["251"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Table from \"../../components/common/table/Table\";\nimport NotificationBox from \"../../components/common/notificationBox\";\n//types\nimport { ProductType } from \"../../redux/types/product.type\";\n//request\nimport {\n  GET_USERS,\n  DISABLE_USERS,\n  ACTIVATE_USERS,\n  DELETE_USERS\n} from \"../../redux/requests/user.request\";\n\ntype Props = {};\n\nconst UserPage: React.FC<Props> = (props) => {\n  const [GetUsers, getResponse] = useLazyQuery(GET_USERS);\n  const [DisableUsers, disableResponse] = useMutation(DISABLE_USERS);\n  const [ActivateUsers, activateResponse] = useMutation(ACTIVATE_USERS);\n  const [DeleteUsers, deleteResponse] = useMutation(DELETE_USERS);\n  const [users, setUsers] = useState<ProductType[]>([]);\n  //pagination\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  //deep search\n  const [deepSearch, setDeepSearch] = useState<string>('');\n  //side effects\n  const [unSelect, setUnSelect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getUsers;\n      setUsers(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data])\n\n  useEffect(() => {\n    (async function() {\n      await getUsers(currentPage, rowCount, deepSearch)\n    })()\n  }, [])\n\n  async function getUsers(pg: number, rc: number, kw: string): Promise<void> {\n    try {\n      await GetUsers({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw\n          }\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber)\n    await getUsers(pageNumber, rowCount, deepSearch);\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getUsers(currentPage, rc, deepSearch);\n  }\n\n  async function getDeepSearchFromTable(keyword: string): Promise<void> {\n    setDeepSearch(keyword);\n    await getUsers(currentPage, rowCount, keyword);\n  }\n\n  async function getIdAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableUsers({\n        variables: {\n          disabledUsers: { ids }\n        }\n      })\n      handleUsersState(ids, true)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateUsers({\n        variables: {\n          activateUsers: { ids }\n        }\n      })\n      handleUsersState(ids, false)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdsToDelete(ids: string[]): Promise<void> {\n    try {\n      await DeleteUsers({\n        variables: {\n          deleteUsers: { ids }\n        }\n      })\n      handleUsersList(ids)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  function handleUsersState(ids: string[], isDisabled: boolean) {\n    const updatedUsers = users.map(product => {\n      if (ids.includes(product.id)) {\n        return {\n          ...product,\n          isDisabled\n        }\n      }\n      return product;\n    })\n    setUsers(updatedUsers)\n  }\n\n  function handleUsersList(ids: string[]) {\n    const deletedUsers = users.filter(user => !ids.includes(user.id))\n    setUsers(deletedUsers)\n    setUnSelect(true);\n  }\n\n  return (\n    <Layout>\n      <h2 className=\"font-medium uppercase mx-4\">\n        Users and roles\n      </h2>\n      {/*  table */}\n      <Table\n        data={users}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdAndDisable={getIdAndDisable}\n        getIdAndActivate={getIdAndActivate}\n        getIdsToDelete={getIdsToDelete}\n        exclude={['id']}\n        error={!!getResponse.error}\n        path=\"users\"\n        unSelect={unSelect}\n      />\n      <NotificationBox\n        list={[\n          getResponse,\n          activateResponse,\n          disableResponse,\n          deleteResponse\n        ]}\n      />\n    </Layout>\n  );\n};\n\nexport default UserPage;\n",["252","253"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\App.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\notificationBox\\ErrorBox.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\User\\CreateUser.page.tsx",["254","255"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\utils\\token.utils.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\notificationBox\\index.tsx",["256","257"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\table\\FakeTable.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Login.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\reportWebVitals.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\utils\\user.utils.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Header.tsx",["258"],"import React, { memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MdExitToApp } from 'react-icons/md';\nimport { useHistory } from 'react-router-dom';\nimport { useLazyQuery } from \"@apollo/client\";\n//types\nimport { RootState } from \"../../redux/store\";\n//actions\nimport { removeToken } from '../../redux/slices/auth-credentials.slice';\nimport { removeUser } from '../../redux/slices/user.slice';\n//request\nimport { LOGOUT_USER } from \"../../redux/requests/user.request\";\n\ntype Props = {};\n\nconst Header: React.FC<Props> = memo((props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { user, authCredentials } = useSelector((state: RootState) => state);\n  const [Logout, logoutResponse] = useLazyQuery(LOGOUT_USER);\n\n  async function _onLogout(): Promise<void> {\n    try {\n      await Logout({\n        variables: {\n          clientId: authCredentials.clientId\n        }\n      });\n      dispatch(removeToken())\n      dispatch(removeUser())\n    } catch(err) {\n      console.log('Logout error => ', err.message)\n    }\n  }\n\n  const path = history.location.pathname;\n\n  return (\n    <div\n      className=\"h-20 px-9 py-2.5 bg-gray-200 border-b-4 border-gray-300 flex\n      justify-between items-center\"\n    >\n      <div>\n        <span className=\"font-medium\">path: {path}</span>\n      </div>\n      <div className=\"flex items-center\">\n        <span className=\"font-medium\">{user.email}</span>\n        <MdExitToApp\n          size={32}\n          color=\"black\"\n          className=\"ml-2 cursor-pointer transition-all hover:opacity-40\"\n          onClick={_onLogout}\n        />\n      </div>\n    </div>\n  );\n}, () => {\n  return true;\n});\n\nHeader.defaultProps = {};\n\nexport default Header;\n","C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\notificationBox\\WarningBox.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\SubCategories.tsx",["259"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\category.request.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\table\\body.handler..ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Select.tsx",["260"],"import React, { memo, useEffect, useState } from 'react';\nimport Select from 'react-select';\n//types\nimport { OptionType } from \"../../redux/types/common.type\";\n\n// styles\nconst mainColor = 'rgba(59, 130, 246, 0.8)';\nconst mainColorHover = 'rgba(59, 130, 246, 0.2)';\nconst borderColor = 'rgba(229, 231, 235, 1)';\n\nconst customStyles = {\n  control: (provided: any, state: any) => ({\n    ...provided,\n    padding: '6px 0',\n    outline: '2px solid transparent',\n    outlineOffset: '2px',\n    fontSize: '1rem',\n    lineHeight: '1.5rem',\n    boxShadow: 'none',\n    borderLeftWidth: '0',\n    borderTopWidth: '0',\n    borderRightWidth: '4px',\n    borderBottomWidth: '2px',\n    borderColor: state.isFocused ? mainColor : borderColor,\n    borderRadius: '0.375rem',\n    cursor: 'pointer',\n\n    '&:hover': {\n      borderColor: state.isFocused ? mainColor : borderColor,\n    }\n  }),\n  option: (provided: any, state: any) => ({\n    ...provided,\n    backgroundColor: state.isSelected ? mainColor : 'white',\n    cursor: 'pointer',\n\n    '&:hover': {\n      backgroundColor: state.isSelected ? mainColor : mainColorHover,\n    }\n  }),\n}\n\ntype Props = {\n  type?: string\n  label?: string\n  name: string\n  returnType?: 'string' | 'boolean' | 'number'\n  value: any\n  cls?: string\n  options: OptionType[]\n  getValue: (val: any, action?: string) => void\n  [key: string]: any\n};\n\nconst Selectable: React.FC<Props> = memo(({\n  type,\n  label,\n  name,\n  value,\n  cls,\n  options,\n  getValue,\n  ...rest\n}) => {\n  const [innerState, setInnerState] = useState<OptionType>({\n    id: '',\n    name: ''\n  });\n\n  useEffect(() => {\n    if (typeof value === \"string\") {\n      const initialValue = options.find(opt => opt.id === value)!\n      setInnerState(initialValue)\n    } else {\n      setInnerState(value);\n    }\n  }, [value])\n\n  function _onChange(selectedOption: any, { action }: any): void {\n    try {\n      if (action === \"remove-value\") {\n        const options = selectedOption || [{ id: 'guest', name: 'guest' }];\n        const restAfterRemoving = options.map((s: OptionType) => s.id);\n        getValue(restAfterRemoving, action);\n      }\n      if (rest.isMulti) {\n        const options = selectedOption || [];\n        const multiple = options.map((s: OptionType) => s.id);\n        getValue(multiple)\n      } else {\n        getValue(selectedOption.id)\n      }\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <label htmlFor={type + name} className={`flex flex-col flex-1 ${cls}`}>\n      <span>{label}</span>\n      <Select\n        id={name}\n        name={name}\n        value={innerState}\n        getOptionLabel={(option: any) => option.name}\n        getOptionValue={(option: any) => option.id}\n        onChange={_onChange}\n        options={options}\n        styles={customStyles}\n        {...rest}\n      />\n    </label>\n  );\n}, (prevProps, nextProps) => {\n  return prevProps.value === nextProps.value && prevProps.options.length === nextProps.options.length;\n});\n\nSelectable.defaultProps = {\n  type: 'text',\n  label: 'Label',\n  name: 'selectable',\n  returnType: 'string',\n  cls: 'm-4',\n  options: [{ id: '', name: 'No options' }],\n  value: '',\n};\n\nexport default Selectable;\n",["261","262"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\user.request.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\user.slice.ts",[],["263","264"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\auth-credentials.slice.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\StatisticCard.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Rest\\NotFound.page.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Checkbox.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\LoadingCard.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\notificationBox\\ProcessBox.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\table\\LoadingBox.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\SystemUsage.tsx",["265"],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Layout.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Button.tsx",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\hooks\\useInterval.ts",[],"C:\\Users\\miral\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Input.tsx",[],{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"266","replacedBy":"270"},{"ruleId":"268","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":52,"column":6,"nodeType":"274","endLine":52,"endColumn":8,"suggestions":"275"},{"ruleId":"272","severity":1,"message":"276","line":60,"column":6,"nodeType":"274","endLine":60,"endColumn":8,"suggestions":"277"},{"ruleId":"272","severity":1,"message":"278","line":81,"column":6,"nodeType":"274","endLine":81,"endColumn":22,"suggestions":"279"},{"ruleId":"272","severity":1,"message":"278","line":88,"column":6,"nodeType":"274","endLine":88,"endColumn":22,"suggestions":"280"},{"ruleId":"266","replacedBy":"281"},{"ruleId":"268","replacedBy":"282"},{"ruleId":"272","severity":1,"message":"283","line":47,"column":6,"nodeType":"274","endLine":47,"endColumn":8,"suggestions":"284"},{"ruleId":"266","replacedBy":"285"},{"ruleId":"268","replacedBy":"286"},{"ruleId":"266","replacedBy":"287"},{"ruleId":"268","replacedBy":"288"},{"ruleId":"266","replacedBy":"289"},{"ruleId":"268","replacedBy":"290"},{"ruleId":"291","severity":1,"message":"292","line":1,"column":16,"nodeType":"293","messageId":"294","endLine":1,"endColumn":24},{"ruleId":"272","severity":1,"message":"276","line":38,"column":6,"nodeType":"274","endLine":38,"endColumn":8,"suggestions":"295"},{"ruleId":"272","severity":1,"message":"278","line":44,"column":6,"nodeType":"274","endLine":44,"endColumn":22,"suggestions":"296"},{"ruleId":"272","severity":1,"message":"278","line":50,"column":6,"nodeType":"274","endLine":50,"endColumn":22,"suggestions":"297"},{"ruleId":"291","severity":1,"message":"298","line":16,"column":9,"nodeType":"293","messageId":"294","endLine":16,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":41,"column":44,"nodeType":"301","messageId":"302","endLine":41,"endColumn":46},{"ruleId":"272","severity":1,"message":"303","line":38,"column":6,"nodeType":"274","endLine":38,"endColumn":13,"suggestions":"304"},{"ruleId":"272","severity":1,"message":"305","line":46,"column":6,"nodeType":"274","endLine":46,"endColumn":8,"suggestions":"306"},{"ruleId":"272","severity":1,"message":"307","line":46,"column":6,"nodeType":"274","endLine":46,"endColumn":8,"suggestions":"308"},{"ruleId":"266","replacedBy":"309"},{"ruleId":"268","replacedBy":"310"},{"ruleId":"272","severity":1,"message":"311","line":46,"column":6,"nodeType":"274","endLine":46,"endColumn":8,"suggestions":"312"},{"ruleId":"272","severity":1,"message":"278","line":52,"column":6,"nodeType":"274","endLine":52,"endColumn":22,"suggestions":"313"},{"ruleId":"291","severity":1,"message":"314","line":4,"column":8,"nodeType":"293","messageId":"294","endLine":4,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":16,"column":38,"nodeType":"301","messageId":"302","endLine":16,"endColumn":40},{"ruleId":"291","severity":1,"message":"315","line":20,"column":18,"nodeType":"293","messageId":"294","endLine":20,"endColumn":32},{"ruleId":"291","severity":1,"message":"316","line":1,"column":43,"nodeType":"293","messageId":"294","endLine":1,"endColumn":49},{"ruleId":"272","severity":1,"message":"317","line":77,"column":6,"nodeType":"274","endLine":77,"endColumn":13,"suggestions":"318"},{"ruleId":"266","replacedBy":"319"},{"ruleId":"268","replacedBy":"320"},{"ruleId":"266","replacedBy":"321"},{"ruleId":"268","replacedBy":"322"},{"ruleId":"272","severity":1,"message":"323","line":26,"column":6,"nodeType":"274","endLine":26,"endColumn":14,"suggestions":"324"},"no-native-reassign",["325"],"no-negated-in-lhs",["326"],["325"],["326"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["327"],"React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.",["328"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["329"],["330"],["325"],["326"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getProducts', and 'rowCount'. Either include them or remove the dependency array.",["331"],["325"],["326"],["325"],["326"],["325"],["326"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["332"],["333"],["334"],"'isTokenExpired' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'multiple'. Either include it or remove the dependency array.",["335"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getCategories', and 'rowCount'. Either include them or remove the dependency array.",["336"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getUsers', and 'rowCount'. Either include them or remove the dependency array.",["337"],["325"],["326"],"React Hook useEffect has a missing dependency: 'location.state?.selected'. Either include it or remove the dependency array.",["338"],["339"],"'ProcessBox' is defined but never used.","'logoutResponse' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["340"],["325"],["326"],["325"],["326"],"React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["341"],"no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"344","fix":"352"},{"desc":"346","fix":"353"},{"desc":"348","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"348","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},"Update the dependencies array to be: [getCategories]",{"range":"368","text":"369"},"Update the dependencies array to be: [history.location.state]",{"range":"370","text":"371"},"Update the dependencies array to be: [createResponse, history]",{"range":"372","text":"373"},"Update the dependencies array to be: [history, updateResponse]",{"range":"374","text":"375"},"Update the dependencies array to be: [currentPage, deepSearch, getProducts, rowCount]",{"range":"376","text":"377"},{"range":"378","text":"371"},{"range":"379","text":"373"},{"range":"380","text":"375"},"Update the dependencies array to be: [multiple, value]",{"range":"381","text":"382"},"Update the dependencies array to be: [currentPage, deepSearch, getCategories, rowCount]",{"range":"383","text":"384"},"Update the dependencies array to be: [currentPage, deepSearch, getUsers, rowCount]",{"range":"385","text":"386"},"Update the dependencies array to be: [location.state?.selected]",{"range":"387","text":"388"},{"range":"389","text":"375"},"Update the dependencies array to be: [options, value]",{"range":"390","text":"391"},"Update the dependencies array to be: []",{"range":"392","text":"393"},[1845,1847],"[getCategories]",[2020,2022],"[history.location.state]",[2552,2568],"[createResponse, history]",[2703,2719],"[history, updateResponse]",[1624,1626],"[currentPage, deepSearch, getProducts, rowCount]",[1311,1313],[1413,1429],[1528,1544],[1000,1007],"[multiple, value]",[1636,1638],"[currentPage, deepSearch, getCategories, rowCount]",[1540,1542],"[currentPage, deepSearch, getUsers, rowCount]",[1446,1448],"[location.state?.selected]",[1543,1559],[1782,1789],"[options, value]",[703,711],"[]"]