[{"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Table.tsx":"1","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\UploadZone.tsx":"2","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\index.tsx":"3","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\token.slice.ts":"4","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\user.slice.ts":"5","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\App.tsx":"6","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\utils\\storage.utils.ts":"7","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithToken.tsx":"8","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithoutToken.tsx":"9","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Auth.page.tsx":"10","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\Main.page.tsx":"11","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\Category.page.tsx":"12","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\CreateCategory.page.tsx":"13","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\Product.page.tsx":"14","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\CreateProduct.page.tsx":"15","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\category.request.ts":"16","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Login.tsx":"17","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Register.tsx":"18","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Layout.tsx":"19","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ProcessBox.tsx":"20","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ErrorBox.tsx":"21","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Input.tsx":"22","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Button.tsx":"23","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\product.request.ts":"24","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Divider.tsx":"25","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Header.tsx":"26","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\LoadingBox.tsx":"27","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\FakeTable.tsx":"28","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\utils\\cloudinary.utils.ts":"29","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\store.ts":"30","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Select.tsx":"31","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\TextEditor.tsx":"32","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\reportWebVitals.ts":"33","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\SideMenu.tsx":"34","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\user.request.ts":"35","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ColorPicker.tsx":"36"},{"size":7650,"mtime":1610280224117,"results":"37","hashOfConfig":"38"},{"size":5569,"mtime":1610470913924,"results":"39","hashOfConfig":"38"},{"size":1067,"mtime":1610206103430,"results":"40","hashOfConfig":"38"},{"size":719,"mtime":1610192229425,"results":"41","hashOfConfig":"38"},{"size":764,"mtime":1610192229443,"results":"42","hashOfConfig":"38"},{"size":1613,"mtime":1609684787074,"results":"43","hashOfConfig":"38"},{"size":966,"mtime":1609076891545,"results":"44","hashOfConfig":"38"},{"size":591,"mtime":1610192229422,"results":"45","hashOfConfig":"38"},{"size":594,"mtime":1610192229422,"results":"46","hashOfConfig":"38"},{"size":989,"mtime":1609273707928,"results":"47","hashOfConfig":"38"},{"size":297,"mtime":1609273707950,"results":"48","hashOfConfig":"38"},{"size":4295,"mtime":1610122644154,"results":"49","hashOfConfig":"38"},{"size":3557,"mtime":1609500439671,"results":"50","hashOfConfig":"38"},{"size":4339,"mtime":1610122644155,"results":"51","hashOfConfig":"38"},{"size":6745,"mtime":1610472003861,"results":"52","hashOfConfig":"38"},{"size":1214,"mtime":1610192229424,"results":"53","hashOfConfig":"38"},{"size":2178,"mtime":1609668555771,"results":"54","hashOfConfig":"38"},{"size":2173,"mtime":1609273707931,"results":"55","hashOfConfig":"38"},{"size":606,"mtime":1610266473130,"results":"56","hashOfConfig":"38"},{"size":547,"mtime":1610192229418,"results":"57","hashOfConfig":"38"},{"size":393,"mtime":1610192229415,"results":"58","hashOfConfig":"38"},{"size":1060,"mtime":1610192229417,"results":"59","hashOfConfig":"38"},{"size":809,"mtime":1610192229410,"results":"60","hashOfConfig":"38"},{"size":1896,"mtime":1610192229424,"results":"61","hashOfConfig":"38"},{"size":463,"mtime":1610192229414,"results":"62","hashOfConfig":"38"},{"size":1321,"mtime":1610192229416,"results":"63","hashOfConfig":"38"},{"size":544,"mtime":1610192229418,"results":"64","hashOfConfig":"38"},{"size":672,"mtime":1610192229415,"results":"65","hashOfConfig":"38"},{"size":785,"mtime":1610205706191,"results":"66","hashOfConfig":"38"},{"size":590,"mtime":1610192229443,"results":"67","hashOfConfig":"38"},{"size":1720,"mtime":1610282114837,"results":"68","hashOfConfig":"38"},{"size":1343,"mtime":1610282106225,"results":"69","hashOfConfig":"38"},{"size":440,"mtime":1609063555517,"results":"70","hashOfConfig":"38"},{"size":1719,"mtime":1610266398280,"results":"71","hashOfConfig":"38"},{"size":335,"mtime":1610192229425,"results":"72","hashOfConfig":"38"},{"size":1248,"mtime":1610472639499,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"ivx92o",{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Table.tsx",[],["153","154"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\UploadZone.tsx",["155"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\index.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\token.slice.ts",[],["156","157"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\slices\\user.slice.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\App.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\utils\\storage.utils.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithToken.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\WithoutToken.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Auth.page.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Main\\Main.page.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\Category.page.tsx",["158"],"import React, {useEffect, useState} from 'react';\r\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\r\n//components\r\nimport Layout from \"../../components/common/Layout\";\r\nimport Table from \"../../components/common/Table\";\r\nimport ProcessBox from \"../../components/common/ProcessBox\";\r\nimport ErrorBox from \"../../components/common/ErrorBox\";\r\n//types\r\nimport { CategoryType } from \"../../redux/types/category.type\";\r\n//request\r\nimport {\r\n  GET_CATEGORIES,\r\n  DISABLE_CATEGORIES,\r\n  ACTIVATE_CATEGORIES\r\n} from \"../../redux/requests/category.request\";\r\n\r\ntype Props = {};\r\n\r\nconst CategoryPage: React.FC<Props> = (props) => {\r\n  const [GetCategories, getResponse] = useLazyQuery(GET_CATEGORIES);\r\n  const [DisableCategories, disableResponse] = useMutation(DISABLE_CATEGORIES);\r\n  const [ActivateCategories, activateResponse] = useMutation(ACTIVATE_CATEGORIES);\r\n  const [categories, setCategories] = useState<CategoryType[]>([]);\r\n  //pagination\r\n  const [allCount, setAllCount] = useState<number>(0);\r\n  const [rowCount, setRowCount] = useState<number>(10);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  //deep search\r\n  const [deepSearch, setDeepSearch] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (getResponse.data) {\r\n      const { count, payload } = getResponse.data.getCategories;\r\n      setCategories(payload);\r\n      setAllCount(count);\r\n    }\r\n  }, [getResponse.data])\r\n\r\n  useEffect(() => {\r\n    (async function() {\r\n      await getCategories(currentPage, rowCount, deepSearch)\r\n    })()\r\n  }, [])\r\n\r\n  async function getCategories(pg: number, rc: number, kw: string): Promise<void> {\r\n    try {\r\n      await GetCategories({\r\n        variables: {\r\n          controls: {\r\n            offset: (pg - 1) * rc,\r\n            limit: rc,\r\n            keyword: kw\r\n          }\r\n        }\r\n      })\r\n    } catch(err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  async function getPageFromTable(pageNumber: number): Promise<void> {\r\n    setCurrentPage(pageNumber)\r\n    await getCategories(pageNumber, rowCount, deepSearch);\r\n  }\r\n\r\n  async function getRowCountFromTable(rc: number): Promise<void> {\r\n    setRowCount(rc);\r\n    await getCategories(currentPage, rc, deepSearch);\r\n  }\r\n\r\n  async function getDeepSearchFromTable(kw: string): Promise<void> {\r\n    setDeepSearch(kw);\r\n    await getCategories(currentPage, rowCount, kw);\r\n  }\r\n\r\n  async function getIdAndDisable(ids: string[]): Promise<void> {\r\n    try {\r\n      await DisableCategories({\r\n        variables: {\r\n          disabledCategories: { ids }\r\n        }\r\n      })\r\n      handleCategoriesState(ids, true)\r\n    } catch(err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  async function getIdAndActivate(ids: string[]): Promise<void> {\r\n    try {\r\n      await ActivateCategories({\r\n        variables: {\r\n          activateCategories: { ids }\r\n        }\r\n      })\r\n      handleCategoriesState(ids, false)\r\n    } catch(err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  function handleCategoriesState(ids: string[], isDisabled: boolean) {\r\n    const updatedCategories = categories.map(cat => {\r\n      if (ids.includes(cat.id)) {\r\n        return {\r\n          ...cat,\r\n          isDisabled\r\n        }\r\n      }\r\n      return cat;\r\n    })\r\n    setCategories(updatedCategories)\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <h2 className=\"font-medium uppercase mx-4\">\r\n        Categories\r\n      </h2>\r\n      {/*  table */}\r\n      <Table\r\n        data={categories}\r\n        allCount={allCount}\r\n        getPage={getPageFromTable}\r\n        getRowCount={getRowCountFromTable}\r\n        getDeepSearch={getDeepSearchFromTable}\r\n        getIdAndDisable={getIdAndDisable}\r\n        getIdAndActivate={getIdAndActivate}\r\n        path=\"category\"\r\n        error={!!getResponse.error}\r\n      />\r\n      { getResponse.loading ? <ProcessBox /> : null }\r\n      { getResponse.error ? <ErrorBox message={getResponse.error.message} /> : null }\r\n\r\n      { activateResponse.loading ? <ProcessBox /> : null }\r\n      { activateResponse.error ? <ErrorBox message={activateResponse.error.message} /> : null }\r\n\r\n      { disableResponse.loading ? <ProcessBox /> : null }\r\n      { disableResponse.error ? <ErrorBox message={disableResponse.error.message} /> : null }\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CategoryPage;\r\n","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Category\\CreateCategory.page.tsx",["159","160","161"],"import React, {useEffect, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from \"@apollo/client\";\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Input from \"../../components/common/Input\";\nimport Button from \"../../components/common/Button\";\nimport ProcessBox from \"../../components/common/ProcessBox\";\nimport ErrorBox from \"../../components/common/ErrorBox\";\n//types\nimport { CategoryType } from \"../../redux/types/category.type\";\n//request\nimport { CREATE_CATEGORY, UPDATE_CATEGORY } from \"../../redux/requests/category.request\";\n\nconst initialState = {\n  name: '',\n  tabName: '',\n}\n\ntype Props = {}\n\nconst CreateCategory: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const [CreateCategory, createResponse] = useMutation(CREATE_CATEGORY);\n  const [UpdateCategory, updateResponse] = useMutation(UPDATE_CATEGORY);\n  const [state, setState] = useState<Partial<CategoryType>>(initialState);\n  const [mode, setMode] = useState<string>('create');\n\n  useEffect(() => {\n    const { mode, selected }: any = history.location.state;\n    if (mode === \"update\") {\n      setState(selected[0]);\n      setMode(mode);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push(\"/category\")\n    }\n  }, [createResponse])\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push(\"/category\")\n    }\n  }, [updateResponse])\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateCategory({\n        variables: {\n          newCategory: state\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateCategory({\n        variables: {\n          updatedCategory: state\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  return (\n    <Layout>\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"font-medium uppercase mx-4\">\n          Create category\n        </h2>\n        <h2\n          onClick={() => history.goBack()}\n          className=\"font-medium uppercase mx-4 cursor-pointer hover:opacity-75\"\n        >\n          Go Back\n        </h2>\n      </div>\n      <div className=\"flex items-center\">\n        <Input\n          type=\"text\"\n          label=\"Name\"\n          value={state.name}\n          getValue={(val: string) => setState({...state, name: val})}\n        />\n        <Input\n          type=\"text\"\n          label=\"Tab Name\"\n          value={state.tabName}\n          getValue={(val: string) => setState({...state, tabName: val})}\n        />\n      </div>\n      <div className=\"flex items-center mx-4 py-3\">\n        {\n          mode === \"create\" ? (\n            <Button\n              label=\"Create\"\n              onAction={_onSave}\n              cls=\"m-0 mr-3\"\n            />\n          ) : (\n            <Button\n              label=\"Update\"\n              onAction={_onUpdate}\n              cls=\"m-0 mr-3\"\n            />\n          )\n        }\n        <Button\n          label=\"Reset fields\"\n          onAction={() => setState(initialState)}\n          cls=\"m-0 mr-3\"\n        />\n      </div>\n      { createResponse.loading ? <ProcessBox /> : null }\n      { createResponse.error ? <ErrorBox message={createResponse.error.message} /> : null }\n\n      { updateResponse.loading ? <ProcessBox /> : null }\n      { updateResponse.error ? <ErrorBox message={updateResponse.error.message} /> : null }\n    </Layout>\n  );\n}\n\nCreateCategory.defaultProps = {}\n\nexport default CreateCategory;\n","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\Product.page.tsx",["162"],"import React, { useEffect, useState } from 'react';\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\n//components\r\nimport Layout from \"@components/Layout\";\r\nimport Table from \"@components/Table\";\r\nimport ProcessBox from \"@components/ProcessBox\";\r\nimport ErrorBox from \"@components/ErrorBox\";\r\n//types\r\nimport { ProductType } from \"@redux/types/product.type\";\r\n//request\r\nimport {\r\n  GET_PRODUCTS,\r\n  DISABLE_PRODUCTS,\r\n  ACTIVATE_PRODUCTS\r\n} from \"@redux/requests/product.request\";\r\n\r\ntype Props = {};\r\n\r\nconst ProductPage: React.FC<Props> = (props) => {\r\n  const [GetProducts, getResponse] = useLazyQuery(GET_PRODUCTS);\r\n  const [DisableProducts, disableResponse] = useMutation(DISABLE_PRODUCTS);\r\n  const [ActivateProducts, activateResponse] = useMutation(ACTIVATE_PRODUCTS);\r\n  const [products, setProducts] = useState<ProductType[]>([]);\r\n  //pagination\r\n  const [allCount, setAllCount] = useState<number>(0);\r\n  const [rowCount, setRowCount] = useState<number>(10);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  //deep search\r\n  const [deepSearch, setDeepSearch] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (getResponse.data) {\r\n      const { count, payload } = getResponse.data.getProducts;\r\n      console.log(payload)\r\n      setProducts(payload);\r\n      setAllCount(count);\r\n    }\r\n  }, [getResponse.data])\r\n\r\n  useEffect(() => {\r\n    (async function() {\r\n      await getProducts(currentPage, rowCount, deepSearch)\r\n    })()\r\n  }, [])\r\n\r\n  async function getProducts(pg: number, rc: number, kw: string): Promise<void> {\r\n    try {\r\n      await GetProducts({\r\n        variables: {\r\n          controls: {\r\n            offset: (pg - 1) * rc,\r\n            limit: rc,\r\n            keyword: kw\r\n          }\r\n        }\r\n      })\r\n    } catch(err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  async function getPageFromTable(pageNumber: number): Promise<void> {\r\n    setCurrentPage(pageNumber)\r\n    await getProducts(pageNumber, rowCount, deepSearch);\r\n  }\r\n\r\n  async function getRowCountFromTable(rc: number): Promise<void> {\r\n    setRowCount(rc);\r\n    await getProducts(currentPage, rc, deepSearch);\r\n  }\r\n\r\n  async function getDeepSearchFromTable(keyword: string): Promise<void> {\r\n    setDeepSearch(keyword);\r\n    await getProducts(currentPage, rowCount, keyword);\r\n  }\r\n\r\n  async function getIdAndDisable(ids: string[]): Promise<void> {\r\n    try {\r\n      await DisableProducts({\r\n        variables: {\r\n          disabledProducts: { ids }\r\n        }\r\n      })\r\n      handleProductsState(ids, true)\r\n    } catch(err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  async function getIdAndActivate(ids: string[]): Promise<void> {\r\n    try {\r\n      await ActivateProducts({\r\n        variables: {\r\n          activateProducts: { ids }\r\n        }\r\n      })\r\n      handleProductsState(ids, false)\r\n    } catch(err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  function handleProductsState(ids: string[], isDisabled: boolean) {\r\n    const updatedProducts = products.map(product => {\r\n      if (ids.includes(product.id)) {\r\n        return {\r\n          ...product,\r\n          isDisabled\r\n        }\r\n      }\r\n      return product;\r\n    })\r\n    setProducts(updatedProducts)\r\n  }\r\n\r\n  console.log(getResponse.loading)\r\n\r\n  return (\r\n    <Layout>\r\n      <h2 className=\"font-medium uppercase mx-4\">\r\n        Products\r\n      </h2>\r\n      {/*  table */}\r\n      <Table\r\n        data={products}\r\n        allCount={allCount}\r\n        getPage={getPageFromTable}\r\n        getRowCount={getRowCountFromTable}\r\n        getDeepSearch={getDeepSearchFromTable}\r\n        getIdAndDisable={getIdAndDisable}\r\n        getIdAndActivate={getIdAndActivate}\r\n        path=\"product\"\r\n        exclude={['id', 'category', 'cover', 'description', 'images']}\r\n        error={!!getResponse.error}\r\n      />\r\n      { getResponse.loading ? <ProcessBox /> : null }\r\n      { getResponse.error ? <ErrorBox message={getResponse.error.message} /> : null }\r\n\r\n      { activateResponse.loading ? <ProcessBox /> : null }\r\n      { activateResponse.error ? <ErrorBox message={activateResponse.error.message} /> : null }\r\n\r\n      { disableResponse.loading ? <ProcessBox /> : null }\r\n      { disableResponse.error ? <ErrorBox message={disableResponse.error.message} /> : null }\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Product\\CreateProduct.page.tsx",["163","164","165","166"],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\category.request.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Login.tsx",["167"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\n//components\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport Divider from '../../components/common/Divider';\nimport ErrorBox from '../../components/common/ErrorBox';\nimport ProcessBox from \"../../components/common/ProcessBox\";\n//requests\nimport {LOGIN_USER} from \"../../redux/requests/user.request\";\n//actions\nimport { saveToken } from '../../redux/slices/token.slice';\nimport { saveUser } from '../../redux/slices/user.slice';\n\ntype userData = {\n  email: string\n  password: string\n};\n\ntype Props = {};\n\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nconst Login: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const [CreateUser, { data, loading, error }] = useMutation(LOGIN_USER);\n  const [state, setState] = useState<userData>(initialState);\n\n  async function _onClick(): Promise<void> {\n    try {\n      const payload = await CreateUser({\n        variables: {\n          user: state\n        }\n      });\n      const { accessToken } = payload.data.loginUser;\n      dispatch(saveToken(accessToken));\n      dispatch(saveUser());\n    } catch(err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <div\n      className=\"w-full h-full border border-blue-400 border-r-4 rounded-md w-1/4 bg-gray-100\n        relative z-10\"\n    >\n      <header className=\"p-4 bg-blue-400\">\n        <h3 className=\"uppercase text-white font-bold\">\n          Authorization\n        </h3>\n      </header>\n      <Input\n        type=\"email\"\n        label=\"E-mail\"\n        value={state.email}\n        getValue={(val: string) => setState({ ...state, email: val })}\n      />\n      <Input\n        type=\"password\"\n        label=\"Password\"\n        value={state.password}\n        getValue={(val: string) => setState({ ...state, password: val })}\n      />\n      <Divider label=\"Action\" />\n      <Button label=\"ENTER\" onAction={_onClick} />\n      { loading ? <ProcessBox /> : null }\n      { error ? <ErrorBox message={error.message} /> : null }\n    </div>\n  );\n};\n\nexport default Login;\n","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\pages\\Auth\\Register.tsx",["168"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useDispatch } from 'react-redux';\n//components\nimport Input from '../../components/common/Input';\nimport Button from '../../components/common/Button';\nimport Divider from '../../components/common/Divider';\nimport ErrorBox from '../../components/common/ErrorBox';\nimport ProcessBox from \"../../components/common/ProcessBox\";\n//requests\nimport {CREATE_USER} from \"../../redux/requests/user.request\";\n//actions\nimport { saveToken } from '../../redux/slices/token.slice';\nimport { saveUser } from '../../redux/slices/user.slice';\n\ntype userData = {\n  email: string\n  password: string\n};\n\ntype Props = {};\n\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nconst Register: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const [CreateUser, { data, loading, error }] = useMutation(CREATE_USER);\n  const [state, setState] = useState<userData>(initialState);\n\n  async function _onClick(): Promise<void> {\n    try {\n      const payload = await CreateUser({\n        variables: {\n          newUser: state\n        }\n      });\n      const { accessToken } = payload.data.createUser;\n      dispatch(saveToken(accessToken))\n      dispatch(saveUser())\n    } catch(err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <div\n      className=\"w-full h-full border border-blue-400 border-r-4 rounded-md w-1/4 bg-gray-100\n        relative z-10\"\n    >\n      <header className=\"p-4 bg-blue-400\">\n        <h3 className=\"uppercase text-white font-bold\">Create an account</h3>\n      </header>\n      <Input\n        type=\"email\"\n        label=\"E-mail\"\n        value={state.email}\n        getValue={(val: string) => setState({ ...state, email: val })}\n      />\n      <Input\n        type=\"password\"\n        label=\"Password\"\n        value={state.password}\n        getValue={(val: string) => setState({ ...state, password: val })}\n      />\n      <Divider label=\"Action\" />\n      <Button label=\"SUBMIT\" onAction={_onClick} />\n      { loading ? <ProcessBox /> : null }\n      { error ? <ErrorBox message={error.message} /> : null }\n    </div>\n  );\n};\n\nexport default Register;\n","C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Layout.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ProcessBox.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ErrorBox.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Input.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Button.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\product.request.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Divider.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Header.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\LoadingBox.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\FakeTable.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\utils\\cloudinary.utils.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\store.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\Select.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\TextEditor.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\reportWebVitals.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\SideMenu.tsx",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\redux\\requests\\user.request.ts",[],"C:\\Users\\mirik\\WebstormProjects\\ecomm-dashboard\\src\\components\\common\\ColorPicker.tsx",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":38,"column":6,"nodeType":"175","endLine":38,"endColumn":13,"suggestions":"176"},{"ruleId":"169","replacedBy":"177"},{"ruleId":"171","replacedBy":"178"},{"ruleId":"173","severity":1,"message":"179","line":43,"column":6,"nodeType":"175","endLine":43,"endColumn":8,"suggestions":"180"},{"ruleId":"173","severity":1,"message":"181","line":35,"column":6,"nodeType":"175","endLine":35,"endColumn":8,"suggestions":"182"},{"ruleId":"173","severity":1,"message":"183","line":41,"column":6,"nodeType":"175","endLine":41,"endColumn":22,"suggestions":"184"},{"ruleId":"173","severity":1,"message":"183","line":47,"column":6,"nodeType":"175","endLine":47,"endColumn":22,"suggestions":"185"},{"ruleId":"173","severity":1,"message":"186","line":44,"column":6,"nodeType":"175","endLine":44,"endColumn":8,"suggestions":"187"},{"ruleId":"173","severity":1,"message":"188","line":52,"column":6,"nodeType":"175","endLine":52,"endColumn":8,"suggestions":"189"},{"ruleId":"173","severity":1,"message":"181","line":60,"column":6,"nodeType":"175","endLine":60,"endColumn":8,"suggestions":"190"},{"ruleId":"173","severity":1,"message":"183","line":74,"column":6,"nodeType":"175","endLine":74,"endColumn":22,"suggestions":"191"},{"ruleId":"173","severity":1,"message":"183","line":80,"column":6,"nodeType":"175","endLine":80,"endColumn":22,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":30,"column":24,"nodeType":"195","messageId":"196","endLine":30,"endColumn":28},{"ruleId":"193","severity":1,"message":"194","line":30,"column":24,"nodeType":"195","messageId":"196","endLine":30,"endColumn":28},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'multiple'. Either include it or remove the dependency array.","ArrayExpression",["199"],["197"],["198"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getCategories', and 'rowCount'. Either include them or remove the dependency array.",["200"],"React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.",["201"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["202"],["203"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getProducts', and 'rowCount'. Either include them or remove the dependency array.",["204"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["205"],["206"],["207"],["208"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"213","fix":"223"},{"desc":"215","fix":"224"},{"desc":"217","fix":"225"},"Update the dependencies array to be: [multiple, value]",{"range":"226","text":"227"},"Update the dependencies array to be: [currentPage, deepSearch, getCategories, rowCount]",{"range":"228","text":"229"},"Update the dependencies array to be: [history.location.state]",{"range":"230","text":"231"},"Update the dependencies array to be: [createResponse, history]",{"range":"232","text":"233"},"Update the dependencies array to be: [history, updateResponse]",{"range":"234","text":"235"},"Update the dependencies array to be: [currentPage, deepSearch, getProducts, rowCount]",{"range":"236","text":"237"},"Update the dependencies array to be: [getCategories]",{"range":"238","text":"239"},{"range":"240","text":"231"},{"range":"241","text":"233"},{"range":"242","text":"235"},[1000,1007],"[multiple, value]",[1540,1542],"[currentPage, deepSearch, getCategories, rowCount]",[1205,1207],"[history.location.state]",[1305,1321],"[createResponse, history]",[1418,1434],"[history, updateResponse]",[1481,1483],"[currentPage, deepSearch, getProducts, rowCount]",[1650,1652],"[getCategories]",[1825,1827],[2182,2198],[2294,2310]]