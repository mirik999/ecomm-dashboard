[{"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\index.tsx":"1","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\auth-credentials.slice.ts":"2","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Category\\Category.page.tsx":"3","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\requests\\product.request.ts":"4","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Input.tsx":"5","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Category\\SubCategories.tsx":"6","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Divider.tsx":"7","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\notificationBox\\ErrorBox.tsx":"8","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Category\\CreateCategory.page.tsx":"9","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\table\\Table.tsx":"10","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\table\\FakeTable.tsx":"11","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\requests\\brand.request.ts":"12","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Brand\\Brand.page.tsx":"13","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Brand\\CreateBrand.page.tsx":"14","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\requests\\main.request.ts":"15","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Main\\StatisticCard.tsx":"16","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Product\\CreateProduct.page.tsx":"17","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\table\\body.handler..ts":"18","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Product\\Product.page.tsx":"19","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Select.tsx":"20","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Brand\\Brands.tsx":"21","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\roles.slice.ts":"22","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\utils\\storage.utils.ts":"23","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\store.ts":"24","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\UploadZone.tsx":"25","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Product\\Products.tsx":"26","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\requests\\user.request.ts":"27","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\WithToken.tsx":"28","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\WithoutToken.tsx":"29","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Rest\\NotFound.page.tsx":"30","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Auth\\Auth.page.tsx":"31","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Main\\Main.page.tsx":"32","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\User\\User.page.tsx":"33","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\User\\CreateUser.page.tsx":"34","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\requests\\category.request.ts":"35","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Auth\\Login.tsx":"36","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\richTextEditor\\TinyEditor.tsx":"37","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Navigation.tsx":"38","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\nav.slice.ts":"39","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\hooks\\useInterval.ts":"40","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\notificationBox\\index.tsx":"41","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Main\\SystemUsage.tsx":"42","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Layout.tsx":"43","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Auth\\Register.tsx":"44","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\theme.slice.ts":"45","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\layout\\Flexbox.tsx":"46","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Auth\\styled-components.ts":"47","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Main\\LoadingCard.tsx":"48","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\table\\LoadingBox.tsx":"49","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\user.slice.ts":"50","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Button.tsx":"51","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\utils\\cloudinary.utils.ts":"52","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\App.tsx":"53","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\table\\Buttons.tsx":"54","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\net-status.slice.ts":"55","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\utils\\functions.utils.ts":"56","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\ColorPicker.tsx":"57","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Header.tsx":"58"},{"size":1102,"mtime":1615204789304,"results":"59","hashOfConfig":"60"},{"size":930,"mtime":1612900048934,"results":"61","hashOfConfig":"60"},{"size":4584,"mtime":1613326834751,"results":"62","hashOfConfig":"60"},{"size":1854,"mtime":1614628804645,"results":"63","hashOfConfig":"60"},{"size":1285,"mtime":1615218031754,"results":"64","hashOfConfig":"60"},{"size":2762,"mtime":1612804816803,"results":"65","hashOfConfig":"60"},{"size":890,"mtime":1615216804526,"results":"66","hashOfConfig":"60"},{"size":1615,"mtime":1615230389853,"results":"67","hashOfConfig":"60"},{"size":4370,"mtime":1615220717245,"results":"68","hashOfConfig":"60"},{"size":7367,"mtime":1614507240063,"results":"69","hashOfConfig":"60"},{"size":1008,"mtime":1615208849852,"results":"70","hashOfConfig":"60"},{"size":1661,"mtime":1614533883218,"results":"71","hashOfConfig":"60"},{"size":4384,"mtime":1614620716410,"results":"72","hashOfConfig":"60"},{"size":6004,"mtime":1615201942801,"results":"73","hashOfConfig":"60"},{"size":320,"mtime":1614519313838,"results":"74","hashOfConfig":"60"},{"size":1885,"mtime":1614877990546,"results":"75","hashOfConfig":"60"},{"size":10029,"mtime":1615220717263,"results":"76","hashOfConfig":"60"},{"size":946,"mtime":1614629687773,"results":"77","hashOfConfig":"60"},{"size":4674,"mtime":1614528471075,"results":"78","hashOfConfig":"60"},{"size":3153,"mtime":1614528818255,"results":"79","hashOfConfig":"60"},{"size":2386,"mtime":1614798236916,"results":"80","hashOfConfig":"60"},{"size":242,"mtime":1612199729538,"results":"81","hashOfConfig":"60"},{"size":1001,"mtime":1612199729542,"results":"82","hashOfConfig":"60"},{"size":806,"mtime":1614878960059,"results":"83","hashOfConfig":"60"},{"size":5644,"mtime":1612611913174,"results":"84","hashOfConfig":"60"},{"size":2107,"mtime":1614798236933,"results":"85","hashOfConfig":"60"},{"size":1628,"mtime":1613239995866,"results":"86","hashOfConfig":"60"},{"size":1158,"mtime":1613326834704,"results":"87","hashOfConfig":"60"},{"size":603,"mtime":1612899436322,"results":"88","hashOfConfig":"60"},{"size":572,"mtime":1612199729535,"results":"89","hashOfConfig":"60"},{"size":741,"mtime":1615216196278,"results":"90","hashOfConfig":"60"},{"size":1285,"mtime":1614785163185,"results":"91","hashOfConfig":"60"},{"size":4428,"mtime":1615220717272,"results":"92","hashOfConfig":"60"},{"size":3895,"mtime":1615201942835,"results":"93","hashOfConfig":"60"},{"size":1620,"mtime":1612804777019,"results":"94","hashOfConfig":"60"},{"size":2094,"mtime":1615226666482,"results":"95","hashOfConfig":"60"},{"size":2372,"mtime":1612614672159,"results":"96","hashOfConfig":"60"},{"size":1661,"mtime":1613326834672,"results":"97","hashOfConfig":"60"},{"size":1374,"mtime":1614516096829,"results":"98","hashOfConfig":"60"},{"size":510,"mtime":1612199729531,"results":"99","hashOfConfig":"60"},{"size":1119,"mtime":1615227556438,"results":"100","hashOfConfig":"60"},{"size":3982,"mtime":1614802577332,"results":"101","hashOfConfig":"60"},{"size":641,"mtime":1612199729527,"results":"102","hashOfConfig":"60"},{"size":2247,"mtime":1615227327479,"results":"103","hashOfConfig":"60"},{"size":1626,"mtime":1615218569184,"results":"104","hashOfConfig":"60"},{"size":1906,"mtime":1615204738964,"results":"105","hashOfConfig":"60"},{"size":1022,"mtime":1615218122694,"results":"106","hashOfConfig":"60"},{"size":492,"mtime":1612199729533,"results":"107","hashOfConfig":"60"},{"size":390,"mtime":1613416117415,"results":"108","hashOfConfig":"60"},{"size":823,"mtime":1614784556253,"results":"109","hashOfConfig":"60"},{"size":1394,"mtime":1615216621592,"results":"110","hashOfConfig":"60"},{"size":793,"mtime":1612611863622,"results":"111","hashOfConfig":"60"},{"size":5834,"mtime":1615227218754,"results":"112","hashOfConfig":"60"},{"size":1875,"mtime":1615208837305,"results":"113","hashOfConfig":"60"},{"size":459,"mtime":1615226141585,"results":"114","hashOfConfig":"60"},{"size":143,"mtime":1615226593012,"results":"115","hashOfConfig":"60"},{"size":1360,"mtime":1612199729526,"results":"116","hashOfConfig":"60"},{"size":1741,"mtime":1613239842054,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hg7f1j",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"131"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"126"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"148"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"155"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"126"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\index.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\auth-credentials.slice.ts",[],["252","253"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Category\\Category.page.tsx",["254"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Table from \"../../components/common/table/Table\";\nimport NotificationBox from \"../../components/common/notificationBox\";\n//types\nimport { CategoryType } from \"../../redux/types/category.type\";\n//request\nimport {\n  GET_CATEGORIES,\n  DISABLE_CATEGORIES,\n  ACTIVATE_CATEGORIES,\n  DELETE_CATEGORIES\n} from \"../../redux/requests/category.request\";\n\ntype Props = {};\n\nconst CategoryPage: React.FC<Props> = (props) => {\n  const [GetCategories, getResponse] = useLazyQuery(GET_CATEGORIES);\n  const [DisableCategories, disableResponse] = useMutation(DISABLE_CATEGORIES);\n  const [ActivateCategories, activateResponse] = useMutation(ACTIVATE_CATEGORIES);\n  const [DeleteCategories, deleteResponse] = useMutation(DELETE_CATEGORIES);\n  const [categories, setCategories] = useState<CategoryType[]>([]);\n  //pagination\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  //deep search\n  const [deepSearch, setDeepSearch] = useState<string>('');\n  //side effects\n  const [unSelect, setUnSelect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getCategories;\n      setCategories(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data])\n\n  useEffect(() => {\n    (async function() {\n      await getCategories(currentPage, rowCount, deepSearch)\n    })()\n  }, [])\n\n  async function getCategories(pg: number, rc: number, kw: string): Promise<void> {\n    try {\n      await GetCategories({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw\n          }\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber)\n    await getCategories(pageNumber, rowCount, deepSearch);\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getCategories(currentPage, rc, deepSearch);\n  }\n\n  async function getDeepSearchFromTable(kw: string): Promise<void> {\n    setDeepSearch(kw);\n    await getCategories(currentPage, rowCount, kw);\n  }\n\n  async function getIdsAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableCategories({\n        variables: {\n          disabledCategories: { ids }\n        }\n      })\n      handleCategoriesState(ids, true)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdsAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateCategories({\n        variables: {\n          activateCategories: { ids }\n        }\n      })\n      handleCategoriesState(ids, false)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdsAndDelete(ids: string[]): Promise<void> {\n    try {\n      await DeleteCategories({\n        variables: {\n          deleteCategories: { ids }\n        }\n      })\n      handleCategoriesList(ids)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  function handleCategoriesState(ids: string[], isDisabled: boolean) {\n    const updatedCategories = categories.map(cat => {\n      if (ids.includes(cat.id!)) {\n        return {\n          ...cat,\n          isDisabled\n        }\n      }\n      return cat;\n    })\n    setCategories(updatedCategories)\n  }\n\n  function handleCategoriesList(ids: string[]) {\n    const deletedCategories = categories.filter(category => !ids.includes(category.id!))\n    setCategories(deletedCategories)\n    setUnSelect(true);\n  }\n\n  return (\n    <Layout>\n      <h2 className=\"font-medium uppercase mx-4\">\n        Categories\n      </h2>\n      {/*  table */}\n      <Table\n        data={categories}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdsAndDisable={getIdsAndDisable}\n        getIdsAndActivate={getIdsAndActivate}\n        getIdsAndDelete={getIdsAndDelete}\n        path=\"categories\"\n        error={!!getResponse.error}\n        exclude={['id']}\n        unSelect={unSelect}\n      />\n      <NotificationBox\n        list={[\n          getResponse,\n          activateResponse,\n          disableResponse,\n          deleteResponse\n        ]}\n      />\n    </Layout>\n  );\n};\n\nexport default CategoryPage;\n",["255","256"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\requests\\product.request.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Input.tsx",[],["257","258"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Category\\SubCategories.tsx",["259"],"import React, {memo, useEffect, useState, useRef} from 'react';\nimport { v4 as uuid } from 'uuid';\n//components\nimport Input from \"../../components/common/Input\";\n//types\nimport { SubCategoryType } from \"../../redux/types/category.type\";\n\ntype Props = {\n  parentId: string\n  subCategories: SubCategoryType[]\n  getValue: (val: SubCategoryType[]) => void\n}\n\nconst SubCategories: React.FC<Props> = memo(({\n  parentId,\n  subCategories,\n  getValue\n}) => {\n  const [list, setList] = useState<SubCategoryType[]>([]);\n\n  const emptySubCategory = {\n    id: uuid(),\n    parentId,\n    name: '',\n    tabName: ''\n  }\n\n  useEffect(() => {\n    if (subCategories.length) {\n      setList(subCategories)\n    }\n  }, [subCategories])\n\n  function _onChange(index: number, key: string, val: string): void {\n    const newList = list.map((prv, i) => {\n      return i === index ? ({...prv, [key]: val}) : prv\n    })\n    setList(newList)\n    getValue(newList)\n  }\n\n  function _onAddSubCategory(): void {\n    if (list.length < 10) {\n      setList(prevState => [emptySubCategory, ...prevState]);\n    }\n  }\n\n  function _onRemoveSubCategory(index: number): void {\n    const filteredList = list.filter((l, i) => i !== index);\n    setList(filteredList);\n    getValue(filteredList)\n  }\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"font-medium uppercase mx-4\">\n          { list.length ? 'Create Subcategory' : null }\n        </h2>\n        <h2\n          onClick={_onAddSubCategory}\n          className=\"font-medium uppercase mx-4 cursor-pointer select-none hover:opacity-75\"\n        >\n          Add subcategory [{10 - list.length}]\n        </h2>\n      </div>\n      <div className=\"flex flex-col items-center\">\n        {\n          list.map((scat: SubCategoryType, i) => (\n            <div key={i} className=\"w-full flex items-center relative\">\n              <Input\n                type=\"text\"\n                label=\"Name\"\n                value={scat.name}\n                getValue={(val: string) => _onChange(i, 'name', val)}\n              />\n              <Input\n                type=\"text\"\n                label=\"Tab Name\"\n                value={scat.tabName}\n                getValue={(val: string) => _onChange(i, 'tabName', val)}\n              />\n              <div\n                className=\"w-8  flex justify-center items-center absolute -bottom-2 right-7\n                 cursor-pointer select-none hover:opacity-70\"\n                onClick={() => _onRemoveSubCategory(i)}\n              >\n                <small className=\"font-medium\">REMOVE</small>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n});\n\nSubCategories.defaultProps = {\n  subCategories: []\n}\n\nexport default SubCategories;\n","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Divider.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\notificationBox\\ErrorBox.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Category\\CreateCategory.page.tsx",["260","261","262","263"],"import React, {useEffect, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation} from \"@apollo/client\";\nimport { v4 as uuid } from 'uuid';\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Input from \"../../components/common/Input\";\nimport Button from \"../../components/common/Button\";\nimport Divider from \"../../components/common/Divider\";\nimport NotificationBox from \"../../components/common/notificationBox\";\nimport SubCategories from \"./SubCategories\";\nimport Brands from '../Brand/Brands';\nimport Products from \"../Product/Products\";\n//types\nimport {CategoryType, SubCategoryType} from \"../../redux/types/category.type\";\n//request\nimport {CREATE_CATEGORY, UPDATE_CATEGORY} from \"../../redux/requests/category.request\";\n\nconst initialState = {\n  name: '',\n  tabName: '',\n  subCategories: []\n}\n\ntype Props = {}\n\nconst CreateCategory: React.FC<Props> = (props) => {\n  const history = useHistory();\n  //requests\n  const [CreateCategory, createResponse] = useMutation(CREATE_CATEGORY);\n  const [UpdateCategory, updateResponse] = useMutation(UPDATE_CATEGORY, { errorPolicy: \"all\" });\n  //state\n  const [state, setState] = useState<Partial<CategoryType>>({\n    id: uuid(),\n    ...initialState\n  });\n  const [mode, setMode] = useState<string>('create');\n\n  useEffect(() => {\n    const { mode, selected }: any = history.location.state;\n    if (mode === \"update\") {\n      setState(selected[0]);\n      setMode(mode);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push(\"/categories\")\n    }\n  }, [createResponse])\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push(\"/categories\")\n    }\n  }, [updateResponse])\n\n  function _onSubCategoryChange(val: SubCategoryType[]): void {\n    setState({ ...state, subCategories: val })\n  }\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateCategory({\n        variables: {\n          newCategory: state\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateCategory({\n        variables: {\n          updatedCategory: state\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  return (\n    <Layout>\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"font-medium uppercase mx-4\">\n          Create category\n        </h2>\n        <h2\n          onClick={() => history.goBack()}\n          className=\"font-medium uppercase mx-4 cursor-pointer hover:opacity-75\"\n        >\n          Go Back\n        </h2>\n      </div>\n      <div className=\"flex items-center\">\n        <Input\n          type=\"text\"\n          label=\"Name\"\n          name=\"name\"\n          value={state.name}\n          getValue={(val: string) => setState({...state, name: val})}\n        />\n        <Input\n          type=\"text\"\n          label=\"Tab Name\"\n          name=\"tabName\"\n          value={state.tabName}\n          getValue={(val: string) => setState({...state, tabName: val})}\n        />\n      </div>\n      <SubCategories\n        parentId={state.id!}\n        subCategories={state.subCategories!}\n        getValue={_onSubCategoryChange}\n      />\n      <div className=\"flex items-center mx-4 py-3\">\n        {\n          mode === \"create\" ? (\n            <Button\n              type=\"success\"\n              label=\"Create\"\n              onAction={_onSave}\n              cls=\"m-0 mr-3\"\n            />\n          ) : (\n            <Button\n              type=\"success\"\n              label=\"Update\"\n              onAction={_onUpdate}\n              cls=\"m-0 mr-3\"\n            />\n          )\n        }\n        <Button\n          type=\"success\"\n          label=\"Reset fields\"\n          onAction={() => setState(initialState)}\n          cls=\"m-0 mr-3\"\n        />\n      </div>\n\n      {\n        mode === \"update\" ? (\n          <>\n            <Divider label=\"Additional Information\" />\n            <div className=\"flex flex-wrap\">\n              <Brands id={state.id!} />\n              <Products id={state.id!} />\n            </div>\n          </>\n        ) : null\n      }\n\n      {/*<NotificationBox*/}\n      {/*  list={[*/}\n      {/*    createResponse,*/}\n      {/*    updateResponse,*/}\n      {/*  ]}*/}\n      {/*/>*/}\n    </Layout>\n  );\n}\n\nCreateCategory.defaultProps = {}\n\nexport default CreateCategory;\n","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\table\\Table.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\table\\FakeTable.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\requests\\brand.request.ts",[],["264","265"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Brand\\Brand.page.tsx",["266"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Table from \"../../components/common/table/Table\";\nimport NotificationBox from \"../../components/common/notificationBox\";\n//types\nimport { BrandType } from \"../../redux/types/brand.type\";\n//request\nimport {\n  GET_BRANDS,\n  DISABLE_BRANDS,\n  ACTIVATE_BRANDS,\n  DELETE_BRANDS\n} from \"../../redux/requests/brand.request\";\n\ntype Props = {};\n\nconst BrandPage: React.FC<Props> = (props) => {\n  const [GetBrands, getResponse] = useLazyQuery(GET_BRANDS);\n  const [DisableBrands, disableResponse] = useMutation(DISABLE_BRANDS);\n  const [ActivateBrands, activateResponse] = useMutation(ACTIVATE_BRANDS);\n  const [DeleteBrands, deleteResponse] = useMutation(DELETE_BRANDS);\n  const [brands, setBrands] = useState<BrandType[]>([]);\n  //pagination\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  //deep search\n  const [deepSearch, setDeepSearch] = useState<string>('');\n  //side effects\n  const [unSelect, setUnSelect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getBrands;\n      setBrands(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data])\n\n  useEffect(() => {\n    (async function() {\n      await getBrands(currentPage, rowCount, deepSearch)\n    })()\n  }, [])\n\n  async function getBrands(pg: number, rc: number, kw: string): Promise<void> {\n    try {\n      await GetBrands({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw\n          }\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber)\n    await getBrands(pageNumber, rowCount, deepSearch);\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getBrands(currentPage, rc, deepSearch);\n  }\n\n  async function getDeepSearchFromTable(kw: string): Promise<void> {\n    setDeepSearch(kw);\n    await getBrands(currentPage, rowCount, kw);\n  }\n\n  async function getIdsAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableBrands({\n        variables: {\n          disabledBrands: { ids }\n        }\n      })\n      handleBrandsState(ids, true)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdsAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateBrands({\n        variables: {\n          activateBrands: { ids }\n        }\n      })\n      handleBrandsState(ids, false)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdsAndDelete(ids: string[]): Promise<void> {\n    try {\n      await DeleteBrands({\n        variables: {\n          deleteBrands: { ids }\n        }\n      })\n      handleBrandsList(ids)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  function handleBrandsState(ids: string[], isDisabled: boolean) {\n    const updatedBrands = brands.map(cat => {\n      if (ids.includes(cat.id!)) {\n        return {\n          ...cat,\n          isDisabled\n        }\n      }\n      return cat;\n    })\n    setBrands(updatedBrands)\n  }\n\n  function handleBrandsList(ids: string[]) {\n    const deletedBrands = brands.filter(brand => !ids.includes(brand.id!))\n    setBrands(deletedBrands)\n    setUnSelect(true);\n  }\n\n  return (\n    <Layout>\n      <h2 className=\"font-medium uppercase mx-4\">\n        Brands\n      </h2>\n      {/*  table */}\n      <Table\n        data={brands}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdsAndDisable={getIdsAndDisable}\n        getIdsAndActivate={getIdsAndActivate}\n        getIdsAndDelete={getIdsAndDelete}\n        path=\"brands\"\n        error={!!getResponse.error}\n        exclude={['id']}\n        unSelect={unSelect}\n      />\n      <NotificationBox\n        list={[\n          getResponse,\n          activateResponse,\n          disableResponse,\n          deleteResponse\n        ]}\n      />\n    </Layout>\n  );\n};\n\nexport default BrandPage;\n","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Brand\\CreateBrand.page.tsx",["267","268","269","270"],"import React, {useEffect, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport { v4 as uuid } from 'uuid';\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Input from \"../../components/common/Input\";\nimport Button from \"../../components/common/Button\";\nimport NotificationBox from \"../../components/common/notificationBox\";\n//types\nimport {BrandType} from \"../../redux/types/brand.type\";\nimport {OptionType} from \"../../redux/types/common.type\";\n//request\nimport { CREATE_BRAND, UPDATE_BRAND } from \"../../redux/requests/brand.request\";\nimport { GET_CATEGORIES_FOR_SELECT } from \"../../redux/requests/category.request\";\nimport Selectable from \"../../components/common/Select\";\n\nconst initialState = {\n  name: '',\n  category: []\n}\n\ntype Props = {}\n\nconst CreateBrand: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const [CreateBrand, createResponse] = useMutation(CREATE_BRAND);\n  const [UpdateBrand, updateResponse] = useMutation(UPDATE_BRAND, { errorPolicy: \"all\" });\n  const [GetCategories, categoriesResponse] = useLazyQuery(GET_CATEGORIES_FOR_SELECT);\n  const [categories, setCategories] = useState<OptionType[]>([]);\n  const [mode, setMode] = useState<string>('create');\n  const [state, setState] = useState<BrandType>({\n    id: uuid(),\n    ...initialState\n  });\n\n  useEffect(() => {\n    (async function() {\n      await getCategories()\n    })()\n  }, [])\n\n  useEffect(() => {\n    if (categoriesResponse.data) {\n      const payload = categoriesResponse.data.getCategories.payload;\n      let options = [];\n      for (let i = 0; i < payload.length; i++) {\n        options.push({\n          id: payload[i].id,\n          name: payload[i].name\n        })\n        for (let j = 0; j < payload[i].subCategories.length; j++) {\n          options.push({\n            id: payload[i].subCategories[j].id,\n            name: payload[i].subCategories[j].name\n          })\n        }\n      }\n      setCategories(options)\n    }\n  }, [categoriesResponse])\n\n  useEffect(() => {\n    const { mode, selected }: any = history.location.state;\n    if (mode === \"update\") {\n      let categoryIds = [];\n      for (let i = 0; i < selected[0].category.length; i++) {\n        categoryIds.push(selected[0].category[i].id)\n        if (selected[0].category[i].subCategories) {\n          for (let j = 0; j < selected[0].category[i].subCategories.length; j++) {\n            categoryIds.push(selected[0].category[i].subCategories[j].id)\n          }\n        }\n      }\n      setState({\n        ...selected[0],\n        category: categoryIds\n      });\n      setMode(mode);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (createResponse.data) {\n      history.push(\"/brands\")\n    }\n  }, [createResponse])\n\n  useEffect(() => {\n    if (updateResponse.data) {\n      history.push(\"/brands\")\n    }\n  }, [updateResponse])\n\n  async function getCategories(): Promise<void> {\n    try {\n      await GetCategories({\n        variables: {\n          controls: {\n            offset: 0,\n            limit: 1000,\n            keyword: ''\n          }\n        }\n      })\n    } catch(err) {\n      console.log(err)\n    }\n  }\n\n  async function _onSave(): Promise<void> {\n    try {\n      await CreateBrand({\n        variables: {\n          newBrand: state\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function _onUpdate(): Promise<void> {\n    try {\n      await UpdateBrand({\n        variables: {\n          updatedBrand: state\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  function _onCategorySelect(category: string | string[], action: string): void {\n    if (action === \"remove-value\") {\n      if (Array.isArray(category)) {\n        setState(prevState => ({...prevState, category: category.filter(Boolean) }))\n      }\n    } else {\n      if (Array.isArray(category)) {\n        setState(prevState => ({...prevState, category: Array.from(new Set([...category, ...prevState.category])) }))\n      } else {\n        setState(prevState => ({...prevState, category: Array.from(new Set([category, ...prevState.category])) }))\n      }\n    }\n  }\n\n  function handleSelectableValue() {\n    if (state.category.length) {\n      return categories.filter(cat => state.category.includes(cat.id))\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <Layout>\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"font-medium uppercase mx-4\">\n          Create brand\n        </h2>\n        <h2\n          onClick={() => history.goBack()}\n          className=\"font-medium uppercase mx-4 cursor-pointer hover:opacity-75\"\n        >\n          Go Back\n        </h2>\n      </div>\n      <div className=\"flex items-center\">\n        <Input\n          type=\"text\"\n          label=\"Name\"\n          name=\"name\"\n          value={state.name}\n          getValue={(val: string) => setState({...state, name: val})}\n        />\n        <Selectable\n          label=\"Category\"\n          name=\"category\"\n          returnType=\"string\"\n          value={handleSelectableValue()}\n          options={categories}\n          getValue={(val: string | string[], action = \"\") => _onCategorySelect(val, action)}\n          cls=\"m-4\"\n          isMulti\n        />\n      </div>\n      <div className=\"flex items-center mx-4 py-3\">\n        {\n          mode === \"create\" ? (\n            <Button\n              label=\"Create\"\n              onAction={_onSave}\n              cls=\"m-0 mr-3\"\n            />\n          ) : (\n            <Button\n              label=\"Update\"\n              onAction={_onUpdate}\n              cls=\"m-0 mr-3\"\n            />\n          )\n        }\n        <Button\n          label=\"Reset fields\"\n          onAction={() => setState(initialState)}\n          cls=\"m-0 mr-3\"\n        />\n      </div>\n      <NotificationBox\n        list={[\n          createResponse,\n          updateResponse,\n        ]}\n      />\n    </Layout>\n  );\n}\n\nCreateBrand.defaultProps = {}\n\nexport default CreateBrand;\n",["271","272"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\requests\\main.request.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Main\\StatisticCard.tsx",["273"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Product\\CreateProduct.page.tsx",["274","275","276","277","278","279"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\table\\body.handler..ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Product\\Product.page.tsx",["280"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Table from \"../../components/common/table/Table\";\nimport NotificationBox from \"../../components/common/notificationBox\";\n//types\nimport { ProductType } from \"../../redux/types/product.type\";\n//request\nimport {\n  GET_PRODUCTS,\n  DISABLE_PRODUCTS,\n  ACTIVATE_PRODUCTS,\n  DELETE_PRODUCTS\n} from \"../../redux/requests/product.request\";\n\ntype Props = {};\n\nconst ProductPage: React.FC<Props> = (props) => {\n  const [GetProducts, getResponse] = useLazyQuery(GET_PRODUCTS);\n  const [DisableProducts, disableResponse] = useMutation(DISABLE_PRODUCTS);\n  const [ActivateProducts, activateResponse] = useMutation(ACTIVATE_PRODUCTS);\n  const [DeleteProducts, deleteResponse] = useMutation(DELETE_PRODUCTS);\n  const [products, setProducts] = useState<ProductType[]>([]);\n  //pagination\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  //deep search\n  const [deepSearch, setDeepSearch] = useState<string>('');\n  //side effects\n  const [unSelect, setUnSelect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getProducts;\n      setProducts(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data])\n\n  useEffect(() => {\n    (async function() {\n      await getProducts(currentPage, rowCount, deepSearch)\n    })()\n  }, [])\n\n  async function getProducts(pg: number, rc: number, kw: string): Promise<void> {\n    try {\n      await GetProducts({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw\n          }\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber)\n    await getProducts(pageNumber, rowCount, deepSearch);\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getProducts(currentPage, rc, deepSearch);\n  }\n\n  async function getDeepSearchFromTable(keyword: string): Promise<void> {\n    setDeepSearch(keyword);\n    await getProducts(currentPage, rowCount, keyword);\n  }\n\n  async function getIdsAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableProducts({\n        variables: {\n          disabledProducts: { ids }\n        }\n      })\n      handleProductsState(ids, true)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdsAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateProducts({\n        variables: {\n          activateProducts: { ids }\n        }\n      })\n      handleProductsState(ids, false)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdsAndDelete(ids: string[]): Promise<void> {\n    try {\n      await DeleteProducts({\n        variables: {\n          deleteProducts: { ids }\n        }\n      })\n      handleProductsList(ids)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  function handleProductsState(ids: string[], isDisabled: boolean) {\n    const updatedProducts = products.map(product => {\n      if (ids.includes(product.id)) {\n        return {\n          ...product,\n          isDisabled\n        }\n      }\n      return product;\n    })\n    setProducts(updatedProducts)\n  }\n\n  function handleProductsList(ids: string[]) {\n    const deletedProducts = products.filter(product => !ids.includes(product.id))\n    setProducts(deletedProducts)\n    setUnSelect(true);\n  }\n\n  return (\n    <Layout>\n      <h2 className=\"font-medium uppercase mx-4\">\n        Products\n      </h2>\n      {/*  table */}\n      <Table\n        data={products}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdsAndDisable={getIdsAndDisable}\n        getIdsAndActivate={getIdsAndActivate}\n        getIdsAndDelete={getIdsAndDelete}\n        path=\"products\"\n        exclude={excludeList}\n        error={!!getResponse.error}\n        unSelect={unSelect}\n      />\n      <NotificationBox\n        list={[\n          getResponse,\n          activateResponse,\n          disableResponse,\n          deleteResponse\n        ]}\n      />\n    </Layout>\n  );\n};\n\nexport default ProductPage;\n\nconst excludeList = [\n  'id',\n  'cover',\n  'description',\n  'images',\n  'freeDelivery',\n  'guarantee',\n  'stars',\n  'group',\n  'best',\n  'viewCount'\n]\n","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Select.tsx",["281"],"import React, { memo, useEffect, useState } from 'react';\nimport Select from 'react-select';\n//types\nimport { OptionType } from \"../../redux/types/common.type\";\n\n// styles\nconst mainColor = 'rgba(59, 130, 246, 0.8)';\nconst mainColorHover = 'rgba(59, 130, 246, 0.2)';\nconst borderColor = 'rgba(229, 231, 235, 1)';\n\nconst customStyles = {\n  control: (provided: any, state: any) => ({\n    ...provided,\n    padding: '6px 0',\n    outline: '2px solid transparent',\n    outlineOffset: '2px',\n    fontSize: '1rem',\n    lineHeight: '1.5rem',\n    boxShadow: 'none',\n    borderLeftWidth: '0',\n    borderTopWidth: '0',\n    borderRightWidth: '4px',\n    borderBottomWidth: '2px',\n    borderColor: state.isFocused ? mainColor : borderColor,\n    borderRadius: '0.375rem',\n    cursor: 'pointer',\n\n    '&:hover': {\n      borderColor: state.isFocused ? mainColor : borderColor,\n    }\n  }),\n  option: (provided: any, state: any) => ({\n    ...provided,\n    backgroundColor: state.isSelected ? mainColor : 'white',\n    cursor: 'pointer',\n\n    '&:hover': {\n      backgroundColor: state.isSelected ? mainColor : mainColorHover,\n    }\n  }),\n}\n\ntype Props = {\n  type?: string\n  label?: string\n  name: string\n  returnType?: 'string' | 'boolean' | 'number'\n  value: any\n  cls?: string\n  options: OptionType[]\n  getValue: (val: any, action?: string) => void\n  [key: string]: any\n};\n\nconst Selectable: React.FC<Props> = memo(({\n  type,\n  label,\n  name,\n  value,\n  cls,\n  options,\n  getValue,\n  ...rest\n}) => {\n  const [innerState, setInnerState] = useState<OptionType>({\n    id: '',\n    name: ''\n  });\n\n  useEffect(() => {\n    if (typeof value === \"string\") {\n      const initialValue = options.find(opt => opt.id === value)!\n      setInnerState(initialValue)\n    } else {\n      setInnerState(value);\n    }\n  }, [value])\n\n  function _onChange(selectedOption: any, { action }: any): void {\n    try {\n      if (action === \"remove-value\") {\n        const options = selectedOption || [{ id: '', name: '' }];\n        const restAfterRemoving = options.map((s: OptionType) => s.id);\n        getValue(restAfterRemoving, action);\n      }\n      if (rest.isMulti) {\n        const options = selectedOption || [];\n        const multiple = options.map((s: OptionType) => s.id);\n        getValue(multiple)\n      } else {\n        getValue(selectedOption.id)\n      }\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <label htmlFor={type + name} className={`flex flex-col flex-1 ${cls}`}>\n      <span>{label}</span>\n      <Select\n        id={name}\n        name={name}\n        value={innerState}\n        getOptionLabel={(option: any) => option.name}\n        getOptionValue={(option: any) => option.id}\n        onChange={_onChange}\n        options={options}\n        styles={customStyles}\n        {...rest}\n      />\n    </label>\n  );\n}, (prevProps, nextProps) => {\n  return prevProps.value === nextProps.value && prevProps.options.length === nextProps.options.length;\n});\n\nSelectable.defaultProps = {\n  type: 'text',\n  label: 'Label',\n  name: 'selectable',\n  returnType: 'string',\n  cls: 'm-4',\n  options: [{ id: '', name: 'No options' }],\n  value: '',\n};\n\nexport default Selectable;\n","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Brand\\Brands.tsx",["282"],"import React, { memo, useEffect, useState } from 'react';\nimport { useLazyQuery } from \"@apollo/client\";\n//request\nimport {GET_BRANDS_BY_CATEGORY_ID} from \"../../redux/requests/brand.request\";\n//types\nimport { BrandType } from \"../../redux/types/brand.type\";\n\ntype Props = {\n  id: string\n}\n\nconst Brands: React.FC<Props> = memo(({ id }) => {\n  //requests\n  const [GetBrandsByCategoryId, brandsResponse] = useLazyQuery(GET_BRANDS_BY_CATEGORY_ID);\n  //state\n  const [brands, setBrands] = useState<BrandType[]>([]);\n\n  useEffect(() => {\n    (async function() {\n      await getBrandsByCategoryId();\n    })()\n  }, [])\n\n  useEffect(() => {\n    if (brandsResponse.data) {\n      const payload = brandsResponse.data.getBrandsByCategoryId;\n      setBrands(payload)\n    }\n  }, [brandsResponse])\n\n  async function getBrandsByCategoryId(): Promise<void> {\n    try {\n      await GetBrandsByCategoryId({\n        variables: {\n          id\n        }\n      })\n    } catch(err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <div\n      className=\"flex-col flex-auto bg-white rounded shadow-md p-4 min-w-96 m-4\"\n    >\n      <div className=\"flex justify-center\">\n        <h3 className=\"font-bold mb-3\">Brands</h3>\n        <div\n          className=\"bg-red-500 text-white flex justify-center items-center rounded-full w-8 h-5 ml-3\n          transform translate-y-0.5 text-center\"\n        >\n          <small className=\"font-bold text-xs mr-0.5 mb-0.5\">{brands.length}</small>\n        </div>\n      </div>\n      <ul className=\"flex flex-wrap gap-5\">\n        {\n          brands.map((brand, i) => (\n            <li key={i} className=\"flex-col flex-1\">\n              <strong className=\"\">{brand.name}</strong>\n              <ul className=\"my-1\">\n                <li>\n                  <p className=\"text-xs text-gray-500 whitespace-nowrap\">other categories</p>\n                </li>\n                {\n                  brand.category.map((cat: any, idx) => {\n                    if (cat.id !== id) {\n                      return (\n                        <li key={idx}>\n                          <small>{cat.name}</small>\n                        </li>\n                      )\n                    }\n                    return '';\n                  })\n                }\n              </ul>\n            </li>\n          ))\n        }\n      </ul>\n\n    </div>\n  );\n})\n\nBrands.defaultProps = {}\n\nexport default Brands;\n","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\roles.slice.ts",[],["283","284"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\utils\\storage.utils.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\store.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\UploadZone.tsx",["285"],"import React, { FormEvent, useEffect, useState, memo } from 'react';\nimport Lightbox from 'react-image-lightbox';\n//utils\nimport { imageUploadAndGetUrl } from \"../../utils/cloudinary.utils\";\n\ntype Props = {\n  label?: string\n  value: string[]\n  multiple: boolean\n  cls?: string\n  getValue: (val: string[]) => void\n  [key: string]: any\n};\n\nconst UploadZone: React.FC<Props> = memo(({\n label,\n value,\n multiple,\n cls,\n getValue,\n ...props\n}) => {\n  const [preview, setPreview] = useState<string[]>([]);\n  const [upLoading, setUpLoading] = useState<boolean>(false);\n  const [warning, setWarning] = useState<string>('');\n  const [uploadPercent, setUploadPercent] = useState<number>(0);\n  const [photoIndex, setPhotoIndex] = useState<number>(0);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (multiple && typeof value === \"object\") {\n      setPreview(value)\n    }\n\n    if (!multiple && typeof value === \"string\" && value !== \"\") {\n      setPreview([value])\n    }\n  }, [value])\n\n  async function handleImage({ currentTarget }: FormEvent<HTMLInputElement>) {\n    const files = currentTarget.files!;\n    const newPreviewList: string[] = [];\n\n    if (files.length > 5) {\n      setWarning('Please follow the above instruction');\n      return;\n    }\n\n    setUpLoading(true);\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n\n      if (file.size > 524000) {\n        if (multiple) {\n          setWarning('Some of the images size greater than 500KB');\n        } else {\n          setWarning('Image size greater than 500KB');\n        }\n        setUpLoading(false);\n        continue;\n      }\n\n      await imageUploadAndGetUrl(file, \"product_images\",(percent, error, file) => {\n        if (percent) {\n          setUploadPercent(percent);\n        }\n        if (error) {\n          setWarning(error)\n        }\n        if (file) {\n          setUploadPercent(0);\n          setWarning('');\n          if (multiple) {\n            setPreview(prevState => [file.data.secure_url, ...prevState]);\n            newPreviewList.push(file.data.secure_url);\n          } else {\n            setPreview([file.data.secure_url]);\n            newPreviewList.push(file.data.secure_url);\n          }\n        }\n      });\n    }\n\n    getValue([...newPreviewList, ...preview]);\n    setUpLoading(false);\n  }\n\n  function _onDeletePreviewImage(e: any, url: string): void {\n    e.stopPropagation();\n    const newPreviewState: string[] = preview.filter(pre => pre !== url);\n    setPreview(newPreviewState);\n    getValue(newPreviewState);\n  }\n\n  return (\n    <div  className={`flex flex-col relative ${cls}`}>\n      <div className=\"flex justify-between\">\n        <span className={warning ? 'text-red-400' : 'text-black'}>{label}</span>\n        { uploadPercent ? <span className=\"ml-2 font-bold\">{uploadPercent}%</span> : null }\n      </div>\n      <label htmlFor=\"file-upload\">\n        <div className=\"flex-1\">\n          <input\n            type=\"file\"\n            id=\"file-upload\"\n            name=\"file-upload\"\n            autoComplete=\"off\"\n            className=\"absolute w-full p-2 opacity-0\"\n            onChange={handleImage}\n            multiple={multiple}\n            accept=\"image/*\"\n            disabled={upLoading}\n          />\n          <input type=\"text\"\n           value=\"\"\n           className=\"shadow-ml outline-none border-b-2 border-gray-200 p-3 text-black\n            border-r-4 rounded-md text-base focus:border-blue-400 w-full\"\n           readOnly={true}\n           placeholder={ warning ?  warning : 'Click to select' }\n           {...props}\n          />\n        </div>\n      </label>\n      <div\n        className=\"p-3 my-4 border-dashed border-2 border-gray-300 flex\n         flex-wrap rounded text-gray-300\"\n      >\n        {\n          preview.length ? preview.map((pre, i) => (\n            <div\n              key={i}\n              className=\"min-w-44 min-h-44 flex-1 m-3 p-2 bg-white rounded flex\n                flex-col items-center\"\n              onClick={() => {\n                setPhotoIndex(i)\n                setIsOpen(true)\n              }}\n            >\n              <div\n                className=\"w-36 h-36 bg-no-repeat bg-center bg-contain\"\n                style={{ backgroundImage: `url(${pre})` }}\n              />\n              <div\n                className=\"cursor-pointer text-gray-200 px-1 pt-3 pb-1 text-center\n                  transition-all hover:text-gray-400\"\n                onClick={(e) => _onDeletePreviewImage(e, pre)}\n              >\n                Remove\n              </div>\n            </div>\n          )) : 'Preview'\n        }\n      </div>\n\n      {isOpen && (\n        <Lightbox\n          mainSrc={preview[photoIndex]}\n          nextSrc={preview[(photoIndex + 1) % preview.length]}\n          prevSrc={preview[(photoIndex + preview.length - 1) % preview.length]}\n          onCloseRequest={() => setIsOpen(false)}\n          onMovePrevRequest={() =>\n            setPhotoIndex((photoIndex + preview.length - 1) % preview.length)\n          }\n          onMoveNextRequest={() =>\n            setPhotoIndex((photoIndex + 1) % preview.length)\n          }\n        />\n      )}\n    </div>\n  );\n}, (prevState, nextState) => {\n  if (typeof prevState.value === \"string\") {\n    return prevState.value === nextState.value\n  }\n  return compareDeeper(prevState.value, nextState.value)\n});\n\nUploadZone.defaultProps = {\n  label: 'Upload an image',\n  cls: 'm-4',\n  value: [],\n  multiple: false\n};\n\nexport default UploadZone;\n\n\nfunction compareDeeper(prev: string[], next: string[]): boolean {\n  if (prev.length !== next.length) {\n    return next.every((n, i) => n === prev[i]);\n  }\n  return true;\n}\n","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Product\\Products.tsx",["286"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\requests\\user.request.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\WithToken.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\WithoutToken.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Rest\\NotFound.page.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Auth\\Auth.page.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Main\\Main.page.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\User\\User.page.tsx",["287","288","289","290","291"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\User\\CreateUser.page.tsx",["292","293"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\requests\\category.request.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Auth\\Login.tsx",["294"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\richTextEditor\\TinyEditor.tsx",["295"],"import React, {useState} from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n//templates\nimport { templates } from './templates';\n//utils\nimport { imageUploadAndGetUrl } from '../../../utils/cloudinary.utils';\n\ntype Props = {\n  label: string\n  value: string\n  getValue: (val: string) => void\n  cls?: string\n}\n\nconst TinyEditor: React.FC<Props> = ({\n  label,\n  value,\n  getValue,\n  cls\n}) => {\n\n  function handleEditorChange(content: any, editor: any) {\n    getValue(content)\n  }\n\n  async function imagePicker(blob: any, success: any, fail: any, progress: any) {\n    const file = blob.blob();\n    const types = [\"image/png\", \"image/jpg\", \"image/jpeg\", \"image/gif\"]\n\n    if (file.size > 524000) {\n      fail('Maximum image size 500KB');\n      return false;\n    }\n\n    if (!types.includes(file.type)) {\n      fail('We accept only images')\n      return false;\n    }\n\n    await imageUploadAndGetUrl(file, \"description_images\", (percent, error, file) => {\n      if (percent) {\n        progress(percent);\n      }\n      if (error) {\n        fail(error)\n      }\n      if (file) {\n        success(file.data.secure_url)\n      }\n    });\n  }\n\n  return (\n    <div className={`mx-4 flex-1 ${cls}`}>\n      <span>{ label }</span>\n      <Editor\n        apiKey=\"ujhxkgc5qcu6syhl2b7qv1n2ydnqwtl1vwyy8ndwnl650f0t\"\n        initialValue={value}\n        init={{\n          height: 500,\n          menubar: true,\n          file_picker_types: 'image',\n          images_upload_handler: imagePicker,\n          templates: templates,\n          plugins: [\n            'advlist autolink lists link image charmap print preview anchor',\n            'searchreplace visualblocks code fullscreen hr imagetools',\n            'insertdatetime media table paste code help wordcount quickbars',\n            'importcss autosave save template searchreplace emoticons'\n          ],\n          toolbar:\n            `undo redo | fontsizeselect backcolor | alignleft aligncenter alignright alignjustify\n            | bullist numlist outdent indent | template restoredraft | help`,\n          autosave_interval: '10s',\n          quickbars_insert_toolbar: 'template',\n          autosave_prefix: 'tinymce-autosave'\n        }}\n        onEditorChange={handleEditorChange}\n      />\n    </div>\n  );\n}\n\nTinyEditor.defaultProps = {\n  label: 'Some label',\n  value: '',\n  getValue: () => false\n}\n\nexport default TinyEditor;\n","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Navigation.tsx",["296"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport { HiMenuAlt1 } from 'react-icons/hi';\n//types\nimport { RootState } from \"../../redux/store\";\nimport { NavType } from \"../../redux/types/nav.type\";\n\ntype Props = {};\n\nconst Navigation: React.FC<Props> = (props) => {\n  const { nav, user } = useSelector((state: RootState) => state);\n\n  return (\n    <div\n      className=\"min-w-min w-60 h-full bg-gradient-to-b from-blue-800 to-blue-700 border-blue-900\n        border-r-4\"\n    >\n     <div className=\"p-4 flex justify-between items-center\">\n       <div className=\"uppercase text-white tracking-wider font-bold\">\n         <h3 className=\"text-xl leading-5\">Electroshop</h3>\n         <span className=\"leading-3 text-xs\">Dashboard v. 0.7.2</span>\n       </div>\n       <div>\n        <HiMenuAlt1\n          size={32}\n          color=\"white\"\n          className=\"cursor-pointer transition-all hover:opacity-75\"\n        />\n       </div>\n     </div>\n      <nav className=\"mt-5\">\n        <ul className=\"text-white\">\n          {\n            nav.map((n: NavType, i: number) => {\n              if (n.visible && n.accessRoles.some((acr, i) => user.roles.includes(acr))) {\n                return (\n                  <li\n                    key={i}\n                    className=\"cursor-pointer transition-all hover:opacity-75\"\n                  >\n                    <Link to={n.path} className=\"block p-4\">{n.name}</Link>\n                  </li>\n                )\n              }\n            })\n          }\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nNavigation.defaultProps = {};\n\nexport default Navigation;\n","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\nav.slice.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\hooks\\useInterval.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\notificationBox\\index.tsx",["297"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Main\\SystemUsage.tsx",["298"],"import React, {useState, useEffect} from 'react';\nimport { formatDistance } from 'date-fns';\n//components\nimport LoadingCard from \"./LoadingCard\";\n//types\nimport { SystemInfo } from '../../redux/types/systemInfo.type';\n//utils\nimport io from '../../utils/socket.utils';\n//hooks\nimport { useInterval } from \"../../hooks/useInterval\";\n//socket connection\nconst socket = io('statistic');\n\ntype Props = {};\n\n\nconst SystemUsage: React.FC<Props> = (props) => {\n  const [systemInfo, setSystemInfo] = useState<Partial<SystemInfo>>({});\n\n  useEffect(() => {\n    socket.connect();\n    socket.on('sendSystemInfo', handleSystemInfo)\n    return () => {\n      socket.disconnect();\n    }\n  }, [socket]);\n\n  useInterval(() => {\n    socket.emit('getSystemInfo');\n  }, 2000)\n\n  if (!Object.keys(systemInfo).length) {\n    return <LoadingCard ms={2000} />\n  }\n\n  function handleSystemInfo(data: SystemInfo): void {\n    setSystemInfo(data);\n  }\n\n  function handleBackColor(percent: number = 0): string {\n    return percent < 31 ? \"green\" : ( percent > 30 && percent < 61 ? \"orange\" : \"tomato\")\n  }\n\n  return (\n    <div className=\"flex bg-white rounded shadow-md p-4 w-520 h-230 flex-1\">\n      <div className=\"relative h-full w-14 mr-4 flex flex-col-reverse\">\n        <div className=\"h-5 transition-all\" style={{\n          height: `${systemInfo.memUsage! * 100}%`,\n          backgroundColor: handleBackColor(systemInfo.memUsage! * 100)\n        }}>\n          <div className=\"absolute top-0 left-3\">\n            <small>MEM</small>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex-1\">\n        <h3 className=\"text-center mb-4\">\n          <strong>System Information</strong>\n        </h3>\n        <div className=\"flex flex-col\">\n          <div className=\"flex\">\n            <strong className=\"w-28 block\">OS type:</strong>\n            <span>{ systemInfo.type }</span>\n          </div>\n          <div className=\"flex\">\n            <strong className=\"w-28 block\">OS uptime:</strong>\n            <span>{ formatDistance(new Date(new Date().getTime() - systemInfo.upTime! * 1000), new Date()) }</span>\n          </div>\n          <div className=\"flex\">\n            <strong className=\"w-28 block\">CPU name:</strong>\n            <span>{ systemInfo.cpuModel }</span>\n          </div>\n        </div>\n        <div className=\"flex\">\n          <ul className=\"mr-4 my-2\">\n            <li className=\"flex\">\n              <strong className=\"w-32 block\">Memory usage:</strong>\n              <span>{ systemInfo.memUsage! * 100 }%</span>\n            </li>\n            <li className=\"flex\">\n              <strong className=\"w-32 block\">Memory free:</strong>\n              <span>{ Math.round((systemInfo.freeMem! / 1073741824 * 100) / 100) }GB</span>\n            </li>\n            <li className=\"flex\">\n              <strong className=\"w-32 block\">Memory total:</strong>\n              <span>{ Math.round((systemInfo.totalMem!  / 1073741824 *100) / 100) }GB</span>\n            </li>\n          </ul>\n          <ul className=\"my-2\">\n            <li className=\"flex\">\n              <strong className=\"w-28 black\">CPU cores:</strong>\n              <span>{ systemInfo.cpuCores }</span>\n            </li>\n            <li className=\"flex\">\n              <strong className=\"w-28 black\">CPU speed:</strong>\n              <span>{ systemInfo.cpuSpeed! / 1000 }GHz</span>\n            </li>\n            <li className=\"flex\">\n              <strong className=\"w-28 black\">CPU usage:</strong>\n              <span>{ systemInfo.cpuLoad }%</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"relative h-full w-14 ml-4 flex flex-col-reverse\">\n        <div className=\"h-5 transition-all\" style={{\n          height: `${systemInfo.cpuLoad}%`,\n          backgroundColor: handleBackColor(systemInfo.cpuLoad)\n        }}>\n          <div className=\"absolute top-0 left-4\">\n            <small>CPU</small>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SystemUsage;\n","C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Layout.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Auth\\Register.tsx",["299","300"],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\theme.slice.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\layout\\Flexbox.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Auth\\styled-components.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\pages\\Main\\LoadingCard.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\table\\LoadingBox.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\user.slice.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Button.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\utils\\cloudinary.utils.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\App.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\table\\Buttons.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\redux\\slices\\net-status.slice.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\utils\\functions.utils.ts",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\ColorPicker.tsx",[],"C:\\Users\\miral\\WebstormProjects\\@electroshop\\ecomm-dashboard\\src\\components\\common\\Header.tsx",["301"],{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","severity":1,"message":"307","line":46,"column":6,"nodeType":"308","endLine":46,"endColumn":8,"suggestions":"309"},{"ruleId":"302","replacedBy":"310"},{"ruleId":"304","replacedBy":"311"},{"ruleId":"302","replacedBy":"312"},{"ruleId":"304","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":1,"column":43,"nodeType":"316","messageId":"317","endLine":1,"endColumn":49},{"ruleId":"314","severity":1,"message":"318","line":10,"column":8,"nodeType":"316","messageId":"317","endLine":10,"endColumn":23},{"ruleId":"306","severity":1,"message":"319","line":45,"column":6,"nodeType":"308","endLine":45,"endColumn":8,"suggestions":"320"},{"ruleId":"306","severity":1,"message":"321","line":51,"column":6,"nodeType":"308","endLine":51,"endColumn":22,"suggestions":"322"},{"ruleId":"306","severity":1,"message":"321","line":57,"column":6,"nodeType":"308","endLine":57,"endColumn":22,"suggestions":"323"},{"ruleId":"302","replacedBy":"324"},{"ruleId":"304","replacedBy":"325"},{"ruleId":"306","severity":1,"message":"326","line":46,"column":6,"nodeType":"308","endLine":46,"endColumn":8,"suggestions":"327"},{"ruleId":"306","severity":1,"message":"328","line":41,"column":6,"nodeType":"308","endLine":41,"endColumn":8,"suggestions":"329"},{"ruleId":"306","severity":1,"message":"319","line":81,"column":6,"nodeType":"308","endLine":81,"endColumn":8,"suggestions":"330"},{"ruleId":"306","severity":1,"message":"321","line":87,"column":6,"nodeType":"308","endLine":87,"endColumn":22,"suggestions":"331"},{"ruleId":"306","severity":1,"message":"321","line":93,"column":6,"nodeType":"308","endLine":93,"endColumn":22,"suggestions":"332"},{"ruleId":"302","replacedBy":"333"},{"ruleId":"304","replacedBy":"334"},{"ruleId":"306","severity":1,"message":"335","line":54,"column":6,"nodeType":"308","endLine":54,"endColumn":8,"suggestions":"336"},{"ruleId":"314","severity":1,"message":"318","line":12,"column":8,"nodeType":"316","messageId":"317","endLine":12,"endColumn":23},{"ruleId":"314","severity":1,"message":"337","line":21,"column":9,"nodeType":"316","messageId":"317","endLine":21,"endColumn":18},{"ruleId":"306","severity":1,"message":"338","line":58,"column":6,"nodeType":"308","endLine":58,"endColumn":8,"suggestions":"339"},{"ruleId":"306","severity":1,"message":"319","line":66,"column":6,"nodeType":"308","endLine":66,"endColumn":8,"suggestions":"340"},{"ruleId":"306","severity":1,"message":"321","line":99,"column":6,"nodeType":"308","endLine":99,"endColumn":22,"suggestions":"341"},{"ruleId":"306","severity":1,"message":"321","line":105,"column":6,"nodeType":"308","endLine":105,"endColumn":22,"suggestions":"342"},{"ruleId":"306","severity":1,"message":"343","line":46,"column":6,"nodeType":"308","endLine":46,"endColumn":8,"suggestions":"344"},{"ruleId":"306","severity":1,"message":"345","line":77,"column":6,"nodeType":"308","endLine":77,"endColumn":13,"suggestions":"346"},{"ruleId":"306","severity":1,"message":"347","line":22,"column":6,"nodeType":"308","endLine":22,"endColumn":8,"suggestions":"348"},{"ruleId":"302","replacedBy":"349"},{"ruleId":"304","replacedBy":"350"},{"ruleId":"306","severity":1,"message":"351","line":38,"column":6,"nodeType":"308","endLine":38,"endColumn":13,"suggestions":"352"},{"ruleId":"306","severity":1,"message":"353","line":22,"column":6,"nodeType":"308","endLine":22,"endColumn":8,"suggestions":"354"},{"ruleId":"314","severity":1,"message":"318","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":23},{"ruleId":"314","severity":1,"message":"355","line":21,"column":24,"nodeType":"316","messageId":"317","endLine":21,"endColumn":39},{"ruleId":"314","severity":1,"message":"356","line":22,"column":25,"nodeType":"316","messageId":"317","endLine":22,"endColumn":41},{"ruleId":"314","severity":1,"message":"357","line":23,"column":23,"nodeType":"316","messageId":"317","endLine":23,"endColumn":37},{"ruleId":"306","severity":1,"message":"358","line":46,"column":6,"nodeType":"308","endLine":46,"endColumn":8,"suggestions":"359"},{"ruleId":"306","severity":1,"message":"360","line":46,"column":6,"nodeType":"308","endLine":46,"endColumn":8,"suggestions":"361"},{"ruleId":"306","severity":1,"message":"321","line":52,"column":6,"nodeType":"308","endLine":52,"endColumn":22,"suggestions":"362"},{"ruleId":"314","severity":1,"message":"363","line":33,"column":21,"nodeType":"316","messageId":"317","endLine":33,"endColumn":34},{"ruleId":"314","severity":1,"message":"364","line":1,"column":16,"nodeType":"316","messageId":"317","endLine":1,"endColumn":24},{"ruleId":"365","severity":1,"message":"366","line":35,"column":45,"nodeType":"367","messageId":"368","endLine":35,"endColumn":47},{"ruleId":"314","severity":1,"message":"369","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":18},{"ruleId":"306","severity":1,"message":"370","line":26,"column":6,"nodeType":"308","endLine":26,"endColumn":14,"suggestions":"371"},{"ruleId":"314","severity":1,"message":"318","line":9,"column":8,"nodeType":"316","messageId":"317","endLine":9,"endColumn":23},{"ruleId":"314","severity":1,"message":"372","line":34,"column":22,"nodeType":"316","messageId":"317","endLine":34,"endColumn":36},{"ruleId":"314","severity":1,"message":"373","line":20,"column":18,"nodeType":"316","messageId":"317","endLine":20,"endColumn":32},"no-native-reassign",["374"],"no-negated-in-lhs",["375"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getCategories', and 'rowCount'. Either include them or remove the dependency array.","ArrayExpression",["376"],["374"],["375"],["374"],["375"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'NotificationBox' is defined but never used.","React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.",["377"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["378"],["379"],["374"],["375"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getBrands', and 'rowCount'. Either include them or remove the dependency array.",["380"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["381"],["382"],["383"],["384"],["374"],["375"],"React Hook useEffect has a missing dependency: 'stats'. Either include it or remove the dependency array.",["385"],"'BrandType' is defined but never used.","React Hook useEffect has missing dependencies: 'getBrands' and 'getCategories'. Either include them or remove the dependency array.",["386"],["387"],["388"],["389"],"React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getProducts', and 'rowCount'. Either include them or remove the dependency array.",["390"],"React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["391"],"React Hook useEffect has a missing dependency: 'getBrandsByCategoryId'. Either include it or remove the dependency array.",["392"],["374"],["375"],"React Hook useEffect has a missing dependency: 'multiple'. Either include it or remove the dependency array.",["393"],"React Hook useEffect has a missing dependency: 'getProductsByCategoryId'. Either include it or remove the dependency array.",["394"],"'disableResponse' is assigned a value but never used.","'activateResponse' is assigned a value but never used.","'deleteResponse' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getUsers', and 'rowCount'. Either include them or remove the dependency array.",["395"],"React Hook useEffect has a missing dependency: 'location.state?.selected'. Either include it or remove the dependency array.",["396"],["397"],"'loginResponse' is assigned a value but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ProcessBox' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["398"],"'createResponse' is assigned a value but never used.","'logoutResponse' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"401","fix":"411"},{"desc":"403","fix":"412"},{"desc":"405","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"401","fix":"418"},{"desc":"403","fix":"419"},{"desc":"405","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"405","fix":"435"},{"desc":"436","fix":"437"},"Update the dependencies array to be: [currentPage, deepSearch, getCategories, rowCount]",{"range":"438","text":"439"},"Update the dependencies array to be: [history.location.state]",{"range":"440","text":"441"},"Update the dependencies array to be: [createResponse, history]",{"range":"442","text":"443"},"Update the dependencies array to be: [history, updateResponse]",{"range":"444","text":"445"},"Update the dependencies array to be: [currentPage, deepSearch, getBrands, rowCount]",{"range":"446","text":"447"},"Update the dependencies array to be: [getCategories]",{"range":"448","text":"449"},{"range":"450","text":"441"},{"range":"451","text":"443"},{"range":"452","text":"445"},"Update the dependencies array to be: [stats]",{"range":"453","text":"454"},"Update the dependencies array to be: [getBrands, getCategories]",{"range":"455","text":"456"},{"range":"457","text":"441"},{"range":"458","text":"443"},{"range":"459","text":"445"},"Update the dependencies array to be: [currentPage, deepSearch, getProducts, rowCount]",{"range":"460","text":"461"},"Update the dependencies array to be: [options, value]",{"range":"462","text":"463"},"Update the dependencies array to be: [getBrandsByCategoryId]",{"range":"464","text":"465"},"Update the dependencies array to be: [multiple, value]",{"range":"466","text":"467"},"Update the dependencies array to be: [getProductsByCategoryId]",{"range":"468","text":"469"},"Update the dependencies array to be: [currentPage, deepSearch, getUsers, rowCount]",{"range":"470","text":"471"},"Update the dependencies array to be: [location.state?.selected]",{"range":"472","text":"473"},{"range":"474","text":"445"},"Update the dependencies array to be: []",{"range":"475","text":"476"},[1636,1638],"[currentPage, deepSearch, getCategories, rowCount]",[1483,1485],"[history.location.state]",[1585,1601],"[createResponse, history]",[1700,1716],"[history, updateResponse]",[1553,1555],"[currentPage, deepSearch, getBrands, rowCount]",[1481,1483],"[getCategories]",[2669,2671],[2767,2783],[2878,2894],[1383,1385],"[stats]",[2148,2150],"[getBrands, getCategories]",[2323,2325],[3137,3153],[3250,3266],[1597,1599],"[currentPage, deepSearch, getProducts, rowCount]",[1782,1789],"[options, value]",[609,611],"[getBrandsByCategoryId]",[1000,1007],"[multiple, value]",[633,635],"[getProductsByCategoryId]",[1540,1542],"[currentPage, deepSearch, getUsers, rowCount]",[1446,1448],"[location.state?.selected]",[1543,1559],[678,686],"[]"]