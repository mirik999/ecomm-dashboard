[{"/Users/mirik/Documents/Projects/ecomm-dashboard/src/index.tsx":"1","/Users/mirik/Documents/Projects/ecomm-dashboard/src/pages/Category/Category.page.tsx":"2","/Users/mirik/Documents/Projects/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx":"3","/Users/mirik/Documents/Projects/ecomm-dashboard/src/pages/Product/Product.page.tsx":"4","/Users/mirik/Documents/Projects/ecomm-dashboard/src/components/common/Input.tsx":"5","/Users/mirik/Documents/Projects/ecomm-dashboard/src/pages/Category/CreateCategory.page.tsx":"6","/Users/mirik/Documents/Projects/ecomm-dashboard/src/components/common/Table.tsx":"7","/Users/mirik/Documents/Projects/ecomm-dashboard/src/components/common/FakeTable.tsx":"8","/Users/mirik/Documents/Projects/ecomm-dashboard/src/components/common/WithToken.tsx":"9","/Users/mirik/Documents/Projects/ecomm-dashboard/src/pages/Auth/Auth.page.tsx":"10"},{"size":984,"mtime":1609829820536,"results":"11","hashOfConfig":"12"},{"size":4151,"mtime":1609833050132,"results":"13","hashOfConfig":"12"},{"size":4724,"mtime":1609829820538,"results":"14","hashOfConfig":"12"},{"size":4249,"mtime":1609833558566,"results":"15","hashOfConfig":"12"},{"size":1101,"mtime":1609829820533,"results":"16","hashOfConfig":"12"},{"size":3557,"mtime":1609829820538,"results":"17","hashOfConfig":"12"},{"size":7571,"mtime":1609834252243,"results":"18","hashOfConfig":"12"},{"size":643,"mtime":1609833858048,"results":"19","hashOfConfig":"12"},{"size":568,"mtime":1609829820535,"results":"20","hashOfConfig":"12"},{"size":989,"mtime":1609829820537,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1szvp7t",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mirik/Documents/Projects/ecomm-dashboard/src/index.tsx",[],["44","45"],"/Users/mirik/Documents/Projects/ecomm-dashboard/src/pages/Category/Category.page.tsx",["46"],"/Users/mirik/Documents/Projects/ecomm-dashboard/src/pages/Product/CreateProduct.page.tsx",["47","48","49","50","51","52"],"/Users/mirik/Documents/Projects/ecomm-dashboard/src/pages/Product/Product.page.tsx",["53"],"import React, { useEffect, useState } from 'react';\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\n//components\nimport Layout from \"../../components/common/Layout\";\nimport Table from \"../../components/common/Table\";\nimport ProcessBox from \"../../components/common/ProcessBox\";\nimport ErrorBox from \"../../components/common/ErrorBox\";\n//types\nimport { ProductType } from \"../../redux/types/product.type\";\n//request\nimport {\n  GET_PRODUCTS,\n  DISABLE_PRODUCTS,\n  ACTIVATE_PRODUCTS\n} from \"../../redux/requests/product.request\";\n\ntype Props = {};\n\nconst ProductPage: React.FC<Props> = (props) => {\n  const [GetProducts, getResponse] = useLazyQuery(GET_PRODUCTS);\n  const [DisableProducts, disableResponse] = useMutation(DISABLE_PRODUCTS);\n  const [ActivateProducts, activateResponse] = useMutation(ACTIVATE_PRODUCTS);\n  const [products, setProducts] = useState<ProductType[]>([]);\n  //pagination\n  const [allCount, setAllCount] = useState<number>(0);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  //deep search\n  const [deepSearch, setDeepSearch] = useState<string>('');\n\n  useEffect(() => {\n    if (getResponse.data) {\n      const { count, payload } = getResponse.data.getProducts;\n      console.log(payload)\n      setProducts(payload);\n      setAllCount(count);\n    }\n  }, [getResponse.data])\n\n  useEffect(() => {\n    (async function() {\n      await getProducts(currentPage, rowCount, deepSearch)\n    })()\n  }, [])\n\n  async function getProducts(pg: number, rc: number, kw: string): Promise<void> {\n    try {\n      await GetProducts({\n        variables: {\n          controls: {\n            offset: (pg - 1) * rc,\n            limit: rc,\n            keyword: kw\n          }\n        }\n      })\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getPageFromTable(pageNumber: number): Promise<void> {\n    setCurrentPage(pageNumber)\n    await getProducts(pageNumber, rowCount, deepSearch);\n  }\n\n  async function getRowCountFromTable(rc: number): Promise<void> {\n    setRowCount(rc);\n    await getProducts(currentPage, rc, deepSearch);\n  }\n\n  async function getDeepSearchFromTable(keyword: string): Promise<void> {\n    setDeepSearch(keyword);\n    await getProducts(currentPage, rowCount, keyword);\n  }\n\n  async function getIdAndDisable(ids: string[]): Promise<void> {\n    try {\n      await DisableProducts({\n        variables: {\n          disabledProducts: { ids }\n        }\n      })\n      handleProductsState(ids, true)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  async function getIdAndActivate(ids: string[]): Promise<void> {\n    try {\n      await ActivateProducts({\n        variables: {\n          activateProducts: { ids }\n        }\n      })\n      handleProductsState(ids, false)\n    } catch(err) {\n      console.log(err.message)\n    }\n  }\n\n  function handleProductsState(ids: string[], isDisabled: boolean) {\n    const updatedProducts = products.map(product => {\n      if (ids.includes(product.id)) {\n        return {\n          ...product,\n          isDisabled\n        }\n      }\n      return product;\n    })\n    setProducts(updatedProducts)\n  }\n\n  console.log(getResponse.loading)\n\n  return (\n    <Layout>\n      <h2 className=\"font-medium uppercase mx-4\">\n        Products\n      </h2>\n      {/*  table */}\n      <Table\n        data={products}\n        allCount={allCount}\n        getPage={getPageFromTable}\n        getRowCount={getRowCountFromTable}\n        getDeepSearch={getDeepSearchFromTable}\n        getIdAndDisable={getIdAndDisable}\n        getIdAndActivate={getIdAndActivate}\n        path=\"product\"\n        exclude={['id', 'category', 'cover', 'description', 'images']}\n        error={!!getResponse.error}\n      />\n      { getResponse.loading ? <ProcessBox /> : null }\n      { getResponse.error ? <ErrorBox message={getResponse.error.message} /> : null }\n\n      { activateResponse.loading ? <ProcessBox /> : null }\n      { activateResponse.error ? <ErrorBox message={activateResponse.error.message} /> : null }\n\n      { disableResponse.loading ? <ProcessBox /> : null }\n      { disableResponse.error ? <ErrorBox message={disableResponse.error.message} /> : null }\n    </Layout>\n  );\n};\n\nexport default ProductPage;\n","/Users/mirik/Documents/Projects/ecomm-dashboard/src/components/common/Input.tsx",[],"/Users/mirik/Documents/Projects/ecomm-dashboard/src/pages/Category/CreateCategory.page.tsx",["54","55","56"],"/Users/mirik/Documents/Projects/ecomm-dashboard/src/components/common/Table.tsx",[],"/Users/mirik/Documents/Projects/ecomm-dashboard/src/components/common/FakeTable.tsx",[],"/Users/mirik/Documents/Projects/ecomm-dashboard/src/components/common/WithToken.tsx",[],"/Users/mirik/Documents/Projects/ecomm-dashboard/src/pages/Auth/Auth.page.tsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":43,"column":6,"nodeType":"63","endLine":43,"endColumn":8,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":16,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":11,"column":10,"nodeType":"67","messageId":"68","endLine":11,"endColumn":21},{"ruleId":"61","severity":1,"message":"70","line":42,"column":6,"nodeType":"63","endLine":42,"endColumn":8,"suggestions":"71"},{"ruleId":"61","severity":1,"message":"72","line":48,"column":6,"nodeType":"63","endLine":48,"endColumn":22,"suggestions":"73"},{"ruleId":"61","severity":1,"message":"72","line":54,"column":6,"nodeType":"63","endLine":54,"endColumn":22,"suggestions":"74"},{"ruleId":"65","severity":1,"message":"75","line":80,"column":18,"nodeType":"67","messageId":"68","endLine":80,"endColumn":35},{"ruleId":"61","severity":1,"message":"76","line":44,"column":6,"nodeType":"63","endLine":44,"endColumn":8,"suggestions":"77"},{"ruleId":"61","severity":1,"message":"70","line":35,"column":6,"nodeType":"63","endLine":35,"endColumn":8,"suggestions":"78"},{"ruleId":"61","severity":1,"message":"72","line":41,"column":6,"nodeType":"63","endLine":41,"endColumn":22,"suggestions":"79"},{"ruleId":"61","severity":1,"message":"72","line":47,"column":6,"nodeType":"63","endLine":47,"endColumn":22,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getCategories', and 'rowCount'. Either include them or remove the dependency array.","ArrayExpression",["83"],"@typescript-eslint/no-unused-vars","'FormEvent' is defined but never used.","Identifier","unusedVar","'ProductType' is defined but never used.","React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.",["84"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["85"],["86"],"'handleImageUpload' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'deepSearch', 'getProducts', and 'rowCount'. Either include them or remove the dependency array.",["87"],["88"],["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"93","fix":"101"},{"desc":"95","fix":"102"},{"desc":"97","fix":"103"},"Update the dependencies array to be: [currentPage, deepSearch, getCategories, rowCount]",{"range":"104","text":"105"},"Update the dependencies array to be: [history.location.state]",{"range":"106","text":"107"},"Update the dependencies array to be: [createResponse, history]",{"range":"108","text":"109"},"Update the dependencies array to be: [history, updateResponse]",{"range":"110","text":"111"},"Update the dependencies array to be: [currentPage, deepSearch, getProducts, rowCount]",{"range":"112","text":"113"},{"range":"114","text":"107"},{"range":"115","text":"109"},{"range":"116","text":"111"},[1498,1500],"[currentPage, deepSearch, getCategories, rowCount]",[1278,1280],"[history.location.state]",[1377,1393],"[createResponse, history]",[1489,1505],"[history, updateResponse]",[1496,1498],"[currentPage, deepSearch, getProducts, rowCount]",[1205,1207],[1305,1321],[1418,1434]]